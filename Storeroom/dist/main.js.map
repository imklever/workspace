{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ceph/block/block.module.ts","webpack:///./src/app/ceph/block/iscsi/iscsi.component.html","webpack:///./src/app/ceph/block/iscsi/iscsi.component.scss","webpack:///./src/app/ceph/block/iscsi/iscsi.component.ts","webpack:///./src/app/ceph/block/mirror-health-color.pipe.ts","webpack:///./src/app/ceph/block/mirroring/mirroring.component.html","webpack:///./src/app/ceph/block/mirroring/mirroring.component.scss","webpack:///./src/app/ceph/block/mirroring/mirroring.component.ts","webpack:///./src/app/ceph/block/rbd-details/rbd-details.component.html","webpack:///./src/app/ceph/block/rbd-details/rbd-details.component.scss","webpack:///./src/app/ceph/block/rbd-details/rbd-details.component.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form-clone-request.model.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form-copy-request.model.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form-create-request.model.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form-edit-request.model.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form-mode.enum.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form.component.html","webpack:///./src/app/ceph/block/rbd-form/rbd-form.component.scss","webpack:///./src/app/ceph/block/rbd-form/rbd-form.component.ts","webpack:///./src/app/ceph/block/rbd-form/rbd-form.model.ts","webpack:///./src/app/ceph/block/rbd-list/rbd-list.component.html","webpack:///./src/app/ceph/block/rbd-list/rbd-list.component.scss","webpack:///./src/app/ceph/block/rbd-list/rbd-list.component.ts","webpack:///./src/app/ceph/block/rbd-list/rbd-model.ts","webpack:///./src/app/ceph/block/rbd-snapshot-form/rbd-snapshot-form.component.html","webpack:///./src/app/ceph/block/rbd-snapshot-form/rbd-snapshot-form.component.scss","webpack:///./src/app/ceph/block/rbd-snapshot-form/rbd-snapshot-form.component.ts","webpack:///./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-list.component.html","webpack:///./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-list.component.scss","webpack:///./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot-list.component.ts","webpack:///./src/app/ceph/block/rbd-snapshot-list/rbd-snapshot.model.ts","webpack:///./src/app/ceph/ceph.module.ts","webpack:///./src/app/ceph/cephfs/cephfs-chart/cephfs-chart.component.html","webpack:///./src/app/ceph/cephfs/cephfs-chart/cephfs-chart.component.scss","webpack:///./src/app/ceph/cephfs/cephfs-chart/cephfs-chart.component.ts","webpack:///./src/app/ceph/cephfs/cephfs-clients/cephfs-clients.component.html","webpack:///./src/app/ceph/cephfs/cephfs-clients/cephfs-clients.component.scss","webpack:///./src/app/ceph/cephfs/cephfs-clients/cephfs-clients.component.ts","webpack:///./src/app/ceph/cephfs/cephfs-detail/cephfs-detail.component.html","webpack:///./src/app/ceph/cephfs/cephfs-detail/cephfs-detail.component.scss","webpack:///./src/app/ceph/cephfs/cephfs-detail/cephfs-detail.component.ts","webpack:///./src/app/ceph/cephfs/cephfs-list/cephfs-list.component.html","webpack:///./src/app/ceph/cephfs/cephfs-list/cephfs-list.component.scss","webpack:///./src/app/ceph/cephfs/cephfs-list/cephfs-list.component.ts","webpack:///./src/app/ceph/cephfs/cephfs.module.ts","webpack:///./src/app/ceph/cluster/cluster.module.ts","webpack:///./src/app/ceph/cluster/configuration/configuration.component.html","webpack:///./src/app/ceph/cluster/configuration/configuration.component.scss","webpack:///./src/app/ceph/cluster/configuration/configuration.component.ts","webpack:///./src/app/ceph/cluster/crushmap/crushmap.component.html","webpack:///./src/app/ceph/cluster/crushmap/crushmap.component.scss","webpack:///./src/app/ceph/cluster/crushmap/crushmap.component.ts","webpack:///./src/app/ceph/cluster/hosts/hosts.component.html","webpack:///./src/app/ceph/cluster/hosts/hosts.component.scss","webpack:///./src/app/ceph/cluster/hosts/hosts.component.ts","webpack:///./src/app/ceph/cluster/monitor/monitor.component.html","webpack:///./src/app/ceph/cluster/monitor/monitor.component.scss","webpack:///./src/app/ceph/cluster/monitor/monitor.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-details/osd-details.component.html","webpack:///./src/app/ceph/cluster/osd/osd-details/osd-details.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-details/osd-details.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-flags-modal/osd-flags-modal.component.html","webpack:///./src/app/ceph/cluster/osd/osd-flags-modal/osd-flags-modal.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-flags-modal/osd-flags-modal.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-in-out-modal/osd-in-out-modal.component.html","webpack:///./src/app/ceph/cluster/osd/osd-in-out-modal/osd-in-out-modal.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-in-out-modal/osd-in-out-modal.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-list/osd-list.component.html","webpack:///./src/app/ceph/cluster/osd/osd-list/osd-list.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-list/osd-list.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-performance-histogram/osd-performance-histogram.component.html","webpack:///./src/app/ceph/cluster/osd/osd-performance-histogram/osd-performance-histogram.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-performance-histogram/osd-performance-histogram.component.ts","webpack:///./src/app/ceph/cluster/osd/osd-scrub-modal/osd-scrub-modal.component.html","webpack:///./src/app/ceph/cluster/osd/osd-scrub-modal/osd-scrub-modal.component.scss","webpack:///./src/app/ceph/cluster/osd/osd-scrub-modal/osd-scrub-modal.component.ts","webpack:///./src/app/ceph/dashboard/dashboard.module.ts","webpack:///./src/app/ceph/dashboard/dashboard/dashboard.component.html","webpack:///./src/app/ceph/dashboard/dashboard/dashboard.component.scss","webpack:///./src/app/ceph/dashboard/dashboard/dashboard.component.ts","webpack:///./src/app/ceph/dashboard/health-pie/health-pie.component.html","webpack:///./src/app/ceph/dashboard/health-pie/health-pie.component.scss","webpack:///./src/app/ceph/dashboard/health-pie/health-pie.component.ts","webpack:///./src/app/ceph/dashboard/health/health.component.html","webpack:///./src/app/ceph/dashboard/health/health.component.scss","webpack:///./src/app/ceph/dashboard/health/health.component.ts","webpack:///./src/app/ceph/dashboard/info-card/info-card.component.html","webpack:///./src/app/ceph/dashboard/info-card/info-card.component.scss","webpack:///./src/app/ceph/dashboard/info-card/info-card.component.ts","webpack:///./src/app/ceph/dashboard/log-color.pipe.ts","webpack:///./src/app/ceph/dashboard/mds-summary.pipe.ts","webpack:///./src/app/ceph/dashboard/mgr-summary.pipe.ts","webpack:///./src/app/ceph/dashboard/mon-summary.pipe.ts","webpack:///./src/app/ceph/dashboard/osd-summary.pipe.ts","webpack:///./src/app/ceph/dashboard/pg-status-style.pipe.ts","webpack:///./src/app/ceph/dashboard/pg-status.pipe.ts","webpack:///./src/app/ceph/performance-counter/performance-counter.module.ts","webpack:///./src/app/ceph/performance-counter/performance-counter/performance-counter.component.html","webpack:///./src/app/ceph/performance-counter/performance-counter/performance-counter.component.scss","webpack:///./src/app/ceph/performance-counter/performance-counter/performance-counter.component.ts","webpack:///./src/app/ceph/performance-counter/table-performance-counter/table-performance-counter.component.html","webpack:///./src/app/ceph/performance-counter/table-performance-counter/table-performance-counter.component.scss","webpack:///./src/app/ceph/performance-counter/table-performance-counter/table-performance-counter.component.ts","webpack:///./src/app/ceph/pool/pool-form/pool-form-mode.enum.ts","webpack:///./src/app/ceph/pool/pool-form/pool-form.component.html","webpack:///./src/app/ceph/pool/pool-form/pool-form.component.scss","webpack:///./src/app/ceph/pool/pool-form/pool-form.component.ts","webpack:///./src/app/ceph/pool/pool-list/pool-list.component.html","webpack:///./src/app/ceph/pool/pool-list/pool-list.component.scss","webpack:///./src/app/ceph/pool/pool-list/pool-list.component.ts","webpack:///./src/app/ceph/pool/pool.module.ts","webpack:///./src/app/ceph/rgw/models/rgw-user-subuser.ts","webpack:///./src/app/ceph/rgw/rgw-501/rgw-501.component.html","webpack:///./src/app/ceph/rgw/rgw-501/rgw-501.component.scss","webpack:///./src/app/ceph/rgw/rgw-501/rgw-501.component.ts","webpack:///./src/app/ceph/rgw/rgw-bucket-details/rgw-bucket-details.component.html","webpack:///./src/app/ceph/rgw/rgw-bucket-details/rgw-bucket-details.component.scss","webpack:///./src/app/ceph/rgw/rgw-bucket-details/rgw-bucket-details.component.ts","webpack:///./src/app/ceph/rgw/rgw-bucket-form/rgw-bucket-form.component.html","webpack:///./src/app/ceph/rgw/rgw-bucket-form/rgw-bucket-form.component.scss","webpack:///./src/app/ceph/rgw/rgw-bucket-form/rgw-bucket-form.component.ts","webpack:///./src/app/ceph/rgw/rgw-bucket-list/rgw-bucket-list.component.html","webpack:///./src/app/ceph/rgw/rgw-bucket-list/rgw-bucket-list.component.scss","webpack:///./src/app/ceph/rgw/rgw-bucket-list/rgw-bucket-list.component.ts","webpack:///./src/app/ceph/rgw/rgw-daemon-details/rgw-daemon-details.component.html","webpack:///./src/app/ceph/rgw/rgw-daemon-details/rgw-daemon-details.component.scss","webpack:///./src/app/ceph/rgw/rgw-daemon-details/rgw-daemon-details.component.ts","webpack:///./src/app/ceph/rgw/rgw-daemon-list/rgw-daemon-list.component.html","webpack:///./src/app/ceph/rgw/rgw-daemon-list/rgw-daemon-list.component.scss","webpack:///./src/app/ceph/rgw/rgw-daemon-list/rgw-daemon-list.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-capability-modal/rgw-user-capability-modal.component.html","webpack:///./src/app/ceph/rgw/rgw-user-capability-modal/rgw-user-capability-modal.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-capability-modal/rgw-user-capability-modal.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-details/rgw-user-details.component.html","webpack:///./src/app/ceph/rgw/rgw-user-details/rgw-user-details.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-details/rgw-user-details.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-form/rgw-user-form.component.html","webpack:///./src/app/ceph/rgw/rgw-user-form/rgw-user-form.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-form/rgw-user-form.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-list/rgw-user-list.component.html","webpack:///./src/app/ceph/rgw/rgw-user-list/rgw-user-list.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-list/rgw-user-list.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-s3-key-modal/rgw-user-s3-key-modal.component.html","webpack:///./src/app/ceph/rgw/rgw-user-s3-key-modal/rgw-user-s3-key-modal.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-s3-key-modal/rgw-user-s3-key-modal.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-subuser-modal/rgw-user-subuser-modal.component.html","webpack:///./src/app/ceph/rgw/rgw-user-subuser-modal/rgw-user-subuser-modal.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-subuser-modal/rgw-user-subuser-modal.component.ts","webpack:///./src/app/ceph/rgw/rgw-user-swift-key-modal/rgw-user-swift-key-modal.component.html","webpack:///./src/app/ceph/rgw/rgw-user-swift-key-modal/rgw-user-swift-key-modal.component.scss","webpack:///./src/app/ceph/rgw/rgw-user-swift-key-modal/rgw-user-swift-key-modal.component.ts","webpack:///./src/app/ceph/rgw/rgw.module.ts","webpack:///./src/app/core/auth/auth.module.ts","webpack:///./src/app/core/auth/login/login.component.html","webpack:///./src/app/core/auth/login/login.component.scss","webpack:///./src/app/core/auth/login/login.component.ts","webpack:///./src/app/core/auth/logout/logout.component.html","webpack:///./src/app/core/auth/logout/logout.component.scss","webpack:///./src/app/core/auth/logout/logout.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/forbidden/forbidden.component.html","webpack:///./src/app/core/forbidden/forbidden.component.scss","webpack:///./src/app/core/forbidden/forbidden.component.ts","webpack:///./src/app/core/navigation/about/about.component.html","webpack:///./src/app/core/navigation/about/about.component.scss","webpack:///./src/app/core/navigation/about/about.component.ts","webpack:///./src/app/core/navigation/administration/administration.component.html","webpack:///./src/app/core/navigation/administration/administration.component.scss","webpack:///./src/app/core/navigation/administration/administration.component.ts","webpack:///./src/app/core/navigation/dashboard-help/dashboard-help.component.html","webpack:///./src/app/core/navigation/dashboard-help/dashboard-help.component.scss","webpack:///./src/app/core/navigation/dashboard-help/dashboard-help.component.ts","webpack:///./src/app/core/navigation/navigation.module.ts","webpack:///./src/app/core/navigation/navigation/navigation.component.html","webpack:///./src/app/core/navigation/navigation/navigation.component.scss","webpack:///./src/app/core/navigation/navigation/navigation.component.ts","webpack:///./src/app/core/navigation/notifications/notifications.component.html","webpack:///./src/app/core/navigation/notifications/notifications.component.scss","webpack:///./src/app/core/navigation/notifications/notifications.component.ts","webpack:///./src/app/core/navigation/task-manager/task-manager.component.html","webpack:///./src/app/core/navigation/task-manager/task-manager.component.scss","webpack:///./src/app/core/navigation/task-manager/task-manager.component.ts","webpack:///./src/app/core/not-found/not-found.component.html","webpack:///./src/app/core/not-found/not-found.component.scss","webpack:///./src/app/core/not-found/not-found.component.ts","webpack:///./src/app/shared/api/api.module.ts","webpack:///./src/app/shared/api/auth.service.ts","webpack:///./src/app/shared/api/cephfs.service.ts","webpack:///./src/app/shared/api/configuration.service.ts","webpack:///./src/app/shared/api/dashboard.service.ts","webpack:///./src/app/shared/api/host.service.ts","webpack:///./src/app/shared/api/logging.service.ts","webpack:///./src/app/shared/api/monitor.service.ts","webpack:///./src/app/shared/api/osd.service.ts","webpack:///./src/app/shared/api/performance-counter.service.ts","webpack:///./src/app/shared/api/pool.service.ts","webpack:///./src/app/shared/api/rbd-mirroring.service.ts","webpack:///./src/app/shared/api/rbd.service.ts","webpack:///./src/app/shared/api/rgw-bucket.service.ts","webpack:///./src/app/shared/api/rgw-daemon.service.ts","webpack:///./src/app/shared/api/rgw-user.service.ts","webpack:///./src/app/shared/api/tcmu-iscsi.service.ts","webpack:///./src/app/shared/components/components.module.ts","webpack:///./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","webpack:///./src/app/shared/components/confirmation-modal/confirmation-modal.component.scss","webpack:///./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","webpack:///./src/app/shared/components/deletion-modal/deletion-modal.component.html","webpack:///./src/app/shared/components/deletion-modal/deletion-modal.component.scss","webpack:///./src/app/shared/components/deletion-modal/deletion-modal.component.ts","webpack:///./src/app/shared/components/error-panel/error-panel.component.html","webpack:///./src/app/shared/components/error-panel/error-panel.component.scss","webpack:///./src/app/shared/components/error-panel/error-panel.component.ts","webpack:///./src/app/shared/components/helper/helper.component.html","webpack:///./src/app/shared/components/helper/helper.component.scss","webpack:///./src/app/shared/components/helper/helper.component.ts","webpack:///./src/app/shared/components/info-panel/info-panel.component.html","webpack:///./src/app/shared/components/info-panel/info-panel.component.scss","webpack:///./src/app/shared/components/info-panel/info-panel.component.ts","webpack:///./src/app/shared/components/loading-panel/loading-panel.component.html","webpack:///./src/app/shared/components/loading-panel/loading-panel.component.scss","webpack:///./src/app/shared/components/loading-panel/loading-panel.component.ts","webpack:///./src/app/shared/components/modal/modal.component.html","webpack:///./src/app/shared/components/modal/modal.component.scss","webpack:///./src/app/shared/components/modal/modal.component.ts","webpack:///./src/app/shared/components/sparkline/sparkline.component.html","webpack:///./src/app/shared/components/sparkline/sparkline.component.scss","webpack:///./src/app/shared/components/sparkline/sparkline.component.ts","webpack:///./src/app/shared/components/submit-button/submit-button.component.html","webpack:///./src/app/shared/components/submit-button/submit-button.component.scss","webpack:///./src/app/shared/components/submit-button/submit-button.component.ts","webpack:///./src/app/shared/components/usage-bar/usage-bar.component.html","webpack:///./src/app/shared/components/usage-bar/usage-bar.component.scss","webpack:///./src/app/shared/components/usage-bar/usage-bar.component.ts","webpack:///./src/app/shared/components/view-cache/view-cache.component.html","webpack:///./src/app/shared/components/view-cache/view-cache.component.scss","webpack:///./src/app/shared/components/view-cache/view-cache.component.ts","webpack:///./src/app/shared/datatable/datatable.module.ts","webpack:///./src/app/shared/datatable/table-key-value/table-key-value.component.html","webpack:///./src/app/shared/datatable/table-key-value/table-key-value.component.scss","webpack:///./src/app/shared/datatable/table-key-value/table-key-value.component.ts","webpack:///./src/app/shared/datatable/table/table.component.html","webpack:///./src/app/shared/datatable/table/table.component.scss","webpack:///./src/app/shared/datatable/table/table.component.ts","webpack:///./src/app/shared/decorators/cd-encode.ts","webpack:///./src/app/shared/directives/autofocus.directive.ts","webpack:///./src/app/shared/directives/copy2clipboard-button.directive.ts","webpack:///./src/app/shared/directives/dimless-binary.directive.ts","webpack:///./src/app/shared/directives/password-button.directive.ts","webpack:///./src/app/shared/empty.pipe.ts","webpack:///./src/app/shared/enum/cell-template.enum.ts","webpack:///./src/app/shared/enum/components.enum.ts","webpack:///./src/app/shared/enum/notification-type.enum.ts","webpack:///./src/app/shared/enum/view-cache-status.enum.ts","webpack:///./src/app/shared/forms/cd-form-builder.ts","webpack:///./src/app/shared/forms/cd-form-group.ts","webpack:///./src/app/shared/forms/cd-validators.ts","webpack:///./src/app/shared/models/cd-notification.ts","webpack:///./src/app/shared/models/cd-table-selection.ts","webpack:///./src/app/shared/models/chart-tooltip.ts","webpack:///./src/app/shared/models/credentials.ts","webpack:///./src/app/shared/models/executing-task.ts","webpack:///./src/app/shared/models/finished-task.ts","webpack:///./src/app/shared/models/permissions.ts","webpack:///./src/app/shared/models/task.ts","webpack:///./src/app/shared/pipes/cd-date.pipe.ts","webpack:///./src/app/shared/pipes/ceph-release-name.pipe.ts","webpack:///./src/app/shared/pipes/ceph-short-version.pipe.ts","webpack:///./src/app/shared/pipes/dimless-binary.pipe.ts","webpack:///./src/app/shared/pipes/dimless.pipe.ts","webpack:///./src/app/shared/pipes/encode-uri.pipe.ts","webpack:///./src/app/shared/pipes/filter.pipe.ts","webpack:///./src/app/shared/pipes/health-color.pipe.ts","webpack:///./src/app/shared/pipes/list.pipe.ts","webpack:///./src/app/shared/pipes/pipes.module.ts","webpack:///./src/app/shared/pipes/relative-date.pipe.ts","webpack:///./src/app/shared/services/api-interceptor.service.ts","webpack:///./src/app/shared/services/auth-guard.service.ts","webpack:///./src/app/shared/services/auth-storage.service.ts","webpack:///./src/app/shared/services/formatter.service.ts","webpack:///./src/app/shared/services/js-error-handler.service.ts","webpack:///./src/app/shared/services/module-status-guard.service.ts","webpack:///./src/app/shared/services/notification.service.ts","webpack:///./src/app/shared/services/services.module.ts","webpack:///./src/app/shared/services/summary.service.ts","webpack:///./src/app/shared/services/task-manager-message.service.ts","webpack:///./src/app/shared/services/task-manager.service.ts","webpack:///./src/app/shared/services/task-wrapper.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEa;AACY;AACJ;AACA;AACU;AACQ;AACxB;AACS;AACH;AACM;AACE;AACuC;AAC7C;AACA;AACP;AACuB;AACA;AACA;AACN;AACA;AACrB;AACO;AACD;AACD;AACiB;AAEzF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iGAAkB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACrF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kFAAc,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC7E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kFAAc,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC7E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,oFAAe,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACzF;QACE,IAAI,EAAE,KAAK;QACX,gBAAgB,EAAE,CAAC,sGAAwB,CAAC;QAC5C,IAAI,EAAE;YACJ,uBAAuB,EAAE;gBACvB,OAAO,EAAE,KAAK;gBACd,UAAU,EAAE,SAAS;aACtB;SACF;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,2GAAsB;gBACjC,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,qGAAoB;gBAC/B,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,qGAAoB;gBAC/B,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,qGAAoB;gBAC/B,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,2GAAsB;gBACjC,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,2GAAsB;gBACjC,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;YACD;gBACE,IAAI,EAAE,qBAAqB;gBAC3B,SAAS,EAAE,2GAAsB;gBACjC,WAAW,EAAE,CAAC,qFAAgB,CAAC;aAChC;SACF;KACF;IACD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,gFAAc,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wFAAgB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wFAAgB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,wFAAgB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC9F,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACnF;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,wFAAgB;QAC3B,WAAW,EAAE,CAAC,qFAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,wFAAgB;QAC3B,WAAW,EAAE,CAAC,qFAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,wFAAgB;QAC3B,WAAW,EAAE,CAAC,qFAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,wIAA2B;QACtC,WAAW,EAAE,CAAC,qFAAgB,CAAC;KAChC;IACD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yFAAgB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kGAAmB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,0GAAsB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC7F,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IACrF,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,uFAAkB,EAAE;IAC9C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,sFAAiB,EAAE;IAC7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAE,CAAC,qFAAgB,CAAC,EAAE;IAC7E,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE;CACnC,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC5H7B,oIAAoI,8BAA8B,uD;;;;;;;;;;;ACAlK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AACnB;AAEE;AAEiC;AAO5E;IAGE,sBACU,kBAAsC,EACtC,MAAc,EACf,MAAqB,EACpB,GAAqB;QAHrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAe;QACpB,QAAG,GAAH,GAAG,CAAkB;QAN/B,UAAK,GAAG,IAAI,CAAC;QAQX,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,oCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;IAC1E,CAAC;IAdU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAK8B,wFAAkB;YAC9B,sDAAM;YACP,wDAAa;YACf,8DAAgB;OAPpB,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZkD;AACpB;AACG;AACqB;AAEb;AAEY;AACtB;AACT;AACC;AACA;AACkC;AACN;AACtB;AAEtD;IAAkC,gCAAY;IAA9C;QAAA,qEAKC;QAJC,aAAO,GAAG,UAAU,CAAC;QACrB,iBAAW,GAAG,IAAI,CAAC;QACnB,qBAAe,GAAG,IAAI,CAAC;QACvB,gBAAU,GAAG,IAAI,CAAC;;IACpB,CAAC;IAAD,mBAAC;AAAD,CAAC,CALiC,kEAAY,GAK7C;;AAqCD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,qEAAgB;gBAChB,uEAAa;gBACb,4FAAuB;gBACvB,iEAAW,CAAC,OAAO,EAAE;gBACrB,oEAAgB;gBAChB,4DAAU;gBACV,mEAAY;gBACZ,4DAAU;gBACV,6DAAe,CAAC,OAAO,EAAE;gBACzB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,wDAAU,CAAC,OAAO,EAAE;aACrB;YACD,OAAO,EAAE,CAAC,mEAAY,CAAC;YACvB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,0DAAY;oBACrB,QAAQ,EAAE,yFAAc;iBACzB;gBACD;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,+FAAqB;oBAC/B,KAAK,EAAE,IAAI;iBACZ;gBACD;oBACE,OAAO,EAAE,kEAAY;oBACrB,QAAQ,EAAE,YAAY;iBACvB;aACF;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DyB;AACN;AACyB;AACnB;AAE0C;AAC3B;AAEJ;AACD;AACU;AACE;AACK;AACT;AACA;AAC0B;AACA;AA2B3F;IAAA;IAA0B,CAAC;IAAd,WAAW;QAzBvB,8DAAQ,CAAC;YACR,eAAe,EAAE,CAAC,uFAAmB,EAAE,wGAAwB,CAAC;YAChE,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU,CAAC,OAAO,EAAE;gBACpB,2EAAiB,CAAC,OAAO,EAAE;gBAC3B,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,2DAAa,CAAC,OAAO,EAAE;gBACvB,yDAAW,CAAC,OAAO,EAAE;gBACrB,kEAAY;gBACZ,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,8EAAgB;gBAChB,qEAAc;gBACd,iFAAkB;gBAClB,+EAAqB;gBACrB,uFAAmB;gBACnB,8EAAgB;gBAChB,wGAAwB;gBACxB,wGAAwB;aACzB;SACF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;AC3CxB,4gB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEgC;AACH;AACc;AACpB;AACN;AACiB;AAO5E;IAOE,wBAAoB,gBAAkC,EAC1C,oBAA0C,EAC1C,WAAwB,EACxB,gBAAkC,EAClC,QAAkB;QAJV,qBAAgB,GAAhB,gBAAgB,CAAkB;QALtD,YAAO,GAAG,EAAE,CAAC;QAEb,WAAM,GAAG,EAAE,CAAC;QAQV,IAAI,CAAC,cAAc,GAAG;YACpB;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,iBAAiB;aACxB;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,iBAAiB;aACxB;YACD;gBACE,IAAI,EAAE,wBAAwB;gBAC9B,IAAI,EAAE,qBAAqB;aAC5B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,oBAAoB;aAC3B;SACF,CAAC;QACF,IAAI,CAAC,aAAa,GAAG;YACnB;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,WAAW;aAClB;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,MAAM;aACb;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,QAAQ;aACf;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE,qBAAqB;gBAC3B,IAAI,EAAE,QAAQ;aACf;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,wBAAwB;gBAC9B,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,wBAAwB;gBAC9B,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,WAAW;gBACjB,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,WAAW;gBACjB,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,gBAAgB;aACvB;SACF,CAAC;IAEJ,CAAC;IAED,gCAAO,GAAP;QAAA,iBAUC;QATC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK;gBACpB,KAAK,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC;gBAC3E,KAAK,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC;gBAC3E,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IA3FU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAQsC,+EAAgB;YACpB,0FAAoB;YAC7B,sEAAW;YACN,iFAAgB;YACxB,gEAAQ;OAXnB,cAAc,CA6F1B;IAAD,qBAAC;CAAA;AA7F0B;;;;;;;;;;;;;;;;;;;;;;ACdyB;AAKpD;IAAA;IAWA,CAAC;IAVC,yCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,qBAAqB,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,oBAAoB,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,qBAAqB,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,kBAAkB,CAAC;IAC5B,CAAC;IAVU,qBAAqB;QAHjC,0DAAI,CAAC;YACJ,IAAI,EAAE,mBAAmB;SAC1B,CAAC;OACW,qBAAqB,CAWjC;IAAD,4BAAC;CAAA;AAXiC;;;;;;;;;;;;ACLlC,0uEAA0uE,SAAS,iLAAiL,SAAS,4R;;;;;;;;;;;ACA76E,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AAEM;AAEK;AAOrF;IA8BE,4BACU,mBAAwC,EACxC,oBAA0C;QAD1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAvBpD,YAAO,GAAG;YACR,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,UAAK,GAAG;YACN,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,gBAAW,GAAG;YACZ,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,kBAAa,GAAG;YACd,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,gBAAW,GAAG;YACZ,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;IAKC,CAAC;IAEJ,qCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG;YACrB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,EAAE;YACtD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE;YACvC,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC1D;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,IAAI,CAAC,oBAAoB;gBAC/B,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,IAAI,CAAC,UAAU;gBAC7B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG;YACnB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC3C,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE;YAClD,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE;YAClD,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC3D,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC7D;gBACE,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,IAAI,CAAC,UAAU;gBAC7B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG;YACzB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC5C,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE;YACnD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,IAAI,CAAC,SAAS;gBAC5B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG;YAC3B,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC5C;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,IAAI,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG;YACzB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE;YAChD,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC5C,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,EAAE;YACzD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,IAAI,CAAC,SAAS;gBAC5B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,oCAAO,GAAP;QAAA,iBAUC;QATC,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACjD,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC9C,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACtD,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YAC1D,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAEtD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAvHwB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,yDAAW;0DAAM;IAC9B;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,yDAAW;yDAAM;IAC7B;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,yDAAW;wDAAM;IACvB;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;4DAAM;IAJ/C,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAgC+B,qFAAmB;YAClB,0FAAoB;OAhCzC,kBAAkB,CAyH9B;IAAD,yBAAC;CAAA;AAzH8B;;;;;;;;;;;;ACX/B,8dAA8d,qBAAqB,4IAA4I,0BAA0B,iJAAiJ,kCAAkC,+IAA+I,mCAAmC,4IAA4I,qCAAqC,+IAA+I,mCAAmC,mJAAmJ,yCAAyC,oSAAoS,WAAW,6gBAA6gB,2CAA2C,0gBAA0gB,iDAAiD,gLAAgL,4CAA4C,sJAAsJ,6BAA6B,8LAA8L,iCAAiC,GAAG,kCAAkC,GAAG,iCAAiC,mOAAmO,kCAAkC,6IAA6I,sBAAsB,wa;;;;;;;;;;;ACA9hI,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAEiB;AAO7E;IAKE;IAAgB,CAAC;IAEjB,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC7C,CAAC;IACH,CAAC;IATQ;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;0DAAC;IAF1B,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAY/B;IAAD,0BAAC;CAAA;AAZ+B;;;;;;;;;;;;;;ACThC;AAAA;IAAA;QAIE,aAAQ,GAAkB,EAAE,CAAC;IAI/B,CAAC;IAAD,+BAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACRD;AAAA;IAAA;QAKE,aAAQ,GAAkB,EAAE,CAAC;IAI/B,CAAC;IAAD,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+C;AAEhD;IAA+C,6CAAY;IAA3D;QAAA,qEAEC;QADC,cAAQ,GAAkB,EAAE,CAAC;;IAC/B,CAAC;IAAD,gCAAC;AAAD,CAAC,CAF8C,4DAAY,GAE1D;;;;;;;;;;;;;;;ACJD;AAAA;IAAA;QAGE,aAAQ,GAAkB,EAAE,CAAC;IAC/B,CAAC;IAAD,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACJD,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,kCAAmB;IACnB,kCAAmB;IACnB,kCAAmB;AACrB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;;;;;;;;;;;;ACJD,qQAAqQ,uBAAuB,KAAK,UAAU,MAAM,UAAU,KAAK,QAAQ,KAAK,kTAAkT,uBAAuB,KAAK,UAAU,MAAM,UAAU,KAAK,QAAQ,KAAK,qPAAqP,uBAAuB,WAAW,UAAU,UAAU,qBAAqB,QAAQ,ySAAyS,gDAAgD,ilBAAilB,gDAAgD,uiCAAuiC,kBAAkB,uwBAAuwB,oDAAoD,4zCAA4zC,sBAAsB,mTAAmT,gDAAgD,s0BAAs0B,2FAA2F,+UAA+U,eAAe,YAAY,eAAe,uBAAuB,eAAe,kCAAkC,eAAe,KAAK,gBAAgB,yEAAyE,sBAAsB,ojBAAojB,oDAAoD,4VAA4V,cAAc,8JAA8J,wDAAwD,4iBAA4iB,cAAc,6jBAA6jB,yDAAyD,+iCAA+iC,uBAAuB,OAAO,UAAU,MAAM,UAAU,KAAK,QAAQ,QAAQ,mP;;;;;;;;;;;ACA38U,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACoB;AACb;AAE7B;AAGmC;AACF;AACK;AACE;AAEU;AACK;AACL;AACK;AACT;AACF;AACI;AACJ;AACrB;AAQnD;IA+CE,0BACU,kBAAsC,EACtC,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,UAAsB,EACtB,SAA2B,EAC3B,WAA+B,EAC/B,iBAAoC;QAPpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAkB;QAC3B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QA5C9C,UAAK,GAAkB,IAAI,CAAC;QAC5B,aAAQ,GAAkB,IAAI,CAAC;QAC/B,cAAS,GAAkB,IAAI,CAAC;QAChC,iBAAY,GAAkB,IAAI,CAAC;QAEnC,iBAAY,GAAG,EAAE,CAAC;QAIlB,oBAAe,GAAG,KAAK,CAAC;QAEjB,gBAAW,GAAG,gEAAW,CAAC;QAMjC,sBAAiB,GAAG,OAAO,CAAC;QAE5B,gBAAW,GAAkB;YAC3B,OAAO;YACP,OAAO;YACP,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,SAAS;YACT,SAAS;YACT,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,QAAQ;SACT,CAAC;QAYA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;QACpE,IAAI,CAAC,QAAQ,GAAG;YACd,cAAc,EAAE;gBACd,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,KAAK;gBAClB,YAAY,EAAE,IAAI;aACnB;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,KAAK;gBAClB,YAAY,EAAE,KAAK;aACpB;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;aACnB;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,sCAAsC;gBAC5C,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;aACnB;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,sCAAsC;gBAC5C,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;aACnB;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,iCAAiC;gBACvC,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;aACnB;SACF,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,GAAG,CAAC,CAAc,UAA0B,EAA1B,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA1B,cAA0B,EAA1B,IAA0B;YAAvC,IAAM,GAAG;YACZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClC;IAEH,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,sBAAsB,GAAG,IAAI,0DAAW,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,0DAAW,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,wBAAwB,GAAG,IAAI,0DAAW,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,oBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,qBAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,mBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,kBAAkB,GAAG,IAAI,uEAAW,CAAC;YACxC,cAAc,EAAE,IAAI,CAAC,sBAAsB;YAC3C,QAAQ,EAAE,IAAI,CAAC,mBAAmB;YAClC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB;YAC/C,YAAY,EAAE,IAAI,CAAC,oBAAoB;YACvC,UAAU,EAAE,IAAI,CAAC,qBAAqB;YACtC,WAAW,EAAE,IAAI,CAAC,mBAAmB;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,uEAAW,CAC5B;YACE,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;aAClC,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC1B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;aAClC,CAAC;YACF,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACnC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC/B,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC1B,QAAQ,EAAE,MAAM;aACjB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,QAAQ,EAAE,IAAI,CAAC,kBAAkB;YACjC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACnC,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACnC,QAAQ,EAAE,MAAM;aACjB,CAAC;SACH,EACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CACrC,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;IAED,0CAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA+EC;QA9EC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QACD,EAAE,CAAC,CACD,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO;YACtC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO;YACtC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OACjC,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAoD;gBAC/E,IAAM,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAChD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClD,CAAC;gBACD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAA0B;oBAC1E,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,eAA8B;gBACzE,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,aAAa,EAAE,sBAAsB,CAAC,CAAC;iBAClE,IAAI,CAAC,UAAC,IAAI;gBACT,IAAM,KAAK,GAAG,EAAE,CAAC;gBACjB,IAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,GAAG,CAAC,CAAe,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;oBAAlB,IAAM,IAAI;oBACb,EAAE,CAAC,CAAC,8CAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC;4BAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACjB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACvB,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,CAAC,IAAI,KAAK,SAAS;4BACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CACjD,CAAC,CAAC,CAAC;4BACD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACvB,CAAC;oBACH,CAAC;iBACF;gBACD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAC9B,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;oBAC5C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC5C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACpD,KAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACzD,KAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACrD,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACtD,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACpD,KAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,gBAAgB;QAC3B,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,QAAa;YAC1D,MAAM,CAAC,QAAQ,CAAC,SAAS,KAAK,gBAAgB,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,gBAAgB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;IAChC,CAAC;IAED,8CAAmB,GAAnB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,2CAAgB,GAAhB,UAAiB,oBAAoB;QACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAS;YAC9C,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,oBAAoB,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,oBAAoB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IACxB,CAAC;IAED,0CAAe,GAAf,UAAgB,SAA2B;QAA3C,iBAkDC;QAjDC,MAAM,CAAC,UAAC,SAAsB;YAC5B,YAAY;YACZ,IAAM,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACxD,IAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAClD,IAAI,qBAAqB,GAAG,IAAI,CAAC;YACjC,EAAE,CAAC,CAAC,kBAAkB,CAAC,KAAK,IAAI,eAAe,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9D,qBAAqB,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC7C,CAAC;YACD,eAAe,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YACjD,OAAO;YACP,IAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAM,iBAAiB,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACpD,IAAM,iBAAiB,GAAG,SAAS,CAAC,OAAO,CACzC,iBAAiB,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,KAAI,CAAC,iBAAiB,CACnF,CAAC;YACF,IAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC5D,IAAM,aAAa,GAAG,oBAAoB,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1F,IAAI,iBAAiB,GAAG,IAAI,CAAC;YAC7B,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC/B,iBAAiB,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACzC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACzD,EAAE,CAAC,CAAC,aAAa,GAAG,iBAAiB,GAAG,WAAW,CAAC,CAAC,CAAC;oBACpD,iBAAiB,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;gBAClD,CAAC;YACH,CAAC;YACD,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YACzC,gBAAgB;YAChB,IAAM,mBAAmB,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC1D,IAAI,yBAAyB,GAAG,IAAI,CAAC;YACrC,EAAE,CAAC,CAAC,mBAAmB,CAAC,KAAK,KAAK,IAAI,IAAI,oBAAoB,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9E,yBAAyB,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,mBAAmB,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9C,IAAM,mBAAmB,GAAG,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBACzE,EAAE,CAAC,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,CAAC,CAAC;oBAC5C,yBAAyB,GAAG,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;gBAC5D,CAAC;YACH,CAAC;YACD,mBAAmB,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;YACzD,iBAAiB;YACjB,IAAI,0BAA0B,GAAG,IAAI,CAAC;YACtC,EAAE,CAAC,CAAC,oBAAoB,CAAC,KAAK,KAAK,IAAI,IAAI,mBAAmB,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9E,0BAA0B,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,0BAA0B,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;YAC7C,CAAC;YACD,oBAAoB,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAG,EAAE,OAAO;QAAzB,iBAoBC;QAnBC,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAE,OAAO;YACtC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACZ,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBACrC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;oBACpC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC5C,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;oBACzC,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;YACD,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,KAAK,KAAI,CAAC,WAAW,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChF,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;oBACjF,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;oBACvF,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB,UAAkB,GAAG,EAAE,OAAO;QAC5B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC7C,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtC,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,4CAAiB,GAAjB,UAAkB,GAAG,EAAE,OAAO;QAC5B,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,sCAAW,GAAX,UAAY,QAAuB;QAAnC,iBAQC;QAPC,IAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACrD,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;YAC7B,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC;YACD,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,EAAE,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX,UAAY,QAA8B,EAAE,QAAgB;QAC1D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,IAAI,SAAI,QAAU,CAAC,CAAC;QAC5F,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,IAAI,SAAI,QAAU,CAAC,CAAC;YAC5F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,IAAM,CAAC,CAAC;YAChF,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,IAAM,QAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,OAAO;iBACT,GAAG,CAAC,QAAQ,CAAC;iBACb,QAAQ,CAAI,QAAM,CAAC,SAAS,SAAI,QAAM,CAAC,UAAU,SAAI,QAAM,CAAC,SAAW,CAAC,CAAC;QAC9E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO;aACT,GAAG,CAAC,cAAc,CAAC;aACnB,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACpE,CAAC;IAED,wCAAa,GAAb;QAAA,iBAeC;QAdC,IAAM,OAAO,GAAG,IAAI,yFAAyB,EAAE,CAAC;QAChD,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACrE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;YAC7B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC9D,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,uCAAY,GAAZ;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACzC,IAAI,EAAE,IAAI,yEAAY,CAAC,YAAY,EAAE;gBACnC,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,UAAU,EAAE,OAAO,CAAC,IAAI;aACzB,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QAAA,iBAUC;QATC,IAAM,OAAO,GAAG,IAAI,qFAAuB,EAAE,CAAC;QAC9C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QACrE,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;YAC7B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAcC;QAbC,IAAM,OAAO,GAAG,IAAI,uFAAwB,EAAE,CAAC;QAC/C,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxD,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACzD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;YAC7B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC9D,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,qCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACzC,IAAI,EAAE,IAAI,yEAAY,CAAC,UAAU,EAAE;gBACjC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAClC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;aAC/B,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;SAC9F,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACzC,IAAI,EAAE,IAAI,yEAAY,CAAC,WAAW,EAAE;gBAClC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBACzC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBACrC,gBAAgB,EAAE,IAAI,CAAC,QAAQ;gBAC/B,eAAe,EAAE,OAAO,CAAC,eAAe;gBACxC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;aAC3C,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,EACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAClB,IAAI,CAAC,QAAQ,EACb,OAAO,CACR;SACF,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QAAA,iBAiBC;QAhBC,IAAM,OAAO,GAAG,IAAI,qFAAuB,EAAE,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxC,CAAC;QACD,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,4CAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO;YAC7B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC9D,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,qCAAU,GAAV;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACzC,IAAI,EAAE,IAAI,yEAAY,CAAC,UAAU,EAAE;gBACjC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBACtC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAClC,cAAc,EAAE,OAAO,CAAC,cAAc;gBACtC,eAAe,EAAE,OAAO,CAAC,eAAe;aACzC,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC;SACjF,CAAC,CAAC;IACL,CAAC;IAED,iCAAM,GAAN;QAAA,iBAgBC;QAfC,IAAI,MAAuB,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3C,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAClD,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAClD,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,SAAS,CACd,SAAS,EACT,cAAM,YAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAhD,CAAgD,EACtD,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,EAApC,CAAoC,CAC3C,CAAC;IACJ,CAAC;IA1hBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAiD8B,wFAAkB;YAC/B,8DAAc;YACb,sDAAM;YACD,oEAAW;YACZ,kEAAU;YACX,oFAAgB;YACd,yFAAkB;YACZ,mFAAiB;OAvDnC,gBAAgB,CA2hB5B;IAAD,uBAAC;CAAA;AA3hB4B;;;;;;;;;;;;;;AC5B7B;AAAA;IAAA;IAQA,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;ACRD,uyCAAuyC,yEAAyE,2CAA2C,4CAA4C,GAAG,uCAAuC,qSAAqS,yEAAyE,63BAA63B,yEAAyE,iFAAiF,4CAA4C,GAAG,uCAAuC,2NAA2N,yEAAyE,iFAAiF,4CAA4C,GAAG,uCAAuC,yNAAyN,sGAAsG,uTAAuT,yEAAyE,6mBAA6mB,mBAAmB,GAAG,oBAAoB,GAAG,mBAAmB,yJAAyJ,eAAe,8EAA8E,gBAAgB,gCAAgC,eAAe,6B;;;;;;;;;;;ACAxjK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqF;AAEzD;AAC+B;AAEE;AAC2D;AACZ;AACrC;AACO;AAED;AAET;AAEU;AACb;AACkB;AACT;AACS;AAE5C;AAOvC;IAkBE,0BACU,kBAAsC,EACtC,UAAsB,EACtB,iBAAoC,EACpC,WAAwB,EACxB,cAA8B,EAC9B,YAA4B,EAC5B,WAA+B;QAN/B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,eAAU,GAAV,UAAU,CAAY;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,gBAAW,GAAX,WAAW,CAAoB;QAjBzC,mBAAc,GAAoB,EAAE,CAAC;QAIrC,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;QAEnC,4BAAuB,GAAG,IAAI,CAAC;QAY7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;IACtE,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAiEC;QAhEC,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;gBACX,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,WAAW;aACvB;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,aAAa;gBACxB,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,aAAa;gBACxB,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,CAAC;gBACX,YAAY,EAAE,IAAI,CAAC,SAAS;aAC7B;SACF,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtC,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;gBAClF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,qCAAU,GAAV,UAAW,cAAc;QAAzB,iBAyCC;QAxCC,EAAE,CAAC,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC5B,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,SAAS,CAC9B,UAAC,IAAW;YACV,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAM,kBAAkB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;gBAChB,EAAE,CAAC,CAAC,kDAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnD,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBACvC,CAAC;gBACD,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACrD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,IAAM,mBAAmB,GAAG,EAAE,CAAC;YAC/B,8CAAS,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,GAAG;gBACvC,mBAAmB,CAAC,IAAI,CAAC;oBACvB,MAAM,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;oBACzB,SAAS,EACP,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;wBACvC,UAAU;wBACV,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC;wBACjC,WAAW;iBACd,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gBACnB,KAAK,CAAC,cAAc,GAAG,KAAI,CAAC,kBAAkB,CAC5C,cAAc,EACd,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,IAAI,CACX,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YACjD,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACvC,CAAC,EACD;YACE,KAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE,MAAM,EAAE,mFAAe,CAAC,cAAc,EAAE,CAAC,CAAC;QAC1E,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAkB,GAAlB,UAAmB,cAA+B,EAAE,QAAQ,EAAE,SAAS;QACrE,IAAM,MAAM,GAAoB,EAAE,CAAC;QACnC,cAAc,CAAC,OAAO,CAAC,UAAC,aAAa;YACnC,EAAE,CAAC,CACD,aAAa,CAAC,IAAI,KAAK,iBAAiB;gBACxC,aAAa,CAAC,IAAI,KAAK,iBAAiB;gBACxC,aAAa,CAAC,IAAI,KAAK,eAAe;gBACtC,aAAa,CAAC,IAAI,KAAK,mBACzB,CAAC,CAAC,CAAC;gBACD,EAAE,CAAC,CACD,QAAQ,KAAK,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAChD,SAAS,KAAK,aAAa,CAAC,QAAQ,CAAC,YAAY,CACnD,CAAC,CAAC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7B,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEO,gCAAK,GAAb,UAAc,IAAgB,EAAE,cAAoC;QAApE,iBAsCC;QAtC+B,oDAAoC;QAClE,IAAM,UAAU,GAAG,4CAAO,CAAC,IAAI,CAAC,CAAC;QACjC,cAAc,CAAC,OAAO,CAAC,UAAC,aAAa;YACnC,IAAM,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,GAAG;gBACvC,MAAM,CAAC,CACL,GAAG,CAAC,SAAS,KAAK,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC;oBACrD,GAAG,CAAC,IAAI,KAAK,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAClD,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACjB,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC;oBACxC,YAAY,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC7C,YAAY,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC,CAAC;oBAChD,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC;gBAC1C,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC;gBAC/C,IAAM,QAAQ,GAAG,IAAI,oDAAQ,EAAE,CAAC;gBAChC,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACrD,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACzD,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC;gBAClC,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC9C,IAAM,QAAQ,GAAG,IAAI,oDAAQ,EAAE,CAAC;gBAChC,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAC3D,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;gBAC/D,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC;gBACjC,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC7C,IAAM,QAAQ,GAAG,IAAI,oDAAQ,EAAE,CAAC;gBAChC,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBAC9D,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC;gBACjC,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAEO,0CAAe,GAAvB,UAAwB,UAAsB,EAAE,QAAkB;QAChE,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,SAAS;YACvC,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,SAAS,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS,CAAC;QACxF,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,0CAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,yCAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC;QAClD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iHAAsB,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAC1B,QAAQ,EAAE,KAAK;YACf,OAAO,EAAK,QAAQ,SAAI,SAAW;YACnC,gBAAgB,EAAE;gBAChB,YAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;oBAClC,IAAI,EAAE,IAAI,yEAAY,CAAC,YAAY,EAAE;wBACnC,SAAS,EAAE,QAAQ;wBACnB,UAAU,EAAE,SAAS;qBACtB,CAAC;oBACF,KAAK,EAAE,KAAI,CAAC,cAAc;oBAC1B,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC;iBAClD,CAAC;YAPF,CAOE;YACJ,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,qCAAU,GAAV,UAAW,QAAQ,EAAE,SAAS;QAA9B,iBAcC;QAbC,IAAI,CAAC,WAAW;aACb,kBAAkB,CAAC;YAClB,IAAI,EAAE,IAAI,yEAAY,CAAC,aAAa,EAAE;gBACpC,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,SAAS;aACtB,CAAC;YACF,KAAK,EAAE,IAAI,CAAC,cAAc;YAC1B,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;SACnD,CAAC;aACD,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE;YAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAe,GAAf;QAAA,iBAmBC;QAlBC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC;QAClD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;QAC9C,IAAM,MAAM,GAAmB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC;QAE7D,IAAM,YAAY,GAAG;YACnB,SAAS,EAAE,aAAa;YACxB,UAAU,EAAE,SAAS;YACrB,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,QAAQ,EAAE;gBACR,MAAM,EAAK,MAAM,CAAC,SAAS,SAAI,MAAM,CAAC,UAAU,SAAI,MAAM,CAAC,SAAW;gBACtE,KAAK,EAAK,QAAQ,SAAI,SAAW;aAClC;YACD,QAAQ,EAAE;gBACR,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YACvC,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6HAA0B,EAAE,EAAE,YAAY,gBAAE,CAAC,CAAC;IACvF,CAAC;IAhRsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,yDAAW;sDAAM;IAC1B;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,yDAAW;uDAAM;IAC9B;QAArB,+DAAS,CAAC,SAAS,CAAC;kCAAU,yDAAW;qDAAM;IACvB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,yDAAW;wDAAM;IAJ3C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAoB8B,yFAAkB;YAC1B,kEAAU;YACH,oFAAiB;YACvB,uEAAW;YACR,gFAAc;YAChB,4DAAc;YACf,yFAAkB;OAzB9B,gBAAgB,CAkR5B;IAAD,uBAAC;CAAA;AAlR4B;;;;;;;;;;;;;;AC5B7B;AAAA;IAAA;IAKA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;ACLD,wFAAwF,iCAAiC,kKAAkK,sRAAsR,6DAA6D,q4BAAq4B,iCAAiC,mL;;;;;;;;;;;ACAphD,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAEd;AACZ;AAE8B;AACK;AACE;AACgB;AACD;AAOnF;IAWE,kCACS,QAAoB,EACnB,UAAsB,EACtB,kBAAsC,EACtC,mBAAwC;QAHzC,aAAQ,GAAR,QAAQ,CAAY;QACnB,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QARlD,YAAO,GAAG,KAAK,CAAC;QAUd,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,6CAAU,GAAV;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,uEAAW,CAAC;YAClC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAChC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;aAClC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,4CAAO,EAAE,CAAC;IAChC,CAAC;IAED,8CAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,6CAAU,GAAV;QAAA,iBA0BC;QAzBC,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAChE,IAAM,YAAY,GAAG,IAAI,yEAAY,EAAE,CAAC;QACxC,YAAY,CAAC,IAAI,GAAG,eAAe,CAAC;QACpC,YAAY,CAAC,QAAQ,GAAG;YACtB,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,aAAa,EAAE,YAAY;SAC5B,CAAC;QACF,IAAI,CAAC,UAAU;aACZ,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC;aAC1E,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAI;YACT,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/B,YAAY,CAAC,IAAI,EACjB,YAAY,CAAC,QAAQ,EACrB,UAAC,iBAA+B;gBAC9B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YACzD,CAAC,CACF,CAAC;YACF,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,IAAI;YACV,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAY,GAAZ;QAAA,iBA0BC;QAzBC,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAChE,IAAM,YAAY,GAAG,IAAI,yEAAY,EAAE,CAAC;QACxC,YAAY,CAAC,IAAI,GAAG,iBAAiB,CAAC;QACtC,YAAY,CAAC,QAAQ,GAAG;YACtB,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,aAAa,EAAE,YAAY;SAC5B,CAAC;QACF,IAAI,CAAC,UAAU;aACZ,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;aAC3D,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAI;YACT,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/B,YAAY,CAAC,IAAI,EACjB,YAAY,CAAC,QAAQ,EACrB,UAAC,iBAA+B;gBAC9B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YACzD,CAAC,CACF,CAAC;YACF,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,IAAI;YACV,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IApGU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAamB,wDAAU;YACP,kEAAU;YACF,wFAAkB;YACjB,yFAAmB;OAfvC,wBAAwB,CAqGpC;IAAD,+BAAC;CAAA;AArGoC;;;;;;;;;;;;ACjBrC,w0BAAw0B,yEAAyE,0VAA0V,yEAAyE,65BAA65B,yEAAyE,wSAAwS,yEAAyE,4iBAA4iB,yEAAyE,kFAAkF,wBAAwB,GAAG,uBAAuB,GAAG,uCAAuC,2NAA2N,yEAAyE,iFAAiF,wBAAwB,GAAG,uBAAuB,GAAG,uCAAuC,yNAAyN,yEAAyE,8SAA8S,2GAA2G,olBAAolB,kBAAkB,6B;;;;;;;;;;;ACAhqK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4F;AAEhE;AAC+B;AAEE;AAC2D;AACZ;AACrC;AAEM;AACP;AACF;AAEJ;AACc;AACK;AACC;AACD;AACS;AACpC;AAOxD;IAoBE,kCACU,kBAAsC,EACtC,YAA4B,EAC5B,iBAAoC,EACpC,UAAsB,EACtB,UAAsB,EACtB,kBAAsC,EACtC,mBAAwC;QANxC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QA1BzC,cAAS,GAAuB,EAAE,CAAC;QAGnC,mBAAc,GAAoB,EAAE,CAAC;QAc9C,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;QAWjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;IACtE,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,kBAAkB,EAAE,4EAAY,CAAC,SAAS;gBAC1C,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,iBAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,aAAa;gBACxB,YAAY,EAAE,IAAI,CAAC,UAAU;aAC9B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,UAAU;aACtB;SACF,CAAC;IACJ,CAAC;IAED,8CAAW,GAAX;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAEO,wCAAK,GAAb,UAAc,SAA6B,EAAE,cAAoC;QAAjF,iBAsBC;QAtB4C,oDAAoC;QAC/E,IAAM,eAAe,GAAG,4CAAO,CAAC,SAAS,CAAC,CAAC;QAC3C,cAAc,CAAC,OAAO,CAAC,UAAC,aAAa;YACnC,IAAM,iBAAiB,GAAG,eAAe,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACtD,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtB,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC;oBAC7C,iBAAiB,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC7C,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC;oBAClD,iBAAiB,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC7C,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC,CAAC;oBACtD,iBAAiB,CAAC,WAAW,GAAG,cAAc,CAAC;gBACjD,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC;gBACpD,IAAM,gBAAgB,GAAG,IAAI,qEAAgB,EAAE,CAAC;gBAChD,gBAAgB,CAAC,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAChE,gBAAgB,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC1C,KAAI,CAAC,eAAe,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,eAAe,CAAC;IACzB,CAAC;IAEO,kDAAe,GAAvB,UAAwB,eAAmC,EAAE,gBAAkC;QAC7F,IAAM,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,UAAC,cAAc;YACjD,MAAM,CAAC,cAAc,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC;QACvD,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAEO,oDAAiB,GAAzB,UAA0B,QAAgB,EAAE,eAA8B;QAA1E,iBAcC;QAd2C,wDAA8B;QACxE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wGAAwB,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/C,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,YAAoB;YAC5D,IAAM,aAAa,GAAG,IAAI,2EAAa,EAAE,CAAC;YAC1C,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC;YAC9B,aAAa,CAAC,QAAQ,GAAG,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;YACzD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAuB,GAAvB;QACE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IAC5C,CAAC;IAED,wDAAqB,GAArB;QACE,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,mDAAgB,GAAhB;QAAA,iBA2BC;QA1BC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;QACjD,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC;QACxD,IAAM,YAAY,GAAG,IAAI,yEAAY,EAAE,CAAC;QACxC,YAAY,CAAC,IAAI,GAAG,eAAe,CAAC;QACpC,YAAY,CAAC,QAAQ,GAAG;YACtB,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,UAAU,EAAE,IAAI,CAAC,OAAO;YACxB,aAAa,EAAE,YAAY;SAC5B,CAAC;QACF,IAAI,CAAC,UAAU;aACZ,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,WAAW,CAAC;aACxE,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAI;YACT,IAAM,aAAa,GAAG,IAAI,2EAAa,EAAE,CAAC;YAC1C,aAAa,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;YACvC,aAAa,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;YAC/C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/B,YAAY,CAAC,IAAI,EACjB,YAAY,CAAC,QAAQ,EACrB,UAAC,iBAA+B;gBAC9B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YACzD,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAU,GAAV,UAAW,IAAY,EAAE,QAAgB,EAAE,YAAoB;QAA/D,iBA4BC;QA3BC,IAAM,YAAY,GAAG,IAAI,yEAAY,EAAE,CAAC;QACxC,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC7B,YAAY,CAAC,QAAQ,GAAG;YACtB,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,UAAU,EAAE,IAAI,CAAC,OAAO;YACxB,aAAa,EAAE,YAAY;SAC5B,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC;aAC7D,SAAS,EAAE;aACX,IAAI,CAAC;YACJ,IAAM,aAAa,GAAG,IAAI,2EAAa,EAAE,CAAC;YAC1C,aAAa,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;YACvC,aAAa,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;YAC/C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/B,aAAa,CAAC,IAAI,EAClB,aAAa,CAAC,QAAQ,EACtB,UAAC,iBAA+B;gBAC9B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YACzD,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,IAAI;YACV,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAa,GAAb;QAAA,iBAeC;QAdC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrD,IAAM,YAAY,GAAG;YACnB,SAAS,EAAE,uBAAuB;YAClC,UAAU,EAAE,UAAU;YACtB,OAAO,EAAE,IAAI,CAAC,WAAW;YACzB,QAAQ,EAAE;gBACR,QAAQ,EAAK,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,OAAO,SAAI,YAAc;aAC7D;YACD,QAAQ,EAAE;gBACR,KAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC;YACzE,CAAC;SACF,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6HAA0B,EAAE,EAAE,YAAY,gBAAE,CAAC,CAAC;IACvF,CAAC;IAED,sDAAmB,GAAnB;QAAA,iBASC;QARC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iHAAsB,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAC1B,QAAQ,EAAE,cAAc;YACxB,OAAO,EAAE,YAAY;YACrB,cAAc,EAAE,cAAM,YAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,CAAC,EAAlE,CAAkE;YACxF,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,kDAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IA3NQ;QAAR,2DAAK,EAAE;;+DAAoC;IACnC;QAAR,2DAAK,EAAE;;8DAAkB;IACjB;QAAR,2DAAK,EAAE;;6DAAiB;IAChB;QAAR,2DAAK,EAAE;;oEAAsC;IAExB;QAArB,+DAAS,CAAC,SAAS,CAAC;kCAAU,yDAAW;6DAAM;IACvB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,yDAAW;gEAAM;IAC5B;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,yDAAW;iEAAM;IAR7C,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAsB8B,yFAAkB;YACxB,4DAAc;YACT,oFAAiB;YACxB,sEAAU;YACV,kEAAU;YACF,yFAAkB;YACjB,0FAAmB;OA3BvC,wBAAwB,CA6NpC;IAAD,+BAAC;CAAA;AA7NoC;;;;;;;;;;;;;;AC3BrC;AAAA;IAAA;IAQA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR8C;AACN;AAEc;AACJ;AACG;AACG;AACM;AAC6B;AAC5C;AACH;AAgB7C;IAAA;IAA0B,CAAC;IAAd,UAAU;QAdtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAa;gBACb,2EAAe;gBACf,yDAAS;gBACT,wGAAwB;gBACxB,+DAAW;gBACX,4DAAU;gBACV,kEAAY;gBACZ,kEAAY;aACb;YACD,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1BvB,6U;;;;;;;;;;;ACAA,oCAAoC,uBAAuB,iBAAiB,oBAAoB,sBAAsB,EAAE,YAAY,2BAA2B,8BAA8B,0BAA0B,sBAAsB,EAAE,sBAAsB,eAAe,uBAAuB,mCAAmC,iBAAiB,uBAAuB,8BAA8B,yBAAyB,+EAA+E,0CAA0C,kCAAkC,EAAE,qCAAqC,4CAA4C,4CAA4C,EAAE,4CAA4C,kBAAkB,EAAE,sCAAsC,4CAA4C,4CAA4C,EAAE,6CAA6C,kBAAkB,EAAE,6BAA6B,iBAAiB,uBAAuB,cAAc,oDAAoD,sBAAsB,sBAAsB,wBAAwB,4DAA4D,EAAE,oCAAoC,0BAA0B,gBAAgB,iBAAiB,uBAAuB,EAAE,sBAAsB,kBAAkB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1yC;AAE/D;AACK;AAEmC;AAOpE;IAWE;QALA,eAAU,GAAG,YAAY,CAAC;QAC1B,eAAU,GAAG,kCAAkC,CAAC;IAIjC,CAAC;IAEhB,uCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,kDAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,UAAC,EAAE;YAClB,MAAM,CAAC,mCAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,IAAM,WAAW,GAAG,UAAC,OAAO;YAC1B,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;QACrD,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,UAAC,OAAO;YAC3B,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,IAAI,yEAAY,CACnC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,YAAY,EACZ,WAAW,CACZ,CAAC;QACF,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;QAEhC,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1E,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAExE,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,IAAI,CAAC,UAAU;oBACtB,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,GAAG;iBACb;gBACD;oBACE,KAAK,EAAE,IAAI,CAAC,UAAU;oBACtB,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,GAAG;iBACb;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE,IAAI;gBAChB,mBAAmB,EAAE,KAAK;gBAC1B,MAAM,EAAE;oBACN,QAAQ,EAAE,KAAK;iBAChB;gBACD,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL;4BACE,QAAQ,EAAE,KAAK;4BACf,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE;gCACJ,cAAc,EAAE;oCACd,OAAO,EAAE,UAAU;iCACpB;6BACF;yBACF;qBACF;oBACD,KAAK,EAAE;wBACL;4BACE,EAAE,EAAE,KAAK;4BACT,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,MAAM;4BAChB,GAAG,EAAE,CAAC;yBACP;wBACD;4BACE,EAAE,EAAE,KAAK;4BACT,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,OAAO;4BACjB,GAAG,EAAE,CAAC;yBACP;qBACF;iBACF;gBACD,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,KAAK;oBAChB,QAAQ,EAAE,SAAS;oBACnB,SAAS,EAAE;wBACT,qDAAqD;wBACrD,KAAK,EAAE,UAAS,YAAY,EAAE,IAAI;4BAChC,IAAI,EAAE,GAAG,CAAC,CAAC;4BACX,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC5B,IAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gCAC7B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC3D,CAAC;4BACD,MAAM,CAAC,EAAE,CAAC;wBACZ,CAAC;qBACF;oBACD,MAAM,EAAE,UAAC,OAAO;wBACd,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;oBACvC,CAAC;iBACF;aACF;YACD,SAAS,EAAE,MAAM;SAClB,CAAC;IACJ,CAAC;IAED,0CAAW,GAAX;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACT,CAAC;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1E,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAExE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;IACxC,CAAC;IAED,0DAA0D;IAC1D,0DAA0D;IAC1D,yDAAyD;IACzD,cAAc;IACd,iDAAkB,GAAlB,UAAmB,YAAY;QAC7B,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,2CAAM,CAAC,YAAY,EAAE,UAAC,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC;gBACR,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;gBACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aACT,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,+CAAgB,GAAhB,UAAiB,YAAY;QAC3B,IAAI,CAAC,CAAC;QACN,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC;YAE7B,MAAM,CAAC,IAAI,CAAC;gBACV,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;gBAChB,CAAC,EAAE,IAAI;aACR,CAAC,CAAC;YAEH,IAAI,GAAG,GAAG,CAAC;QACb,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAhKyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,wDAAU;6DAAC;IACvB;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,wDAAU;8DAAC;IAE3C;QAAR,2DAAK,EAAE;;4DAAiB;IAJd,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAkKhC;IAAD,2BAAC;CAAA;AAlKgC;;;;;;;;;;;;ACZjC,gP;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AAEU;AACW;AAO9E;IAME,gCAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpD,yCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,IAAI,EAAE;gBACd,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,OAAO,EAAE;gBACjB,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE;gBAClC,EAAE,IAAI,EAAE,MAAM,EAAE;aACjB;YACD,IAAI,EAAE,EAAE;SACT,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,mFAAe,CAAC,SAAS,CAAC;IACnD,CAAC;IAED,wCAAO,GAAP;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACzD,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;YACnC,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IA7BQ;QAAR,2DAAK,EAAE;;sDAAY;IADT,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAOmC,wEAAa;OANrC,sBAAsB,CA+BlC;IAAD,6BAAC;CAAA;AA/BkC;;;;;;;;;;;;ACVnC,s6BAAs6B,wNAAwN,eAAe,qgBAAqgB,oDAAoD,IAAI,mBAAmB,sB;;;;;;;;;;;ACA7tD,6BAA6B,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAsC;AAEhE;AAEuC;AACU;AACC;AACb;AAOjE;IAmBE,+BACU,aAA4B,EAC5B,aAAgC,EAChC,OAAoB;QAFpB,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAmB;QAChC,YAAO,GAAP,OAAO,CAAa;QAV9B,aAAQ,GAAG,EAAE,CAAC;QAEd,gBAAW,GAAG,EAAE,CAAC;QAEjB,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7B,kBAAa,GAAG,KAAK,CAAC;IAMnB,CAAC;IAEJ,2CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;gBAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACxB,CAAC;QACH,CAAC;IACH,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,OAAO,EAAE;gBACjB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAC/B,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE;gBACrD,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;gBACrD,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;aACrD;YACD,IAAI,EAAE,EAAE;SACT,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,MAAM,EAAE;gBAChB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE;gBAC1C;oBACE,IAAI,EAAE,OAAO;oBACb,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,UAAU,EAAE,UAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa;wBACpD,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;wBACpC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;wBAEpC,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;4BAClB,MAAM,CAAC,CAAC,CAAC;wBACX,CAAC;wBAED,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;4BAChB,MAAM,CAAC,CAAC,CAAC;wBACX,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,MAAM,CAAC,CAAC,CAAC,CAAC;wBACZ,CAAC;oBACH,CAAC;iBACF;aACF;YACD,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAED,uCAAO,GAAP;QAAA,iBA6BC;QA5BC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACxD,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACpC,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACpC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;gBAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,QAAQ,GAAG;gBACd;oBACE,GAAG,EAAE,iBAAiB;oBACtB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,YAAK,CAAC,IAAI,EAAV,CAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;iBAC3D;aACF,CAAC;YACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC7B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxD,2CAAM,CAAC,KAAI,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,GAAG;gBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC5B,OAAO,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,2CAAM,CAAC,IAAI,EAAE,UAAC,OAAY,EAAE,OAAO;gBACjC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;gBACvB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;YACtC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAS,GAAT,UAAU,KAAK,EAAE,IAAI;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAhH0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;+DAAM;IAC/B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;+DAAM;IAEjD;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;4DAAC;IAJ1B,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAqByB,wEAAa;YACb,mFAAiB;YACvB,sEAAW;OAtBnB,qBAAqB,CAkHjC;IAAD,4BAAC;CAAA;AAlHiC;;;;;;;;;;;;ACdlC,2kB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEiB;AAEU;AAO7E;IAKE,6BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAHhD,gBAAW,GAAQ,EAAE,CAAC;QACtB,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;IAEgB,CAAC;IAEpD,sCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,6CAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,UAAC,IAAW;YAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAnCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAMmC,wEAAa;OALrC,mBAAmB,CAoC/B;IAAD,0BAAC;CAAA;AApC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACN;AAEY;AACS;AACd;AAEY;AACF;AACmB;AACM;AACH;AACN;AAkB1E;IAAA;IAA2B,CAAC;IAAf,YAAY;QAhBxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAY;gBACZ,oEAAgB;gBAChB,kEAAY;gBACZ,2EAAiB,CAAC,OAAO,EAAE;gBAC3B,6DAAU,CAAC,OAAO,EAAE;aACrB;YACD,YAAY,EAAE;gBACZ,4FAAqB;gBACrB,+FAAsB;gBACtB,yFAAoB;gBACpB,uFAAmB;aACpB;SACF,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BsB;AACN;AACyB;AACnB;AAEW;AACR;AACF;AAEU;AACmC;AACZ;AACxB;AACM;AACe;AACW;AACpB;AACkD;AAC9B;AACH;AACpB;AA4BlE;IAAA;IAA4B,CAAC;IAAhB,aAAa;QA1BzB,8DAAQ,CAAC;YACR,eAAe,EAAE,CAAC,2FAAmB,EAAE,sGAAsB,EAAE,sGAAsB,EAAE,mGAAiB,CAAC;YACzG,OAAO,EAAE;gBACP,4DAAY;gBACZ,wGAAwB;gBACxB,6DAAU,CAAC,OAAO,EAAE;gBACpB,kEAAY;gBACZ,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,uEAAgB,CAAC,OAAO,EAAE;gBAC1B,+DAAW,CAAC,OAAO,EAAE;aACtB;YACD,YAAY,EAAE;gBACZ,sEAAc;gBACd,4EAAgB;gBAChB,6FAAsB;gBACtB,kFAAgB;gBAChB,2FAAmB;gBACnB,oIAAgC;gBAChC,sGAAsB;gBACtB,sGAAsB;gBACtB,mGAAiB;gBACjB,+EAAiB;aAClB;SACF,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;AChD1B,smBAAsmB,gBAAgB,iNAAiN,OAAO,maAAma,8BAA8B,gBAAgB,IAAI,gBAAgB,0BAA0B,iLAAiL,4CAA4C,eAAe,iBAAiB,sBAAsB,0BAA0B,oF;;;;;;;;;;;ACA1nD,2BAA2B,uBAAuB,EAAE,wCAAwC,0BAA0B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9C;AAEO;AAEJ;AAO7E;IAmEE,gCAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAlE9D,SAAI,GAAG,EAAE,CAAC;QAEV,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;QACnC,YAAO,GAAG;YACR;gBACE,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC;gBACrC,WAAW,EAAE,UAAC,GAAG,EAAE,KAAK;oBACtB,IAAK,KAIJ;oBAJD,WAAK,KAAK;wBACR,mCAAS;wBACT,yCAAY;wBACZ,+BAAO;oBACT,CAAC,EAJI,KAAK,KAAL,KAAK,QAIT;oBAED,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAE9B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC;gBACtC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC;gBAC3E,WAAW,EAAE,UAAC,GAAG,EAAE,KAAK;oBACtB,EAAE,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAED,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;gBACvB,WAAW,EAAE,UAAC,GAAG,EAAE,KAAK;oBACtB,EAAE,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClC,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;oBAED,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACpC,CAAC;aACF;SACF,CAAC;QACF,UAAK,GAAG;YACN,OAAO,EAAE,sCAAsC;YAC/C,aAAa,EACX,2EAA2E;gBAC3E,qFAAqF;gBACrF,mDAAmD;YACrD,OAAO,EAAE,iDAAiD;YAC1D,cAAc,EAAE,uCAAuC;YACvD,MAAM,EAAE,sCAAsC;SAC/C,CAAC;IAK+D,CAAC;IAElE,yCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,QAAQ,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;YAClD;gBACE,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,MAAM;gBACjB,YAAY,EAAE,IAAI,CAAC,UAAU;aAC9B;YACD,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC/B,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;YACrE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,MAAM,EAAE;YAC/E;gBACE,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,MAAM;gBACjB,YAAY,EAAE,IAAI,CAAC,WAAW;aAC/B;YACD,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;YAC7B,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;YAC9B,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;YACnD,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC/D,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;YAC3C,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;YACnD,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;YACtE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YACzC,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;SAC1C,CAAC;IACJ,CAAC;IAED,gDAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,qDAAoB,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YAC5D,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAY,GAAZ;QACE,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,QAAC,CAAC;IAC7B,CAAC;IAjDwB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAoB,yDAAW;8DAAM;IACnC;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAqB,yDAAW;+DAAM;IAjEpD,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAoE0C,sFAAoB;OAnEnD,sBAAsB,CAkHlC;IAAD,6BAAC;CAAA;AAlHkC;;;;;;;;;;;;ACXnC,oQ;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,8dAA8d,qGAAqG,gBAAgB,GAAG,cAAc,+CAA+C,gBAAgB,GAAG,cAAc,iBAAiB,2BAA2B,+C;;;;;;;;;;;ACAhuB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AAEX;AAGsB;AACF;AAOnF;IAQE,wBACU,kBAAsC,EACtC,WAAwB,EACxB,oBAA0C;QAF1C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QATpD,YAAO,GAAyB,EAAE,CAAC;QACnC,UAAK,GAAkB,EAAE,CAAC;QAC1B,mBAAc,GAAG,KAAK,CAAC;QASrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAC9D,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;gBACX,YAAY,EAAE,IAAI,CAAC,WAAW;aAC/B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,IAAI,CAAC,oBAAoB;aAChC;SACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QAAA,iBA+BC;QA9BC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QACD,IAAM,mBAAmB,GAAG;YAC1B,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,SAAS;YACd,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,YAAY,EAAE,cAAc;YAC5B,GAAG,EAAE,SAAS;SACf,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,WAAW;aACb,IAAI,EAAE;aACN,IAAI,CAAC,UAAC,IAAI;YACT,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI;gBACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO;oBACxB,OAAO,CAAC,MAAM,GAAG,oBAAkB,OAAO,CAAC,IAAI,SAAI,OAAO,CAAC,EAAI,CAAC;oBAChE,IAAM,aAAa,GAAG,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACxD,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;oBACvD,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC;YACL,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IA/DyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAqB,yDAAW;uDAAM;IANpD,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAU8B,wFAAkB;YACzB,oEAAW;YACF,0FAAoB;OAXzC,cAAc,CAsE1B;IAAD,qBAAC;CAAA;AAtE0B;;;;;;;;;;;;ACb3B,2hBAA2hB,0BAA0B,2HAA2H,8BAA8B,wHAAwH,2BAA2B,sHAAsH,kCAAkC,sHAAsH,kCAAkC,wHAAwH,oCAAoC,wHAAwH,oCAAoC,0jB;;;;;;;;;;;ACAz8C,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAE2B;AACE;AAOvE;IAYE,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QALlD,mBAAc,GAAG;YACf,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,KAAK;SACb,CAAC;QAGA,IAAI,CAAC,QAAQ,GAAG;YACd,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAE,4EAAY,CAAC,UAAU,EAAE;gBAC3E,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;gBAC9B,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,gBAAgB,EAAE;gBAC/C;oBACE,IAAI,EAAE,gBAAgB;oBACtB,IAAI,EAAE,eAAe;oBACrB,kBAAkB,EAAE,4EAAY,CAAC,SAAS;iBAC3C;aACF;YACD,IAAI,EAAE,EAAE;SACT,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAE,4EAAY,CAAC,UAAU,EAAE;gBAC3E,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;gBAC9B,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,gBAAgB,EAAE;aAChD;YACD,IAAI,EAAE,EAAE;SACT,CAAC;IACJ,CAAC;IAED,kCAAO,GAAP;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACnD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,GAAG;gBACrB,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC;gBAC3D,GAAG,CAAC,MAAM,GAAG,qBAAqB,GAAG,GAAG,CAAC,IAAI,CAAC;gBAC9C,GAAG,CAAC,QAAQ,GAAG,EAAC,QAAQ,EAAE,UAAU,EAAC,CAAC;gBACtC,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,GAAG;gBACtB,GAAG,CAAC,MAAM,GAAG,qBAAqB,GAAG,GAAG,CAAC,IAAI,CAAC;gBAC9C,GAAG,CAAC,QAAQ,GAAG,EAAC,QAAQ,EAAE,UAAU,EAAC,CAAC;gBACtC,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,QAAQ,CAAC,IAAI,GAAO,IAAI,CAAC,SAAS,QAAC,CAAC;YACzC,KAAI,CAAC,WAAW,CAAC,IAAI,GAAO,IAAI,CAAC,UAAU,QAAC,CAAC;YAC7C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAxDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAaoC,0EAAc;OAZvC,gBAAgB,CAyD5B;IAAD,uBAAC;CAAA;AAzD4B;;;;;;;;;;;;ACV7B,23BAA23B,wBAAwB,ikB;;;;;;;;;;;ACAn5B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAEhC;AAEoC;AACgB;AAOhF;IAKE,6BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,yCAAW,GAAX;QAAA,iBAWC;QAVC,IAAI,CAAC,GAAG,GAAG;YACT,MAAM,EAAE,KAAK;SACd,CAAC;QACF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG;gBACrB,KAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,qCAAO,GAAP;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;aACzC,SAAS,CAAC,UAAC,IAAS;YACnB,KAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,+CAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3C,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;YACzC,CAAC;YACD,KAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IA7BQ;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;0DAAC;IAD1B,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAMgC,kEAAU;OAL/B,mBAAmB,CA+B/B;IAAD,0BAAC;CAAA;AA/B+B;;;;;;;;;;;;ACZhC,scAAsc,kYAAkY,aAAa,sEAAsE,oBAAoB,mpB;;;;;;;;;;;ACA/6B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACP;AAEf;AACe;AAEqB;AACkB;AACK;AAOvF;IAoFE,gCACS,UAAsB,EACrB,UAAsB,EACtB,mBAAwC;QAFzC,eAAU,GAAV,UAAU,CAAY;QACrB,eAAU,GAAV,UAAU,CAAY;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAtFlD,iBAAY,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAEjC,aAAQ,GAAG;YACT,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,iFAAiF;aAC/F;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,yEAAyE;aACvF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,+BAA+B;aAC7C;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,KAAK;gBACZ,WAAW,EACT,uFAAuF;aAC1F;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,yBAAyB;aACvC;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,uBAAuB;aACrC;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,4BAA4B;aAC1C;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,iCAAiC;aAC/C;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,8BAA8B;aAC5C;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,kBAAkB;gBAC/B,QAAQ,EAAE,IAAI;aACf;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,iBAAiB;gBACvB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,8BAA8B;gBAC3C,QAAQ,EAAE,IAAI;aACf;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,kBAAkB;gBACxB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,sDAAsD;gBACnE,QAAQ,EAAE,IAAI;aACf;SACF,CAAC;QAEF,iBAAY,GAAa,EAAE,CAAC;IAMzB,CAAC;IAEJ,yCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAC,GAAa;YACjD,GAAG,CAAC,OAAO,CAAC,UAAC,KAAK;gBAChB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;gBACpC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,KAAK,GAAG,8CAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAY,GAAZ;QAAA,iBAmBC;QAlBC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK;aACxB,MAAM,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;aAC5B,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,IAAI,EAAT,CAAS,CAAC;aACxB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C;YACE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,oFAAgB,CAAC,OAAO,EACxB,sCAAsC,EACtC,WAAW,CACZ,CAAC;YACF,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,EACD;YACE,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IA1HU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAsFqB,wDAAU;YACT,kEAAU;YACD,yFAAmB;OAvFvC,sBAAsB,CA2HlC;IAAD,6BAAC;CAAA;AA3HkC;;;;;;;;;;;;ACfnC,gHAAgH,gCAAgC,sVAAsV,kBAAkB,4BAA4B,+BAA+B,4Y;;;;;;;;;;;ACAnjB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACP;AAEA;AAEqB;AACkB;AACK;AAOvF;IAME,2BACU,UAAsB,EACtB,mBAAwC,EACxC,UAAsB;QAFtB,eAAU,GAAV,UAAU,CAAY;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,eAAU,GAAV,UAAU,CAAY;QALhC,aAAQ,GAAG,EAAE,CAAC;QAOZ,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,kCAAM,GAAN;QAAA,iBA2BC;QA1BC,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACxC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,oFAAgB,CAAC,OAAO,EACxB,SAAO,EAAE,wBAAqB,CAC/B,CAAC;gBAEF,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,EAAE;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACzC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,oFAAgB,CAAC,OAAO,EACxB,SAAO,EAAE,yBAAsB,CAChC,CAAC;gBAEF,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,EAAE;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAhDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQsB,kEAAU;YACD,yFAAmB;YAC5B,wDAAU;OATrB,iBAAiB,CAkD7B;IAAD,wBAAC;CAAA;AAlD6B;;;;;;;;;;;;ACd9B,moBAAmoB,iDAAiD,mlDAAmlD,iKAAiK,SAAS,4V;;;;;;;;;;;ACAj7E,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AAEf;AAEK;AACoB;AACV;AAEM;AAEC;AACK;AACA;AACA;AACH;AAOnF;IAWE,0BACU,kBAAsC,EACtC,UAAsB,EACtB,iBAAoC,EACpC,YAA4B;QAH5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,eAAU,GAAV,UAAU,CAAY;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAgB;QARtC,SAAI,GAAG,EAAE,CAAC;QAEV,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;QAQjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC;IACjE,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE;YACnC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,4EAAY,CAAC,IAAI,EAAE;YACjE,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE;YAC3E,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE;YACpC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE;YACxE,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE;YACjD;gBACE,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,YAAY;gBAClB,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,wBAAwB;gBAC9B,IAAI,EAAE,cAAc;gBACpB,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,kBAAkB,EAAE,4EAAY,CAAC,SAAS,EAAE;YACpF,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,kBAAkB,EAAE,4EAAY,CAAC,SAAS,EAAE;SACtF,CAAC;IACJ,CAAC;IAED,0CAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,qCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,IAAW;YAC9C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;gBACX,GAAG,CAAC,eAAe,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC9C,GAAG,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC;gBAC9E,GAAG,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC;gBAC5E,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb,UAAc,GAAG;QACf,IAAM,MAAM,GAAG,UAAC,OAAO,EAAE,QAAQ,IAAK,QAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAnC,CAAmC,CAAC;QAC1E,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,4CAAiB,GAAjB,UAAkB,SAA2B;QAC3C,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACtC,CAAC;IAED,sCAAW,GAAX,UAAY,IAAI;QACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC;QACT,CAAC;QAED,IAAM,YAAY,GAAG;YACnB,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ;YAChD,IAAI,EAAE,IAAI;SACX,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iGAAsB,EAAE,EAAE,YAAY,gBAAE,CAAC,CAAC;IACrF,CAAC;IAED,iCAAM,GAAN,UAAO,IAAI;QACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC;QACT,CAAC;QACD,IAAM,YAAY,GAAG;YACnB,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ;YAChD,IAAI,EAAE,IAAI;SACX,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+FAAiB,EAAE,EAAE,YAAY,gBAAE,CAAC,CAAC;IAChF,CAAC;IAED,iDAAsB,GAAtB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iGAAsB,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC;IA7FyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,yDAAW;yDAAM;IAC9B;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,yDAAW;yDAAM;IAC7B;QAA1B,+DAAS,CAAC,sFAAc,CAAC;kCAAiB,sFAAc;4DAAC;IAH/C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAa8B,wFAAkB;YAC1B,kEAAU;YACH,mFAAiB;YACtB,4DAAc;OAf3B,gBAAgB,CA+F5B;IAAD,uBAAC;CAAA;AA/F4B;;;;;;;;;;;;ACrB7B,sDAAsD,0EAA0E,cAAc,kG;;;;;;;;;;;ACA9I,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAEhC;AAO5B;IAKE;QAFA,SAAI,GAAG,EAAE,CAAC;IAEM,CAAC;IAEjB,sDAAW,GAAX;QACE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,oDAAS,GAAT,UAAU,CAAC;QACT,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC3C,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,mDAAQ,GAAR,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;QACd,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,iDAAM,GAAN;QAAA,iBA4BC;QA3BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,2CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,CAAC;YACnC,2CAAM,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,CAAC;gBACjB,IAAI,GAAG,CAAC;gBACR,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjD,GAAG,GAAG,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,GAAG,GAAG,CAAC;gBACZ,CAAC;gBACD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,CAAC;YAClD,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,CAAC;gBACpB,IAAM,GAAG,GAAG,KAAI,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACvF,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAChB,MAAM,CAAC,EAAC,eAAe,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACpC,CAAC;IA/CQ;QAAR,2DAAK,EAAE;;uEAAgB;IADb,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;;OACW,gCAAgC,CAiD5C;IAAD,uCAAC;CAAA;AAjD4C;;;;;;;;;;;;ACT7C,iIAAiI,uBAAuB,gXAAgX,uBAAuB,wCAAwC,kBAAkB,8e;;;;;;;;;;;ACAzlB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACP;AAEA;AAEqB;AACkB;AACK;AAOvF;IAKE,gCACS,UAAsB,EACrB,UAAsB,EACtB,mBAAwC;QAFzC,eAAU,GAAV,UAAU,CAAY;QACrB,eAAU,GAAV,UAAU,CAAY;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QANlD,aAAQ,GAAG,EAAE,CAAC;IAOX,CAAC;IAEJ,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,sCAAK,GAAL;QAAA,iBAkBC;QAjBC,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,UAAC,GAAG;YACF,IAAM,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC;YAErD,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,oFAAgB,CAAC,OAAO,EACrB,SAAS,+CAA0C,EAAI,CAC3D,CAAC;YAEF,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,EACD;YACE,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAjCU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAOqB,wDAAU;YACT,kEAAU;YACD,yFAAmB;OARvC,sBAAsB,CAkClC;IAAD,6BAAC;CAAA;AAlCkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdY;AACN;AACM;AAEL;AACM;AAEU;AACW;AACE;AACX;AACQ;AACpB;AACI;AACA;AACA;AACA;AACO;AACX;AAkBhD;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAhB3B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,6DAAU,CAAC,OAAO,EAAE,EAAE,kEAAY,EAAE,uDAAY,EAAE,4DAAY,CAAC;YACvF,YAAY,EAAE;gBACZ,wEAAe;gBACf,iFAAkB;gBAClB,iEAAc;gBACd,iEAAc;gBACd,6DAAY;gBACZ,iEAAc;gBACd,6DAAY;gBACZ,iEAAc;gBACd,wEAAiB;gBACjB,mFAAkB;gBAClB,gFAAiB;aAClB;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACpC5B,sS;;;;;;;;;;;ACAA,uBAAuB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAG;AAOlD;IAGE;QAFA,eAAU,GAAG,KAAK,CAAC,CAAC,0DAA0D;IAE9D,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IANU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,kBAAkB,CAQ9B;IAAD,yBAAC;CAAA;AAR8B;;;;;;;;;;;;ACP/B,kc;;;;;;;;;;;ACAA,oCAAoC,uBAAuB,iBAAiB,oBAAoB,sBAAsB,EAAE,YAAY,2BAA2B,8BAA8B,0BAA0B,sBAAsB,EAAE,sBAAsB,eAAe,uBAAuB,mCAAmC,iBAAiB,uBAAuB,8BAA8B,yBAAyB,+EAA+E,0CAA0C,kCAAkC,EAAE,qCAAqC,4CAA4C,4CAA4C,EAAE,4CAA4C,kBAAkB,EAAE,sCAAsC,4CAA4C,4CAA4C,EAAE,6CAA6C,kBAAkB,EAAE,6BAA6B,iBAAiB,uBAAuB,cAAc,oDAAoD,sBAAsB,sBAAsB,wBAAwB,4DAA4D,EAAE,oCAAoC,0BAA0B,gBAAgB,iBAAiB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSpzC;AAEW;AAEkC;AACU;AAO9E;IAgCE,4BAAoB,aAAgC;QAAhC,kBAAa,GAAb,aAAa,CAAmB;QA1B1C,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEzC,UAAK,GAAQ;YACX,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,CAAC;iBACf;aACF;YACD,OAAO,EAAE;gBACP,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;gBAC1B,SAAS,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBAE1B,QAAQ,EAAE;oBACR,OAAO,EAAE,KAAK;iBACf;aACF;YACD,MAAM,EAAE;gBACN;oBACE,WAAW,EAAE,aAAa;iBAC3B;aACF;SACF,CAAC;IAEqD,CAAC;IAExD,qCAAQ,GAAR;QAAA,iBAsDC;QArDC,oDAAoD;QACpD,mCAAmC;QACnC,sDAAmB,CAAC,QAAQ,CAAC;YAC3B,UAAU,EAAE,UAAS,KAAK;gBACxB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC/B,MAAM,CAAC;gBACT,CAAC;gBAED,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAC7B,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAC3B,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;gBAExB,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,IAAM,QAAQ,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC3C,GAAG,CAAC,IAAI,GAAG,QAAQ,GAAG,eAAe,CAAC;gBACtC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAE5B,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EACpC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAC7D,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;gBAErB,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACjC,GAAG,CAAC,IAAI,EAAE,CAAC;YACb,CAAC;SACF,CAAC,CAAC;QAEH,IAAM,WAAW,GAAG,UAAC,OAAO,EAAE,SAAS;YACrC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;QACjE,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,UAAC,OAAO,EAAE,SAAS;YACtC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3C,CAAC,CAAC;QAEF,IAAM,OAAO,GAAG,UAAC,IAAI;YACnB,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,IAAI,yEAAY,CACnC,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,eAAe,EACpB,YAAY,EACZ,WAAW,CACZ,CAAC;QACF,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QAE/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,UAAC,OAAO;YAC3C,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC;IA3FyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAiB,wDAAU;8DAAC;IAC1B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAkB,wDAAU;+DAAC;IAE9C;QAAR,2DAAK,EAAE;;oDAAW;IACV;QAAR,2DAAK,EAAE;;yDAAgB;IACd;QAAT,4DAAM,EAAE;;yDAAgC;IAN9B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAiCmC,mFAAiB;OAhCzC,kBAAkB,CA6F9B;IAAD,yBAAC;CAAA;AA7F8B;;;;;;;;;;;;ACrB/B,yOAAyO,6BAA6B,kJAAkJ,cAAc,WAAW,yBAAyB,yYAAyY,uCAAuC,qRAAqR,oCAAoC,mSAAmS,mCAAmC,yPAAyP,oCAAoC,6SAA6S,KAAK,gDAAgD,iuBAAiuB,yDAAyD,snBAAsnB,kBAAkB,kFAAkF,6BAA6B,uPAAuP,sCAAsC,iDAAiD,gCAAgC,qDAAqD,sCAAsC,iDAAiD,gCAAgC,klBAAklB,cAAc,QAAQ,iBAAiB,MAAM,4EAA4E,gBAAgB,wVAAwV,cAAc,QAAQ,iBAAiB,MAAM,0GAA0G,2BAA2B,gBAAgB,gN;;;;;;;;;;;ACAx5K,uCAAuC,gBAAgB,EAAE,4BAA4B,yBAAyB,wBAAwB,EAAE,mBAAmB,iBAAiB,EAAE,UAAU,kBAAkB,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhK;AAEjC;AAE6C;AAOzE;IAIE,yBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAE1D,kCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC;YACjC,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,qCAAW,GAAX;QACE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAO,GAAP;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACpD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACzB,IAAI,kBAAkB,CAAC;QAEvB,IAAM,YAAY,GAChB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC;QAEvF,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1F,kBAAkB,GAAG,SAAS,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW;YAC1D,IAAI,CAAC,OAAO,CAAC,kBACf,CAAC,CAAC,CAAC;YACD,kBAAkB,GAAG,SAAS,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW;YAC1D,IAAI,CAAC,OAAO,CAAC,cACf,CAAC,CAAC,CAAC;YACD,kBAAkB,GAAG,SAAS,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,kBAAkB,GAAG,SAAS,CAAC;QACjC,CAAC;QAED,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAC1F,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC;QACzC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,eAAe,EAAE,CAAC,kBAAkB,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;QACtE,KAAK,CAAC,MAAM,GAAG,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IAC/C,CAAC;IAED,0CAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QAC1B,IAAM,MAAM,GAAG;YACb,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;SACV,CAAC;QAEF,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,IAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,2CAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,IAAI,EAAE,CAAC;YAC5B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC;QACjC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7C,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;IAC5B,CAAC;IAtFU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKsC,8EAAgB;OAJ3C,eAAe,CAuF3B;IAAD,sBAAC;CAAA;AAvF2B;;;;;;;;;;;;ACX5B,4TAA4T,4CAA4C,SAAS,0DAA0D,SAAS,yP;;;;;;;;;;;ACApb,0BAA0B,mBAAmB,qBAAqB,gBAAgB,EAAE,wBAAwB,kCAAkC,iCAAiC,oCAAoC,qCAAqC,qBAAqB,kBAAkB,mBAAmB,kBAAkB,yBAAyB,sBAAsB,wBAAwB,uBAAuB,EAAE,4BAA4B,wBAAwB,EAAE,wBAAwB,wBAAwB,wBAAwB,EAAE,uCAAuC,uBAAuB,wBAAwB,4BAA4B,yBAAyB,gCAAgC,EAAE,kDAAkD,2CAA2C,0BAA0B,8BAA8B,uBAAuB,EAAE,oCAAoC,uBAAuB,0BAA0B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA77B;AAOjD;IALA;QAQW,cAAS,GAAG,UAAU,CAAC;IAGlC,CAAC;IALU;QAAR,2DAAK,EAAE;;oDAAe;IACd;QAAR,2DAAK,EAAE;;mDAAc;IACb;QAAR,2DAAK,EAAE;;wDAAwB;IACvB;QAAR,2DAAK,EAAE;;yDAAoB;IACnB;QAAR,2DAAK,EAAE;;2DAAsB;IALnB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;OACW,iBAAiB,CAM7B;IAAD,wBAAC;CAAA;AAN6B;;;;;;;;;;;;;;;;;;;;;;ACPsB;AAKpD;IAAA;IAeA,CAAC;IAdC,gCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU;QACvB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC;gBACL,KAAK,EAAE,SAAS;gBAChB,aAAa,EAAE,MAAM;aACtB,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAdU,YAAY;QAHxB,0DAAI,CAAC;YACJ,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;ACL2B;AACxB;AAK5B;IAAA;IA+BA,CAAC;IA9BC,kCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,2CAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,CAAC,EAAE,CAAC;YAC1B,QAAQ,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,2CAAM,CAAC,KAAK,CAAC,WAAW,EAAE,UAAC,EAAE,EAAE,CAAC;gBAC9B,2CAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,CAAC;oBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,mBAAmB,CAAC,CAAC,CAAC;wBACtC,aAAa,IAAI,CAAC,CAAC;oBACrB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,IAAI,CAAC,CAAC;oBACd,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,UAAU,CAAC;QACxE,CAAC;IACH,CAAC;IA9BU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AACxB;AAK5B;IAAA;IAeA,CAAC;IAdC,kCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,MAAM,GAAG,UAAU,CAAC;QACxB,MAAM,IAAI,kDAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC;QAEvE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC;QACvD,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAdU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAe1B;IAAD,qBAAC;CAAA;AAf0B;;;;;;;;;;;;;;;;;;;;;;ACNyB;AAKpD;IAAA;IAYA,CAAC;IAXC,kCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC;QAC/D,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,CAAC;QAEd,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAXU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;;ACLyB;AACxB;AAK5B;IAAA;IAmBA,CAAC;IAlBC,kCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,2CAAM,CAAC,KAAK,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,CAAC;YACxB,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACX,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACX,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,CAAC;IACzE,CAAC;IAlBU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAmB1B;IAAD,qBAAC;CAAA;AAnB0B;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AACxB;AAK5B;IAAA;IAiCA,CAAC;IAhCC,qCAAS,GAAT,UAAU,QAAa,EAAE,IAAU;QACjC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,GAAG,KAAK,CAAC;QAElB,2CAAM,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,KAAK;YAC5B,EAAE,CAAC,CACD,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAC9B,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC5B,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAC1B,CAAC,CAAC,CAAC;gBACD,KAAK,GAAG,IAAI,CAAC;YACf,CAAC;YAED,EAAE,CAAC,CACD,KAAK,KAAK,cAAc;gBACxB,KAAK,KAAK,wBAAwB;gBAClC,KAAK,KAAK,6BACZ,CAAC,CAAC,CAAC;gBACD,OAAO,GAAG,IAAI,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAED,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;IAC9B,CAAC;IAhCU,iBAAiB;QAH7B,0DAAI,CAAC;YACJ,IAAI,EAAE,eAAe;SACtB,CAAC;OACW,iBAAiB,CAiC7B;IAAD,wBAAC;CAAA;AAjC6B;;;;;;;;;;;;;;;;;;;;;;;;ACNsB;AACxB;AAK5B;IAAA;IASA,CAAC;IARC,gCAAS,GAAT,UAAU,QAAa,EAAE,IAAU;QACjC,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,2CAAM,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,KAAK;YAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IARU,YAAY;QAHxB,0DAAI,CAAC;YACJ,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsB;AACN;AACM;AAEW;AAGG;AAGY;AAgBzE;IAAA;IAAwC,CAAC;IAA5B,wBAAwB;QAdpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAY;gBACZ,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,+HAAgC;gBAChC,8GAA2B;aAC5B;YACD,OAAO,EAAE;gBACP,+HAAgC;aACjC;SACF,CAAC;OACW,wBAAwB,CAAI;IAAD,+BAAC;CAAA;AAAJ;;;;;;;;;;;;AC1BrC,0dAA0d,eAAe,GAAG,aAAa,uL;;;;;;;;;;;ACAzf,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACO;AAOjD;IAQE,qCAAoB,KAAqB;QAAzC,iBAYC;QAZmB,UAAK,GAAL,KAAK,CAAgB;QACvC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAC9B,UAAC,MAA4B;YAC3B,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,6BAA2B,CAAC,eAAe,CAAC;QACjF,CAAC,CACF,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAoC;YACnC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;oCApBU,2BAA2B;IAE/B,2CAAe,GAAG,QAAQ,CAAC;IAFvB,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAS2B,8DAAc;OAR9B,2BAA2B,CAsBvC;IAAD,kCAAC;;CAAA;AAtBuC;;;;;;;;;;;;ACRxC,4OAA4O,uBAAuB,GAAG,YAAY,kC;;;;;;;;;;;ACAlR,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAiF;AAIxB;AAGzD;;GAEG;AAMH;IAiBE,0CAAoB,yBAAoD;QAApD,8BAAyB,GAAzB,yBAAyB,CAA2B;QAfxE,YAAO,GAAyB,EAAE,CAAC;QACnC,aAAQ,GAAkB,EAAE,CAAC;IAc+C,CAAC;IAE7E,mDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,YAAY,EAAE,IAAI,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,sDAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC;aACjE,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAvCsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAkB,yDAAW;sEAAM;IAKhD;QAAR,2DAAK,EAAE;;yEAAqB;IAKpB;QAAR,2DAAK,EAAE;;uEAAmB;IAfhB,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAkB+C,iGAAyB;OAjB7D,gCAAgC,CA6C5C;IAAD,uCAAC;CAAA;AA7C4C;;;;;;;;;;;;;;;ACf7C,IAAY,YAET;AAFH,WAAY,YAAY;IACpB,uCAAuB;AACzB,CAAC,EAFS,YAAY,KAAZ,YAAY,QAErB;;;;;;;;;;;;ACFH,0pBAA0pB,iDAAiD,ulBAAulB,iDAAiD,gcAAgc,QAAQ,kTAAkT,mDAAmD,onD;;;;;;;;;;;ACAhoE,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACoB;AACb;AAMM;AACoB;AACjB;AACE;AACf;AAMrD;IAOE,2BACU,MAAc,EACd,WAA+B,EAC/B,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAoB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAPlC,cAAS,GAAa,CAAC,YAAY,CAAC,CAAC;QAC9B,iBAAY,GAAG,iEAAY,CAAC;QAQjC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,uEAAW,CAC7B;YACE,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;aAClC,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC1B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;aAClC,CAAC;YACF,MAAM,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;SAC3B,EACD,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAC7B,CAAC;IAGD,4CAAgB,GAAhB;QACE,MAAM,CAAC,UAAC,SAAsB;YAC5B,MAAM;YACN,IAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,gBAAgB,GAAG,IAAI,CAAC;YAC5B,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9B,gBAAgB,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;oBACrD,gBAAgB,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACzC,CAAC;YAEH,CAAC;YACD,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;IAGD,kCAAM,GAAN;QAAA,iBAoBC;QAnBC,IAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YACzC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;SACzC,CAAC;QACF,IAAI,MAAuB,CAAC;QAC5B,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YAC3C,IAAI,EAAE,IAAI,yEAAY,CAAC,UAAU,EAAE;gBACjC,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;aACvB,CAAC;YACF,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC;SACvC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CACd,SAAS,EACT,cAAM,YAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAjD,CAAiD,EACvD,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,EAA/B,CAA+B,CACtC,CAAC;IACJ,CAAC;IA3EU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCASkB,sDAAM;YACD,wFAAkB;YAClB,oEAAW;OAVvB,iBAAiB,CA4E7B;IAAD,wBAAC;CAAA;AA5E6B;;;;;;;;;;;;AClB9B,k7CAAk7C,0EAA0E,se;;;;;;;;;;;ACA5/C,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEiB;AAEI;AACoB;AACA;AAEN;AAE+B;AAExC;AAOpE;IAQE,2BACU,WAAwB,EACxB,kBAAsC,EACtC,YAA4B,EAC5B,WAA+B;QAH/B,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,gBAAW,GAAX,WAAW,CAAoB;QAXzC,UAAK,GAAG,EAAE,CAAC;QAEX,cAAS,GAAG,IAAI,kFAAgB,EAAE,CAAC;QAGnC,mBAAc,GAAoB,EAAE,CAAC;QAQnC,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,kBAAkB;gBACxB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;aACxB;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;aACxB;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,CAAC;gBACX,SAAS,EAAE,YAAY;aACxB;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,IAAI,EAAE,uBAAuB;gBAC7B,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;IAClE,CAAC;IAED,2CAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,KAAY;YAChD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf;QAAA,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iHAAsB,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAC1B,QAAQ,EAAE,MAAM;YAChB,OAAO,EAAE,KAAG,QAAU;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,gBAAgB,EAAE;gBAChB,YAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;oBAClC,IAAI,EAAE,IAAI,yEAAY,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;oBAC9D,KAAK,EAAE,KAAI,CAAC,cAAc;oBAC1B,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;iBACxC,CAAC;YAJF,CAIE;SACL,CAAC,CAAC;IACL,CAAC;IAvFU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAUuB,oEAAW;YACJ,wFAAkB;YACxB,4DAAc;YACf,wFAAkB;OAZ9B,iBAAiB,CAwF7B;IAAD,wBAAC;CAAA;AAxF6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBiB;AACN;AACM;AACmB;AAEuB;AAC3B;AAES;AACb;AACU;AACA;AAwBpE;IAAA;IAA0B,CAAC;IAAd,UAAU;QAtBtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU,CAAC,OAAO,EAAE;gBACpB,2EAAiB,CAAC,OAAO,EAAE;gBAC3B,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,2DAAa,CAAC,OAAO,EAAE;gBACvB,yDAAW,CAAC,OAAO,EAAE;gBACrB,kEAAY;gBACZ,+EAAc;aACf;YACD,OAAO,EAAE;gBACP,gFAAiB;aAClB;YACD,YAAY,EAAE;gBACZ,gFAAiB;gBACjB,gFAAiB;aAClB;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACnCvB;AAAA;IAAA;IAKA,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;ACLD,2LAA2L,WAAW,kT;;;;;;;;;;;ACAtM,mCAAmC,wBAAwB,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAxB;AACZ;AAOjD;IAIE,yBAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAHzC,YAAO,GAAG,+CAA+C,CAAC;IAGd,CAAC;IAE7C,kCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAA2B;YAClF,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAdU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAK2B,8DAAc;OAJ9B,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;ACR5B,oVAAoV,iBAAiB,iIAAiI,aAAa,oIAAoI,gBAAgB,yIAAyI,qBAAqB,6IAA6I,yBAAyB,qIAAqI,iBAAiB,6IAA6I,qBAAqB,sIAAsI,cAAc,6IAA6I,qBAAqB,gJAAgJ,gBAAgB,wIAAwI,oBAAoB,0YAA0Y,kDAAkD,sYAAsY,0CAA0C,+ZAA+Z,mCAAmC,gI;;;;;;;;;;;ACAnqG,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAEiB;AAO7E;IAKE;IAAe,CAAC;IAEhB,+CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;IACH,CAAC;IARQ;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;gEAAC;IAH1B,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;;OACW,yBAAyB,CAYrC;IAAD,gCAAC;CAAA;AAZqC;;;;;;;;;;;;ACTtC,mWAAmW,oBAAoB,KAAK,QAAQ,KAAK,2rBAA2rB,oBAAoB,KAAK,QAAQ,KAAK,qoBAAqoB,iDAAiD,i1CAAi1C,gDAAgD,4xBAA4xB,SAAS,2jBAA2jB,oBAAoB,OAAO,QAAQ,KAAK,oS;;;;;;;;;;;ACAziJ,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+C;AACxC;AAE7B;AAE8C;AACJ;AACA;AAQtE;IAOE,gCACU,KAAqB,EACrB,MAAc,EACd,WAA0B,EAC1B,gBAAkC,EAClC,cAA8B;QAJ9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAe;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAVxC,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,IAAI,CAAC;QASZ,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,2CAAU,GAAV;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,IAAI,CAAC;YACV,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;YACnE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAgCC;QA/BC,mCAAmC;QACnC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAc;YACvD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,4BAA4B;QAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAA0B;YACzB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC;YACT,CAAC;YACD,MAAM,CAAC,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAClD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,uCAAuC;YACvC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAY;gBAC9D,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,0BAA0B;gBAC1B,IAAM,QAAQ,GAAG,4CAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,4CAA4C;gBAC5C,IAAI,KAAK,GAAG,2CAAM,CAAC,IAAI,EAAE,2CAAM,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxD,yBAAyB;gBACzB,KAAK,GAAG,4CAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACjC,mBAAmB;gBACnB,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,uCAAM,GAAN;QAAA,iBA+BC;QA9BC,4CAA4C;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,OAAO;YACP,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAClF;gBACE,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,EACD;gBACE,6BAA6B;gBAC7B,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;YACtD,CAAC,CACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACrE;gBACE,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,EACD;gBACE,6BAA6B;gBAC7B,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;YACtD,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,oDAAmB,GAAnB;QACE,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,MAAM,CAAC,UAAC,OAAwB;YAC9B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;gBACzB,mEAAmE;gBACnE,iCAAiC;gBACjC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;oBACd,MAAM,CAAC;gBACT,CAAC;gBACD,4BAA4B;gBAC5B,IAAM,MAAM,GAAG,6BAA6B,CAAC;gBAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;oBACrC,MAAM,CAAC;gBACT,CAAC;gBACD,qDAAqD;gBACrD,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;oBAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACV,OAAO,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IA1HU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCASiB,8DAAc;YACb,sDAAM;YACD,2EAAa;YACR,+EAAgB;YAClB,2EAAc;OAZ7B,sBAAsB,CA2HlC;IAAD,6BAAC;CAAA;AA3HkC;;;;;;;;;;;;AChBnC,k4CAAk4C,oCAAoC,qLAAqL,yCAAyC,8NAA8N,oCAAoC,gkCAAgkC,0CAA0C,wFAAwF,yCAAyC,4NAA4N,oCAAoC,wX;;;;;;;;;;;ACAj3G,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAEN;AAC+B;AAEJ;AACkC;AAC3B;AAEJ;AAEM;AAOnF;IAQE,gCACU,kBAAsC,EACtC,gBAAkC,EAClC,cAA8B;QAF9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAPxC,YAAO,GAAoB,EAAE,CAAC;QAC9B,YAAO,GAAa,EAAE,CAAC;QACvB,cAAS,GAAqB,IAAI,kFAAgB,EAAE,CAAC;QAOnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,8CAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,SAAS,CACpC,UAAC,IAAc;YACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD;YACE,mDAAmD;YACnD,oBAAoB;YACpB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gDAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,6CAAY,GAAZ;QAAA,iBA+BC;QA9BC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iHAAsB,CAAC,CAAC;QAClE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YACrB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;YAClE,gBAAgB,EAAE;gBAChB,MAAM,CAAC,IAAI,+CAAU,CAAC,UAAC,QAAyB;oBAC9C,uCAAuC;oBACvC,qDAAkB,CAChB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,MAAW;wBACtC,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACrD,CAAC,CAAC,CACH,CAAC,SAAS,CACT,IAAI,EACJ,UAAC,KAAK;wBACJ,qCAAqC;wBACrC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACtB,6DAA6D;wBAC7D,oDAAoD;wBACpD,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC1B,CAAC,EACD;wBACE,wCAAwC;wBACxC,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBACpB,iCAAiC;wBACjC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC1B,CAAC,CACF,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC;YACD,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IA3E0B;QAA1B,+DAAS,CAAC,sFAAc,CAAC;kCAAQ,sFAAc;yDAAC;IADtC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAU8B,wFAAkB;YACpB,+EAAgB;YAClB,4DAAc;OAX7B,sBAAsB,CA6ElC;IAAD,6BAAC;CAAA;AA7EkC;;;;;;;;;;;;AClBnC,8e;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAEhC;AAE8C;AACG;AAO7E;IAME,mCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJtD,cAAS,GAAG,EAAE,CAAC;IAI0C,CAAC;IAE1D,+CAAW,GAAX;QACE,gDAAgD;QAChD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,+CAAW,GAAX;QAAA,iBAOC;QANC,EAAE,CAAC,CAAC,8CAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACvD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAlBQ;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;gEAAC;IAJ1B,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAOsC,+EAAgB;OAN3C,yBAAyB,CAuBrC;IAAD,gCAAC;CAAA;AAvBqC;;;;;;;;;;;;ACZtC,0nB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEgC;AAEG;AACQ;AAOrF;IAKE,gCACU,gBAAkC,EAC1C,oBAA0C;QADlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL5C,YAAO,GAAoB,EAAE,CAAC;QAC9B,YAAO,GAAa,EAAE,CAAC;QACvB,cAAS,GAAqB,IAAI,kFAAgB,EAAE,CAAC;QAMnD,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,iBAAiB;gBACvB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,oBAAoB;aAC3B;SACF,CAAC;IACJ,CAAC;IAED,8CAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,SAAS,CACpC,UAAC,IAAc;YACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD;YACE,mDAAmD;YACnD,oBAAoB;YACpB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gDAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IA5CU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAO4B,+EAAgB;YACpB,0FAAoB;OAPjC,sBAAsB,CA6ClC;IAAD,6BAAC;CAAA;AA7CkC;;;;;;;;;;;;ACZnC,wSAAwS,kPAAkP,8CAA8C,q1BAAq1B,QAAQ,2TAA2T,8CAA8C,whBAAwhB,QAAQ,waAAwa,oBAAoB,OAAO,QAAQ,KAAK,4M;;;;;;;;;;;ACA9vF,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgE;AACpB;AAEhB;AAC0C;AAEA;AAStE;IAWE,yCAAoB,WAA0B,EAAS,UAAsB;QAAzD,gBAAW,GAAX,WAAW,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAV7E;;;WAGG;QACO,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG5C,YAAO,GAAG,IAAI,CAAC;QACf,UAAK,GAAa,EAAE,CAAC;QAGnB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oDAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,oDAAU,GAAV,UAAW,OAAuB;QAAvB,wCAAuB;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,mDAAS,GAAT,UAAU,IAAY,EAAE,IAAY;QAClC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,yDAAe,GAAf,UAAgB,YAAiC;QAAjD,iBAaC;QAZC,gEAAgE;QAChE,uBAAuB;QACvB,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,YAAY,CAAC,OAAO,CAAC,UAAC,UAAU;YAC9B,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;YAC7D,EAAE,CAAC,CAAC,8CAAS,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAQ,GAAR;QACE,IAAM,UAAU,GAAsB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IA3DS;QAAT,4DAAM,EAAE;;yEAAmC;IALjC,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAYiC,2EAAa,EAAqB,mFAAU;OAXlE,+BAA+B,CAiE3C;IAAD,sCAAC;CAAA;AAjE2C;;;;;;;;;;;;ACf5C,sVAAsV,gBAAgB,2JAA2J,qBAAqB,2LAA2L,cAAc,2JAA2J,qCAAqC,iKAAiK,oBAAoB,yRAAyR,cAAc,IAAI,uBAAuB,kTAAkT,YAAY,IAAI,YAAY,uaAAua,8CAA8C,8XAA8X,4CAA4C,uZAAuZ,+BAA+B,4aAA4a,gDAAgD,kYAAkY,8CAA8C,2ZAA2Z,iCAAiC,k8B;;;;;;;;;;;ACAj2I,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4F;AAEhE;AACmB;AAEuB;AAEO;AAGyB;AACS;AAO/G;IAcE,iCAAoB,cAA8B,EAAU,cAA8B;QAAtE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAL1F,WAAW;QACX,SAAI,GAAQ,EAAE,CAAC;QACf,gBAAW,GAAoB,EAAE,CAAC;QAClC,kBAAa,GAAqB,IAAI,kFAAgB,EAAE,CAAC;IAEoC,CAAC;IAE9F,0CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG;YACjB;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,6CAAW,GAAX;QAAA,iBAmCC;QAlCC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAEnC,kCAAkC;YAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,6CAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,6CAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAElD,mDAAmD;YACnD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAY;oBACrE,6CAAQ,CAAC,KAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC;YAED,oBAAoB;YACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAiB;gBACvC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;oBACxB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,GAAG,CAAC,IAAI;oBAClB,GAAG,EAAE,GAAG;iBACT,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,GAAoB;gBAChD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;oBACxB,IAAI,EAAE,OAAO;oBACb,QAAQ,EAAE,GAAG,CAAC,IAAI;oBAClB,GAAG,EAAE,GAAG;iBACT,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,6CAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,qDAAmB,GAAnB,UAAoB,SAA2B;QAC7C,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;IACjC,CAAC;IAED,8CAAY,GAAZ;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACvC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CACvC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,iHAA0B,CAAC,CAAC,CAAC,0HAA6B,CAC/E,CAAC;QACF,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,IAAI;gBACP,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBAC9B,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACjF,KAAK,CAAC;YACR,KAAK,OAAO;gBACV,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC7D,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IArF0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAsB,yDAAW;iEAAM;IACtC;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAsB,yDAAW;iEAAM;IAExD;QAAR,2DAAK,EAAE;kCAAY,kFAAgB;8DAAC;IAJ1B,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAeoC,2EAAc,EAA0B,4DAAc;OAd/E,uBAAuB,CAuFnC;IAAD,8BAAC;CAAA;AAvFmC;;;;;;;;;;;;AClBpC,+VAA+V,oBAAoB,KAAK,QAAQ,KAAK,soBAAsoB,oBAAoB,KAAK,QAAQ,KAAK,gKAAgK,gDAAgD,+hCAA+hC,qDAAqD,oxBAAoxB,8CAA8C,iqBAAiqB,oDAAoD,y+DAAy+D,mDAAmD,u1CAAu1C,mDAAmD,muDAAmuD,aAAa,gTAAgT,cAAc,sIAAsI,iBAAiB,sNAAsN,2EAA2E,02DAA02D,aAAa,+SAA+S,YAAY,gwDAAgwD,aAAa,+SAA+S,YAAY,mjCAAmjC,aAAa,qTAAqT,YAAY,GAAG,YAAY,ymFAAymF,4DAA4D,utDAAutD,+DAA+D,01EAA01E,8DAA8D,2uDAA2uD,iEAAiE,i1CAAi1C,oBAAoB,OAAO,QAAQ,KAAK,kS;;;;;;;;;;;ACA13yB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+C;AACxC;AAE7B;AACmB;AACmB;AAEI;AACA;AAEgB;AACR;AAKqC;AACb;AACI;AACK;AAO/G;IAYE,8BACU,WAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,cAA8B,EAC9B,cAA8B;QAJ9B,gBAAW,GAAX,WAAW,CAAe;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAfxC,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,KAAK,CAAC;QAChB,sBAAiB,GAAyB,EAAE,CAAC;QAE7C,aAAQ,GAAqB,EAAE,CAAC;QAChC,WAAM,GAAmB,EAAE,CAAC;QAC5B,cAAS,GAAsB,EAAE,CAAC;QAClC,iBAAY,GAAwB,EAAE,CAAC;QASrC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,yCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,UAAU;YACV,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YAChE,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,KAAK,CAAC,CAAC;YACnC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,SAAS,EAAE,CAAC,KAAK,CAAC;YAClB,SAAS;YACT,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACtE,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACtE,aAAa;YACb,kBAAkB,EAAE,CAAC,KAAK,CAAC;YAC3B,6BAA6B,EAAE,CAAC,IAAI,CAAC;YACrC,mBAAmB,EAAE;gBACnB,IAAI;gBACJ;oBACE,wEAAY,CAAC,UAAU,CAAC;wBACtB,kBAAkB,EAAE,IAAI;wBACxB,6BAA6B,EAAE,KAAK;qBACrC,CAAC;oBACF,IAAI,CAAC,qBAAqB;iBAC3B;aACF;YACD,gCAAgC,EAAE,CAAC,IAAI,CAAC;YACxC,sBAAsB,EAAE;gBACtB,IAAI;gBACJ;oBACE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjB,wEAAY,CAAC,UAAU,CAAC;wBACtB,kBAAkB,EAAE,IAAI;wBACxB,gCAAgC,EAAE,KAAK;qBACxC,CAAC;iBACH;aACF;YACD,eAAe;YACf,oBAAoB,EAAE,CAAC,KAAK,CAAC;YAC7B,+BAA+B,EAAE,CAAC,IAAI,CAAC;YACvC,qBAAqB,EAAE;gBACrB,IAAI;gBACJ;oBACE,wEAAY,CAAC,UAAU,CAAC;wBACtB,oBAAoB,EAAE,IAAI;wBAC1B,+BAA+B,EAAE,KAAK;qBACvC,CAAC;oBACF,IAAI,CAAC,qBAAqB;iBAC3B;aACF;YACD,kCAAkC,EAAE,CAAC,IAAI,CAAC;YAC1C,wBAAwB,EAAE;gBACxB,IAAI;gBACJ;oBACE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjB,wEAAY,CAAC,UAAU,CAAC;wBACtB,oBAAoB,EAAE,IAAI;wBAC1B,kCAAkC,EAAE,KAAK;qBAC1C,CAAC;iBACH;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,8CAAe,GAAf;QAAA,iBA+BC;QA9BC,mFAAmF;QACnF,oFAAoF;QACpF,0EAA0E;QAC1E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YACvD,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;gBACxC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC7D,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;gBAC7D,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YACxE,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC3E,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC/D,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;gBACjE,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC1E,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC7E,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAiEC;QAhEC,4BAA4B;QAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAuB;YAClD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,qCAAqC;YACrC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,uCAAuC;YACvC,IAAM,WAAW,GAAG,EAAE,CAAC;YACvB,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACtD,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,qDAAkB,CAAC,WAAW,CAAC,CAAC,SAAS,CACvC,UAAC,IAAW;gBACV,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,0BAA0B;gBAC1B,IAAM,QAAQ,GAAG,4CAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC9C,4CAA4C;gBAC5C,IAAI,KAAK,GAAG,2CAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,2CAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzD,wBAAwB;gBACxB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;oBAC9B,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;oBACvC,KAAK,CAAC,IAAI,GAAG,gBAAgB,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;oBAC/C,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;wBACvB,KAAK,CAAC,IAAI,GAAG,2BAA2B,CAAC,GAAG,IAAI,CAAC;wBACjD,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,GAAG,IAAI,CAAC;oBACzC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC,IAAI,GAAG,2BAA2B,CAAC,GAAG,KAAK,CAAC;wBAClD,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;oBACnD,CAAC;oBACD,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1B,KAAK,CAAC,IAAI,GAAG,8BAA8B,CAAC,GAAG,IAAI,CAAC;wBACpD,KAAK,CAAC,IAAI,GAAG,oBAAoB,CAAC,GAAG,IAAI,CAAC;oBAC5C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC,IAAI,GAAG,8BAA8B,CAAC,GAAG,KAAK,CAAC;wBACrD,KAAK,CAAC,IAAI,GAAG,oBAAoB,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC;oBACzD,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,6BAA6B;gBAC7B,KAAK,GAAG,4CAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACjC,mBAAmB;gBACnB,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAE9B,qBAAqB;gBACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAEjC,gBAAgB;gBAChB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAEpC,4BAA4B;gBAC5B,IAAM,OAAO,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC;gBACvC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;oBACvB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;wBACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnC,CAAC,EACD,UAAC,KAAK;gBACJ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAqCC;QApCC,4CAA4C;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,OAAO;YACP,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACrE,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,CAAC;QACD,yCAAyC;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC;QACnF,CAAC;QACD,2CAA2C;QAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,CAAC;QACrF,CAAC;QACD,mCAAmC;QACnC,qDAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAClD;YACE,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,EACD;YACE,6BAA6B;YAC7B,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,oDAAqB,GAArB,UAAsB,OAAwB;QAC5C,EAAE,CAAC,CAAC,qFAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAM,CAAC,GAAG,MAAM,CAAC,sDAAsD,EAAE,GAAG,CAAC,CAAC,IAAI,CAChF,OAAO,CAAC,KAAK,CACd,CAAC;QACF,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;QAChC,CAAC;QACD,IAAM,KAAK,GAAG,IAAI,mFAAgB,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IAED;;OAEG;IACH,8CAAe,GAAf;QACE,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3C,MAAM,CAAC,UAAC,OAAwB;YAC9B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO;gBACzB,mEAAmE;gBACnE,iCAAiC;gBACjC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;oBACd,MAAM,CAAC;gBACT,CAAC;gBACD,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;oBAC3D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACV,OAAO,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,yCAAU,GAAV,UAAW,OAAuB,EAAE,KAAc;QAChD,IAAM,cAAc,GAAG;YACrB,cAAc,EAAE,MAAM;YACtB,YAAY,EAAE,WAAW;SAC1B,CAAC;QACF,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAM,IAAI,GAAG;YACX,OAAO,EAAE,OAAO,CAAC,EAAE;YACnB,MAAM,EACJ,OAAO,CAAC,WAAW,IAAI,cAAc;gBACnC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC;gBACrC,CAAC,CAAC,OAAO,CAAC,WAAW;YACzB,QAAQ,EAAE,OAAO;YACjB,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,eAAe,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;SAC5D,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAC1E,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,SAAS;YACT,yEAAyE;YACzE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,sEAAsE;YACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,uEAAuE;YACvE,oEAAoE;YACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,IAAI,EAAE,OAAO,CAAC,EAAE;gBAChB,UAAU,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU;aACzF,CAAC,CAAC;QACL,CAAC;QACD,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,4CAAa,GAAb,UAAc,KAAa;QACzB,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrC,yEAAyE;QACzE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,CACjF,CAAC;QACF,iCAAiC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,GAAG;YACnC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,oCAAoC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,GAAG;YACzC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,uCAAuC;QACvC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC/B,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,4CAAa,GAAb,UAAc,GAAsB,EAAE,KAAc;QAClD,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,SAAS;YACT,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACxC,uEAAuE;YACvE,sEAAsE;YACtE,+DAA+D;YAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CACpE,CAAC;YACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACxF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,yEAAyE;YACzE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACxF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;QACD,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACH,+CAAgB,GAAhB,UAAiB,KAAa;QAC5B,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,4EAA4E;QAC5E,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAC5F,CAAC;QACF,0CAA0C;QAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACnC,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,uCAAQ,GAAR,UAAS,GAAiB,EAAE,KAAc;QACxC,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,SAAS;YACT,oCAAoC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,6DAA6D;YAC7D,IAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACtD,qEAAqE;YACrE,IAAM,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAM,IAAI,GAAG;gBACX,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC7C,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;gBACjD,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,UAAU,EAAE,GAAG,CAAC,UAAU;aAC3B,CAAC;YACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACrE,sEAAsE;YACtE,oEAAoE;YACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU;gBAC7E,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU;aAC9E,CAAC,CAAC;QACL,CAAC;QACD,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,0CAAW,GAAX,UAAY,KAAa;QACvB,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,wEAAwE;QACxE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CACnF,CAAC;QACF,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC7B,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,+CAAgB,GAAhB,UAAiB,KAAc;QAA/B,iBAiBC;QAhBC,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sHAA4B,CAAC,CAAC;QACxE,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO;YACP,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAC9B,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAChC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;QACD,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,OAAuB;YAC9D,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,6CAAc,GAAd,UAAe,KAAc;QAA7B,iBAgBC;QAfC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,kHAA0B,CAAC,CAAC;QACtE,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO;YACP,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAC9B,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;QACvE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,IAAM,UAAU,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAClD,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAC/C,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,GAAiB;gBACxD,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,gDAAiB,GAAjB,UAAkB,KAAa;QAC7B,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2HAA6B,CAAC,CAAC;QACzE,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED;;;OAGG;IACH,kDAAmB,GAAnB,UAAoB,KAAc;QAAlC,iBAeC;QAdC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,+HAA+B,CAAC,CAAC;QAC3E,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO;YACP,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAC9B,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM;YACN,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtD,CAAC;QACD,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,GAAsB;YAC7D,KAAI,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,8CAAe,GAAvB;QAAA,iBAIC;QAHC,MAAM,CAAC,CAAC,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACrE,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,gDAAiB,GAAzB;QAAA,iBAUC;QATC,MAAM,CAAC;YACL,oBAAoB;YACpB,+BAA+B;YAC/B,qBAAqB;YACrB,kCAAkC;YAClC,wBAAwB;SACzB,CAAC,IAAI,CAAC,UAAC,IAAI;YACV,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,kDAAmB,GAA3B;QAAA,iBAUC;QATC,MAAM,CAAC;YACL,sBAAsB;YACtB,iCAAiC;YACjC,uBAAuB;YACvB,oCAAoC;YACpC,0BAA0B;SAC3B,CAAC,IAAI,CAAC,UAAC,IAAI;YACV,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACK,6CAAc,GAAtB;QACE,IAAM,MAAM,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC;YACtC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC;YACpD,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC9C,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC;YAClD,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC;YACpD,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SACf,CAAC;QACF,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,+CAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,4CAAO,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,CAAC;QACD,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,4CAAO,CAAC,MAAM,EAAE;gBACd,YAAY,EAAE,KAAK;gBACnB,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAChD,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC;aACjD,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,6CAAc,GAAtB;QACE,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,IAAI,GAAG,CAAC,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;QACnE,GAAG,CAAC,CAAc,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAjB,IAAM,GAAG;YACZ,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC3C;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,gDAAiB,GAAzB;QACE,IAAM,MAAM,GAAG;YACb,UAAU,EAAE,MAAM;YAClB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC;YACrD,WAAW,EAAE,CAAC,CAAC;YACf,WAAW,EAAE,CAAC,CAAC;SAChB,CAAC;QACF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YAC7D,oCAAoC;YACpC,IAAM,KAAK,GAAG,IAAI,mFAAgB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC5F,oCAAoC;YACpC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAQ,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QAC3E,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,kDAAmB,GAA3B;QACE,IAAM,MAAM,GAAG;YACb,UAAU,EAAE,QAAQ;YACpB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,sBAAsB,CAAC;YACvD,WAAW,EAAE,CAAC,CAAC;YACf,WAAW,EAAE,CAAC,CAAC;SAChB,CAAC;QACF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;YAC/D,oCAAoC;YACpC,IAAM,KAAK,GAAG,IAAI,mFAAgB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC;YAC9F,oCAAoC;YACpC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAQ,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC,CAAC,CAAC;YAClE,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;QAC7E,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACK,sDAAuB,GAA/B;QACE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,2BAA2B;QAC3B,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,+CAAU,CAAC,OAAO,CAAC,IAAI,CAAC,8CAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC;QACD,uBAAuB;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;YAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,sEAAsE;QACtE,gDAAgD;QAChD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,GAAG;YACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,2CAAM,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IA/oBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAcuB,2EAAa;YACnB,8DAAc;YACb,sDAAM;YACE,2EAAc;YACd,4DAAc;OAjB7B,oBAAoB,CAgpBhC;IAAD,2BAAC;CAAA;AAhpBgC;;;;;;;;;;;;AC3BjC,i3CAAi3C,oCAAoC,mLAAmL,8BAA8B,8NAA8N,oCAAoC,8jCAA8jC,0CAA0C,sFAAsF,8BAA8B,4NAA4N,oCAAoC,kX;;;;;;;;;;;ACAp0G,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAEN;AAC+B;AAER;AACsC;AAC3B;AACV;AAEM;AAEM;AAOnF;IAQE,8BACU,kBAAsC,EACtC,cAA8B,EAC9B,cAA8B;QAF9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAPxC,YAAO,GAAoB,EAAE,CAAC;QAC9B,UAAK,GAAa,EAAE,CAAC;QACrB,cAAS,GAAqB,IAAI,kFAAgB,EAAE,CAAC;QAOnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,CAAC;gBACX,kBAAkB,EAAE,4EAAY,CAAC,SAAS;aAC3C;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;IACJ,CAAC;IAED,0CAAW,GAAX;QAAA,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,SAAS,CAClC,UAAC,IAAc;YACb,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,EACD;YACE,mDAAmD;YACnD,oBAAoB;YACpB,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,8CAAe,GAAf,UAAgB,SAA2B;QACzC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,2CAAY,GAAZ;QAAA,iBA+BC;QA9BC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iHAAsB,CAAC,CAAC;QAClE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YACrB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;YAC9D,gBAAgB,EAAE;gBAChB,MAAM,CAAC,IAAI,+CAAU,CAAC,UAAC,QAAyB;oBAC9C,uCAAuC;oBACvC,qDAAkB,CAChB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAS;wBACpC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClD,CAAC,CAAC,CACH,CAAC,SAAS,CACT,IAAI,EACJ,UAAC,KAAK;wBACJ,qCAAqC;wBACrC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACtB,6DAA6D;wBAC7D,oDAAoD;wBACpD,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC1B,CAAC,EACD;wBACE,wCAAwC;wBACxC,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBACpB,iCAAiC;wBACjC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC1B,CAAC,CACF,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC;YACD,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IA3F0B;QAA1B,+DAAS,CAAC,sFAAc,CAAC;kCAAQ,sFAAc;uDAAC;IADtC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAU8B,wFAAkB;YACtB,2EAAc;YACd,4DAAc;OAX7B,oBAAoB,CA6FhC;IAAD,2BAAC;CAAA;AA7FgC;;;;;;;;;;;;ACnBjC,oSAAoS,sPAAsP,8CAA8C,i4BAAi4B,iBAAiB,ywBAAywB,oDAAoD,4tCAA4tC,oDAAoD,6iD;;;;;;;;;;;ACAviH,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgE;AACpB;AAEhB;AAC0C;AAEA;AAEH;AAQnE;IAUE,oCAAoB,WAA0B,EAAS,UAAsB;QAAzD,gBAAW,GAAX,WAAW,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAT7E;;WAEG;QACO,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG5C,YAAO,GAAG,IAAI,CAAC;QACf,mBAAc,GAAa,EAAE,CAAC;QAG5B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,+CAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACtE,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SACvE,CAAC,CAAC;IACL,CAAC;IAED,oDAAe,GAAf;QAAA,iBASC;QARC,mFAAmF;QACnF,oFAAoF;QACpF,0EAA0E;QAC1E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YACxD,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;gBACxC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,+CAAU,GAAV,UAAW,OAAuB;QAAvB,wCAAuB;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,8CAAS,GAAT,UAAU,IAAY,EAAE,UAAkB,EAAE,UAAkB;QAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,8CAAS,CAAC,UAAU,CAAC;YACnC,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,UAAU;SACvB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,sDAAiB,GAAjB,UAAkB,UAAoB;QACpC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;IACnC,CAAC;IAED,6CAAQ,GAAR;QACE,IAAM,GAAG,GAAiB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAhES;QAAT,4DAAM,EAAE;;oEAAmC;IAJjC,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAWiC,2EAAa,EAAqB,mFAAU;OAVlE,0BAA0B,CAqEtC;IAAD,iCAAC;CAAA;AArEsC;;;;;;;;;;;;AChBvC,qSAAqS,sPAAsP,6CAA6C,8aAA8a,gDAAgD,86BAA86B,8CAA8C,iiBAAiiB,QAAQ,imCAAimC,oDAAoD,s0CAAs0C,oBAAoB,OAAO,QAAQ,KAAK,4M;;;;;;;;;;;ACA9iK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgE;AAC4B;AAEhE;AAC0C;AAEA;AAEgB;AAC1B;AAO5D;IAWE,sCAAoB,WAA0B,EAAS,UAAsB;QAAzD,gBAAW,GAAX,WAAW,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAV7E;;;WAGG;QACO,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG5C,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAqB,EAAE,CAAC;QAG9B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,iDAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,GAAG,EAAE,CAAC,IAAI,CAAC;YACX,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC9D,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,YAAY;YACZ,eAAe,EAAE,CAAC,IAAI,CAAC;YACvB,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,wEAAY,CAAC,UAAU,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC1E,CAAC,CAAC;IACL,CAAC;IAED,sDAAe,GAAf;QAAA,iBASC;QARC,mFAAmF;QACnF,oFAAoF;QACpF,0EAA0E;QAC1E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC;YAC3D,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;gBAC1B,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,uDAAgB,GAAhB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,UAAC,OAAwB;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YACD,EAAE,CAAC,CAAC,qFAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YACD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,OAAO;gBACvC,MAAM,CAAC,8CAAS,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,qDAAc,GAAtB,UAAuB,KAAa;QAClC,EAAE,CAAC,CAAC,8CAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAC/C,MAAM,CAAC,kDAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACH,iDAAU,GAAV,UAAW,OAAuB;QAAvB,wCAAuB;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,gDAAS,GAAT,UAAU,GAAW,EAAE,OAAoB,EAAE,WAAwB;QAA9C,sCAAoB;QAAE,8CAAwB;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,GAAG,EAAE,GAAG;YACR,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;YACpC,IAAI,EAAE,WAAW;YACjB,eAAe,EAAE,IAAI;YACrB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,kDAAW,GAAX,UAAY,QAA0B;QACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,+CAAQ,GAAR;QACE,iEAAiE;QACjE,wCAAwC;QACxC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACpC,IAAM,OAAO,GAAG,IAAI,uEAAc,EAAE,CAAC;QACrC,OAAO,CAAC,EAAE,GAAM,MAAM,CAAC,GAAG,SAAI,MAAM,CAAC,MAAQ,CAAC;QAC9C,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;QAClC,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QACjD,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IA7GS;QAAT,4DAAM,EAAE;;sEAAmC;IALjC,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;yCAYiC,2EAAa,EAAqB,mFAAU;OAXlE,4BAA4B,CAmHxC;IAAD,mCAAC;CAAA;AAnHwC;;;;;;;;;;;;AChBzC,uSAAuS,6oD;;;;;;;;;;;ACAvS,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAE4B;AAOtE;IAIE,uCAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE7C;;OAEG;IACH,iDAAS,GAAT,UAAU,IAAY,EAAE,UAAkB;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAZU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;;;SAGxC,CAAC;yCAK+B,mFAAU;OAJ9B,6BAA6B,CAazC;IAAD,oCAAC;CAAA;AAbyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTK;AACN;AACyB;AAQ3C;AAEqC;AACF;AACmC;AAC/B;AACgC;AACT;AACA;AACS;AACT;AAC6B;AAC1B;AACT;AACA;AACsB;AACI;AACK;AAoD9G;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlDrB,8DAAQ,CAAC;YACR,eAAe,EAAE;gBACf,2GAAyB;gBACzB,0GAAyB;gBACzB,qGAAuB;gBACvB,2HAA6B;gBAC7B,kHAA0B;gBAC1B,+HAA+B;gBAC/B,sHAA4B;aAC7B;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAY;gBACZ,oEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,wGAAwB;gBACxB,yDAAW,CAAC,OAAO,EAAE;gBACrB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,wDAAU,CAAC,OAAO,EAAE;gBACpB,2DAAa,CAAC,OAAO,EAAE;gBACvB,yDAAW,CAAC,OAAO,EAAE;aACtB;YACD,OAAO,EAAE;gBACP,0EAAe;gBACf,kGAAsB;gBACtB,2GAAyB;gBACzB,iGAAsB;gBACtB,kGAAsB;gBACtB,0GAAyB;gBACzB,4FAAoB;gBACpB,qGAAuB;aACxB;YACD,YAAY,EAAE;gBACZ,0EAAe;gBACf,kGAAsB;gBACtB,2GAAyB;gBACzB,iGAAsB;gBACtB,kGAAsB;gBACtB,0GAAyB;gBACzB,4FAAoB;gBACpB,qGAAuB;gBACvB,iGAAsB;gBACtB,4FAAoB;gBACpB,2HAA6B;gBAC7B,kHAA0B;gBAC1B,+HAA+B;gBAC/B,sHAA4B;aAC7B;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EyB;AACN;AACI;AACa;AAED;AACG;AAW5D;IAAA;IAA0B,CAAC;IAAd,UAAU;QATtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,qEAAc,EAAE,wEAAe,CAAC;YAC/C,OAAO,EAAE,CAAC,wEAAe,CAAC;SAC3B,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjBvB,+rBAA+rB,yEAAyE,ykBAAykB,yEAAyE,m+C;;;;;;;;;;;ACA15C,0BAA0B,iBAAiB,EAAE,iBAAiB,qBAAqB,gCAAgC,EAAE,eAAe,oBAAoB,0BAA0B,EAAE,mDAAmD,qBAAqB,gCAAgC,EAAE,gCAAgC,6BAA6B,EAAE,0JAA0J,gCAAgC,4BAA4B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAngB;AACT;AAEsB;AACE;AACkB;AAOnF;IAGE,wBACU,WAAwB,EACxB,kBAAsC,EACtC,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QALxB,UAAK,GAAG,IAAI,sEAAW,EAAE,CAAC;IAMvB,CAAC;IAEJ,iCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,8BAAK,GAAL;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAnBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKuB,oEAAW;YACJ,wFAAkB;YAC9B,sDAAM;OANb,cAAc,CAoB1B;IAAD,qBAAC;CAAA;AApB0B;;;;;;;;;;;;ACZ3B,oI;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAEsB;AAO/D;IAEE,yBAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAZU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAGiC,oEAAW;YAChB,sDAAM;OAHvB,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACN;AAEO;AACqB;AACH;AACE;AAOpE;IAAA;IAAyB,CAAC;IAAb,UAAU;QALtB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,8EAAgB,EAAE,4DAAU,CAAC;YACrD,OAAO,EAAE,CAAC,8EAAgB,CAAC;YAC3B,YAAY,EAAE,CAAC,gFAAiB,EAAE,iFAAkB,CAAC;SACtD,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH;;;;;;;;;;;;ACbvB,oQ;;;;;;;;;;;ACAA,sBAAsB,iCAAiC,2BAA2B,EAAE,QAAQ,wBAAwB,2BAA2B,EAAE,OAAO,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACArI;AAO1C;IACE;IAAe,CAAC;IADL,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,kBAAkB,CAE9B;IAAD,yBAAC;CAAA;AAF8B;;;;;;;;;;;;ACP/B,+NAA+N,wJAAwJ,iBAAiB,kBAAkB,eAAe,kBAAkB,eAAe,8N;;;;;;;;;;;ACA1c,qCAAqC,qBAAqB,EAAE,8BAA8B,uBAAuB,EAAE,mBAAmB,wBAAwB,EAAE,iBAAiB,uBAAuB,wBAAwB,EAAE,mBAAmB,qBAAqB,EAAE,QAAQ,mBAAmB,EAAE,gBAAgB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7Q;AAElB;AAG+B;AAO1E;IAME,wBAAmB,QAAoB,EAAU,cAA8B;QAA5D,aAAQ,GAAR,QAAQ,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEnF,iCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,OAAY;YAClE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACT,CAAC;YACD,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxE,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAChC,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAtBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAO6B,wDAAU,EAA0B,+EAAc;OANpE,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACZ3B,4bAA4b,UAAU,sR;;;;;;;;;;;ACAtc,yCAAyC,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhB;AACT;AAEsB;AAM/D;IAGE,iCAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAClE,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC;QACT,CAAC;IACH,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,wCAAM,GAAN;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAI4B,sDAAM,EAAuB,oEAAW;OAHzD,uBAAuB,CAkBnC;IAAD,8BAAC;CAAA;AAlBmC;;;;;;;;;;;;ACTpC,iZAAiZ,qBAAqB,sBAAsB,WAAW,iW;;;;;;;;;;;ACAvc,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAES;AAEwB;AACT;AAChB;AAO1D;IAIE,gCACU,cAA8B,EAC9B,mBAAwC,EACxC,YAA4B;QAF5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAgB;IACnC,CAAC;IAEJ,yCAAQ,GAAR;QAAA,iBASC;QARC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,OAAY;YACnE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACT,CAAC;YACD,IAAM,WAAW,GAAG,KAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACxE,KAAI,CAAC,OAAO,GAAG,+BAA6B,WAAW,oBAAiB,CAAC;YACzE,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAc,GAAd;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qEAAc,CAAC,CAAC;IACzD,CAAC;IAvBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAM0B,+EAAc;YACT,wFAAmB;YAC1B,4DAAc;OAP3B,sBAAsB,CAwBlC;IAAD,6BAAC;CAAA;AAxBkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbY;AACN;AACM;AAEgD;AAEnC;AACF;AACT;AACQ;AAC0B;AACX;AACS;AACJ;AACO;AAyBpF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAvB5B,8DAAQ,CAAC;YACR,eAAe,EAAE,CAAC,qEAAc,CAAC;YACjC,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAU;gBACV,4DAAc,CAAC,OAAO,EAAE;gBACxB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,2DAAa,CAAC,OAAO,EAAE;gBACvB,2DAAa,CAAC,OAAO,EAAE;gBACvB,oEAAgB;gBAChB,kEAAY;gBACZ,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,qEAAc;gBACd,oFAAmB;gBACnB,8FAAsB;gBACtB,0FAAoB;gBACpB,+FAAsB;gBACtB,iGAAuB;aACxB;YACD,OAAO,EAAE,CAAC,oFAAmB,CAAC;SAC/B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACvC7B,g8JAAg8J,wCAAwC,2IAA2I,sCAAsC,6sG;;;;;;;;;;;ACAzpK,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAGiC;AACT;AAO1E;IAKE,6BACU,kBAAsC,EACtC,cAA8B;QAD9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAJxC,gBAAW,GAAG,IAAI,CAAC;QAMjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAC9D,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;YACnD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAgB,GAAhB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IA7BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAO8B,wFAAkB;YACtB,+EAAc;OAP7B,mBAAmB,CA8B/B;IAAD,0BAAC;CAAA;AA9B+B;;;;;;;;;;;;ACXhC,oxBAAoxB,sBAAsB,uFAAuF,wBAAwB,oGAAoG,mCAAmC,0c;;;;;;;;;;;ACAhiC,8CAA8C,qBAAqB,iBAAiB,qBAAqB,uBAAuB,EAAE,wBAAwB,gCAAgC,EAAE,gBAAgB,sBAAsB,mBAAmB,8BAA8B,oBAAoB,EAAE,cAAc,uBAAuB,mBAAmB,oBAAoB,EAAE,WAAW,iBAAiB,6BAA6B,oBAAoB,mBAAmB,EAAE,eAAe,gBAAgB,oBAAoB,EAAE,WAAW,mBAAmB,EAAE,QAAQ,oBAAoB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjjB;AAEtB;AAEmD;AAEK;AAOpF;IAIE,gCAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAF5D,qBAAgB,GAAG,oFAAgB,CAAC;QAGlC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,aAA+B;YACvE,KAAI,CAAC,aAAa,GAAG,8CAAS,CAAC,aAAa,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACvC,CAAC;IAhBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAKyC,yFAAmB;OAJjD,sBAAsB,CAiBlC;IAAD,6BAAC;CAAA;AAjBkC;;;;;;;;;;;;ACbnC,ulBAAulB,6BAA6B,+GAA+G,qCAAqC,qHAAqH,0BAA0B,kgCAAkgC,4BAA4B,4LAA4L,6BAA6B,uIAAuI,kCAAkC,kiBAAkiB,yBAAyB,iB;;;;;;;;;;;ACAl3F,8CAA8C,qBAAqB,iBAAiB,qBAAqB,uBAAuB,EAAE,wBAAwB,gCAAgC,EAAE,gBAAgB,sBAAsB,mBAAmB,8BAA8B,oBAAoB,EAAE,cAAc,uBAAuB,mBAAmB,oBAAoB,EAAE,WAAW,iBAAiB,6BAA6B,oBAAoB,mBAAmB,EAAE,eAAe,gBAAgB,oBAAoB,EAAE,WAAW,mBAAmB,EAAE,QAAQ,oBAAoB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjjB;AAIwB;AACwB;AAOlG;IAME,8BACU,cAA8B,EAC9B,kBAA6C;QAD7C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAA2B;QAPvD,mBAAc,GAAoB,EAAE,CAAC;QACrC,kBAAa,GAAmB,EAAE,CAAC;QAEnC,SAAI,GAAG,gBAAgB,CAAC;IAKrB,CAAC;IAEJ,uCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;YACnD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC7D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAY,GAAZ,UAAa,cAA+B,EAAE,aAA6B;QACzE,GAAG,CAAC,CAAuB,UAAc,EAAd,iCAAc,EAAd,4BAAc,EAAd,IAAc;YAApC,IAAM,YAAY;YACrB,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;SACpF;QACD,GAAG,CAAC,CAAuB,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa;YAAnC,IAAM,YAAY;YACrB,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAChF,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBACnC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YACpF,CAAC;SACF;QACD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,uCAAQ,GAAR,UAAS,cAAsB;QAC7B,IAAM,UAAU,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QAC3E,IAAM,SAAS,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAvCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQ0B,+EAAc;YACV,uGAAyB;OAR5C,oBAAoB,CAwChC;IAAD,2BAAC;CAAA;AAxCgC;;;;;;;;;;;;ACZjC,6jB;;;;;;;;;;;ACAA,sBAAsB,iCAAiC,EAAE,QAAQ,wBAAwB,EAAE,OAAO,2BAA2B,EAAE,SAAS,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAhH;AAO1C;IACE;IAAe,CAAC;IADL,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAE7B;IAAD,wBAAC;CAAA;AAF6B;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACN;AAKzC;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAHrB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN4B;AACP;AAG2B;AAC7B;AAKzC;IACE,qBAAoB,kBAAsC,EAAU,IAAgB;QAAhE,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExF,2BAAK,GAAL,UAAM,WAAwB;QAA9B,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC;aAC7B,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAiB;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,MAAM,CAAC,UAAU,CAAC;aAClB,SAAS,EAAE;aACX,IAAI,CAAC;YACJ,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IApBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAEwC,iFAAkB,EAAgB,+DAAU;OADzE,WAAW,CAqBvB;IAAD,kBAAC;CAAA;AArBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0B;AACP;AAEF;AAKzC;IAGE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,YAAY,CAAC;IAEgB,CAAC;IAExC,4BAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,OAAS,CAAC,CAAC;IAC1C,CAAC;IAED,iCAAS,GAAT,UAAU,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,SAAI,EAAI,CAAC,CAAC;IAChD,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,SAAI,EAAE,aAAU,CAAC,CAAC;IACxD,CAAC;IAED,sCAAc,GAAd,UAAe,EAAE;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,SAAI,EAAE,kBAAe,CAAC,CAAC;IAC7D,CAAC;IAnBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRwB;AACP;AAEF;AAKzC;IACE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,4CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC5C,CAAC;IALU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,oBAAoB,CAMhC;IAAD,2BAAC;CAAA;AANgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACP;AAEF;AAKzC;IACE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,oCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IAC/C,CAAC;IALU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACP;AAEF;AAKzC;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,0BAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;YAC1D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IATU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR0B;AACP;AAEF;AAKzC;IACE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,gCAAO,GAAP,UAAQ,GAAG,EAAE,OAAO,EAAE,KAAK;QACzB,IAAM,OAAO,GAAG;YACd,GAAG,EAAE,GAAG;YACR,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAVU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRuB;AACP;AAEF;AAKzC;IACE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,mCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IALU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,cAAc,CAM1B;IAAD,qBAAC;CAAA;AAN0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRuB;AACP;AAEF;AAMzC;IAGE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,SAAI,GAAG,SAAS,CAAC;IAEe,CAAC;IAEzC,4BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,IAAM,CAAC,CAAC;IACvC,CAAC;IAED,+BAAU,GAAV,UAAW,EAAU;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,SAAI,EAAI,CAAC,CAAC;IAC7C,CAAC;IAED,0BAAK,GAAL,UAAM,EAAE,EAAE,IAAI;QACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,IAAI,SAAI,EAAE,oBAAe,IAAM,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,6BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,WAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,gCAAW,GAAX,UAAY,KAAe;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,WAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,4BAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,IAAI,SAAI,EAAE,aAAU,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,6BAAQ,GAAR,UAAS,EAAE;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,IAAI,SAAI,EAAE,cAAW,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IA9BU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,UAAU,CA+BtB;IAAD,iBAAC;CAAA;AA/BsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT2B;AACP;AAED;AACA;AAED;AAKzC;IAGE,mCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,mBAAmB,CAAC;IAEK,CAAC;IAExC,wCAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,uCAAG,GAAH,UAAI,YAAoB,EAAE,UAAkB;QAC1C,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,WAAW,SAAI,UAAY,CAAC,CAAC,IAAI,CACnE,+DAAQ,CAAC,UAAC,IAAI;YACZ,MAAM,CAAC,+CAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAhBU,yBAAyB;QAHrC,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,yBAAyB,CAiBrC;IAAD,gCAAC;CAAA;AAjBqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXY;AACP;AAEQ;AACV;AAMzC;IACE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,6BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,0BAAI,GAAJ,UAAK,KAAU;QAAV,kCAAU;QACb,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,oBAAkB,QAAU,CAAC;aACjC,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAS;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN,UAAO,IAAI;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,4BAAM,GAAN,UAAO,QAAa;QAAb,wCAAa;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAY,QAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3E,CAAC;IAvBU,WAAW;QAJvB,8DAAQ;QACR,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,WAAW,CAwBvB;IAAD,kBAAC;CAAA;AAxBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV0B;AACP;AAEF;AAKzC;IACE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,iCAAG,GAAH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IALU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,mBAAmB,CAM/B;IAAD,0BAAC;CAAA;AAN+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AACP;AAEQ;AACV;AAMzC;IACE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,2BAAM,GAAN,UAAO,GAAG;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,2BAAM,GAAN,UAAO,QAAQ,EAAE,OAAO;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAmB,QAAQ,SAAI,OAAS,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,2BAAM,GAAN,UAAO,QAAQ,EAAE,OAAO,EAAE,GAAG;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAmB,QAAQ,SAAI,OAAS,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,wBAAG,GAAH,UAAI,QAAQ,EAAE,OAAO;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAmB,QAAQ,SAAI,OAAS,CAAC,CAAC;IACjE,CAAC;IAED,yBAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C,CAAC;IAED,yBAAI,GAAJ,UAAK,QAAQ,EAAE,OAAO,EAAE,GAAG;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAmB,QAAQ,SAAI,OAAO,UAAO,EAAE,GAAG,EAAE;YACxE,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,4BAAO,GAAP,UAAQ,QAAQ,EAAE,OAAO;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAmB,QAAQ,SAAI,OAAO,aAAU,EAAE,IAAI,EAAE;YAC5E,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,oCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAC3D,CAAC;IAED,mCAAc,GAAd,UAAe,QAAQ,EAAE,OAAO,EAAE,YAAY;QAC5C,IAAM,OAAO,GAAG;YACd,aAAa,EAAE,YAAY;SAC5B,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAmB,QAAQ,SAAI,OAAO,UAAO,EAAE,OAAO,EAAE;YAC5E,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,mCAAc,GAAd,UAAe,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,eAAe;QAC7D,IAAM,OAAO,GAAG;YACd,aAAa,EAAE,eAAe;SAC/B,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAmB,QAAQ,SAAI,OAAO,cAAS,YAAc,EAAE,OAAO,EAAE;YAC3F,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,oCAAe,GAAf,UAAgB,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW;QAC1D,IAAM,OAAO,GAAG;YACd,YAAY,EAAE,WAAW;SAC1B,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAmB,QAAQ,SAAI,OAAO,cAAS,YAAc,EAAE,OAAO,EAAE;YAC3F,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,qCAAgB,GAAhB,UAAiB,QAAQ,EAAE,OAAO,EAAE,YAAY;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,qBAAmB,QAAQ,SAAI,OAAO,cAAS,YAAY,cAAW,EACtE,IAAI,EACJ,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,kCAAa,GAAb,UAAc,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,qBAAmB,QAAQ,SAAI,OAAO,cAAS,YAAY,WAAQ,EACnE,OAAO,EACP,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,mCAAc,GAAd,UAAe,QAAQ,EAAE,OAAO,EAAE,YAAY;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAmB,QAAQ,SAAI,OAAO,cAAS,YAAc,EAAE;YACrF,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAtFU,UAAU;QAJtB,8DAAQ;QACR,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAE0B,+DAAU;OADzB,UAAU,CAuFtB;IAAD,iBAAC;CAAA;AAvFsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVuC;AACnB;AAEf;AAC8C;AAChC;AAES;AACV;AAMzC;IAGE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,iBAAiB,CAAC;IAEO,CAAC;IAExC;;;OAGG;IACH,+BAAI,GAAJ;QAAA,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAC1B,+DAAQ,CAAC,UAAC,OAAiB;YACzB,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,qDAAkB,CACvB,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc;oBACzB,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC,CAAC,CACH,CAAC;YACJ,CAAC;YACD,MAAM,CAAC,+CAAY,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,oCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,8BAAG,GAAH,UAAI,MAAc;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,MAAQ,CAAC,CAAC;IAChD,CAAC;IAED,iCAAM,GAAN,UAAO,MAAc,EAAE,GAAW;QAChC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,iCAAM,GAAN,UAAO,MAAc,EAAE,QAAgB,EAAE,GAAW;QAClD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC9C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,MAAQ,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,iCAAM,GAAN,UAAO,MAAc,EAAE,YAAmB;QAAnB,kDAAmB;QACxC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,MAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACvE,CAAC;IAED;;;;OAIG;IACH,iCAAM,GAAN,UAAO,MAAc;QACnB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAC1B,+DAAQ,CAAC,UAAC,IAAc;YACtB,IAAM,KAAK,GAAG,8CAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,+CAAY,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IApEU,gBAAgB;QAJ5B,8DAAQ;QACR,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,gBAAgB,CAqE5B;IAAD,uBAAC;CAAA;AArE4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdqB;AACP;AAEQ;AACV;AAMzC;IAGE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,gBAAgB,CAAC;IAEQ,CAAC;IAExC,+BAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,8BAAG,GAAH,UAAI,EAAU;QACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,EAAI,CAAC,CAAC;IAC5C,CAAC;IAXU,gBAAgB;QAJ5B,8DAAQ;QACR,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,gBAAgB,CAY5B;IAAD,uBAAC;CAAA;AAZ4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACnB;AAEf;AAC8C;AAChC;AAES;AACV;AAMzC;IAGE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,eAAe,CAAC;IAES,CAAC;IAExC;;;OAGG;IACH,6BAAI,GAAJ;QAAA,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAC1B,+DAAQ,CAAC,UAAC,IAAc;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,qDAAkB,CACvB,IAAI,CAAC,GAAG,CAAC,UAAC,GAAW;oBACnB,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC,CAAC,CACH,CAAC;YACJ,CAAC;YACD,MAAM,CAAC,+CAAY,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,kCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,4BAAG,GAAH,UAAI,GAAW;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,GAAK,CAAC,CAAC;IAC7C,CAAC;IAED,iCAAQ,GAAR,UAAS,GAAW;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,WAAQ,CAAC,CAAC;IACnD,CAAC;IAED,+BAAM,GAAN,UAAO,IAAY;QACjB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,2CAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAM,GAAN,UAAO,GAAW,EAAE,IAAY;QAC9B,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,2CAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,GAAK,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,oCAAW,GAAX,UAAY,GAAW,EAAE,IAAY;QACnC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,2CAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,WAAQ,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,+BAAM,GAAN,UAAO,GAAW;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,GAAK,CAAC,CAAC;IAChD,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW,EAAE,IAAY;QACrC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,2CAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,aAAU,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW,EAAE,OAAe;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,iBAAY,OAAS,CAAC,CAAC;IACnE,CAAC;IAED,sCAAa,GAAb,UAAc,GAAW,EAAE,IAAY,EAAE,IAAY;QACnD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,gBAAa,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,yCAAgB,GAAhB,UAAiB,GAAW,EAAE,IAAY,EAAE,IAAY;QACtD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,gBAAa,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,iCAAQ,GAAR,UAAS,GAAW,EAAE,IAAY;QAChC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzC,2CAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,SAAM,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,oCAAW,GAAX,UAAY,GAAW,EAAE,SAAiB;QACxC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,GAAG,SAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACH,+BAAM,GAAN,UAAO,GAAW;QAChB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAC1B,+DAAQ,CAAC,UAAC,IAAc;YACtB,IAAM,KAAK,GAAG,8CAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACnC,MAAM,CAAC,+CAAY,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA1HU,cAAc;QAJ1B,8DAAQ;QACR,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAI0B,+DAAU;OAHzB,cAAc,CA2H1B;IAAD,qBAAC;CAAA;AA3H0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACduB;AACP;AAEF;AAKzC;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,oCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;YAC/D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IATU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,qDAAS;SACtB,CAAC;yCAG0B,+DAAU;OAFzB,gBAAgB,CAU5B;IAAD,uBAAC;CAAA;AAV4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkB;AACN;AACyB;AAEb;AACkC;AAEnC;AAC2C;AACZ;AACT;AACd;AACW;AACS;AACvB;AACY;AACW;AACZ;AACG;AA0CvE;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAxC5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,yDAAW,CAAC,OAAO,EAAE;gBACrB,2DAAa,CAAC,OAAO,EAAE;gBACvB,2DAAa,CAAC,OAAO,EAAE;gBACvB,kEAAY;gBACZ,kEAAmB;gBACnB,+DAAW;gBACX,yDAAW,CAAC,OAAO,EAAE;aACtB;YACD,YAAY,EAAE;gBACZ,oFAAkB;gBAClB,kFAAkB;gBAClB,wEAAe;gBACf,6FAAqB;gBACrB,iFAAiB;gBACjB,sFAAmB;gBACnB,6FAAqB;gBACrB,oFAAkB;gBAClB,sEAAc;gBACd,+FAAsB;gBACtB,2GAA0B;aAC3B;YACD,SAAS,EAAE,EAAE;YACb,OAAO,EAAE;gBACP,oFAAkB;gBAClB,kFAAkB;gBAClB,wEAAe;gBACf,6FAAqB;gBACrB,sFAAmB;gBACnB,6FAAqB;gBACrB,oFAAkB;gBAClB,iFAAiB;gBACjB,sEAAc;aACf;YACD,eAAe,EAAE,CAAC,sEAAc,EAAE,+FAAsB,EAAE,2GAA0B,CAAC;SACtF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC5D7B,sEAAsE,aAAa,2TAA2T,+SAA+S,cAAc,2R;;;;;;;;;;;ACA3sB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+D;AACpB;AAEA;AAO3C;IAUE,oCAAmB,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG;YACjB,SAAS,EAAE,IAAI,CAAC,QAAQ;SACzB,CAAC;IACJ,CAAC;IAED,2CAAM,GAAN;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,uDAAkB,GAAlB;QACE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IA1BU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAW6B,wDAAU;OAV5B,0BAA0B,CA2BtC;IAAD,iCAAC;CAAA;AA3BsC;;;;;;;;;;;;ACVvC,smBAAsmB,WAAW,4RAA4R,6DAA6D,kvBAAkvB,sBAAsB,2DAA2D,WAAW,woBAAwoB,YAAY,mB;;;;;;;;;;;ACA56E,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AACjB;AAKD;AACyB;AAOjF;IALA;QASE,YAAO,GAAG,KAAK,CAAC;IA6ElB,CAAC;IArEC,wFAAwF;IACxF,sCAAK,GAAL,UAAM,EAcL;YAbC,sBAAQ,EACR,sBAAQ,EACR,kCAAc,EACd,oBAAO,EACP,sCAAgB,EAChB,4BAAW;QASX,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACtC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,gEAAW,CAAC;YAClC,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,EAAE;QACnB,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;IAC7C,CAAC;IAED,6CAAY,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC/B,SAAS,EACT,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1B,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,mDAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;IACxD,CAAC;IA/EiC;QAAjC,+DAAS,CAAC,4FAAqB,CAAC;kCAAe,4FAAqB;gEAAC;IAD3D,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;OACW,sBAAsB,CAiFlC;IAAD,6BAAC;CAAA;AAjFkC;;;;;;;;;;;;ACdnC,0SAA0S,SAAS,ic;;;;;;;;;;;ACAnT,2CAA2C,wBAAwB,wBAAwB,EAAE,8BAA8B,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA5E;AAOvE;IALA;QAME;;;WAGG;QACM,UAAK,GAAG,OAAO,CAAC;QAEzB;;;WAGG;QACO,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;IAC5C,CAAC;IAPU;QAAR,2DAAK,EAAE;;sDAAiB;IAMf;QAAT,4DAAM,EAAE;;2DAAiC;IAX/B,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;OACW,mBAAmB,CAY/B;IAAD,0BAAC;CAAA;AAZ+B;;;;;;;;;;;;ACPhC,4S;;;;;;;;;;;ACAA,qBAAqB,mBAAmB,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOjD;IAIE;IAAgB,CAAC;IAFR;QAAR,2DAAK,EAAE;;iDAAW;IAFR,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,eAAe,CAM3B;IAAD,sBAAC;CAAA;AAN2B;;;;;;;;;;;;ACP5B,2RAA2R,SAAS,kK;;;;;;;;;;;ACApS,0CAA0C,wBAAwB,wBAAwB,EAAE,6BAA6B,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAhG;AAOjD;IALA;QAME;;;WAGG;QACM,UAAK,GAAG,aAAa,CAAC;IACjC,CAAC;IADU;QAAR,2DAAK,EAAE;;qDAAuB;IALpB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;OACW,kBAAkB,CAM9B;IAAD,yBAAC;CAAA;AAN8B;;;;;;;;;;;;ACP/B,0L;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IACA,CAAC;IADY,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;OACW,qBAAqB,CACjC;IAAD,4BAAC;CAAA;AADiC;;;;;;;;;;;;ACPlC,uUAAuU,sF;;;;;;;;;;;ACAvU,iCAAiC,qCAAqC,8BAA8B,+BAA+B,EAAE,mBAAmB,qCAAqC,8BAA8B,+BAA+B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACA3M;AAEqB;AAOtE;IAGE;IAAe,CAAC;IAFP;QAAR,2DAAK,EAAE;kCAAW,mFAAU;oDAAC;IADnB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,cAAc,CAI1B;IAAD,qBAAC;CAAA;AAJ0B;;;;;;;;;;;;ACT3B,0X;;;;;;;;;;;ACAA,oCAAoC,uBAAuB,iBAAiB,oBAAoB,sBAAsB,EAAE,YAAY,2BAA2B,8BAA8B,0BAA0B,sBAAsB,EAAE,sBAAsB,eAAe,uBAAuB,mCAAmC,iBAAiB,uBAAuB,8BAA8B,yBAAyB,+EAA+E,0CAA0C,kCAAkC,EAAE,qCAAqC,4CAA4C,4CAA4C,EAAE,4CAA4C,kBAAkB,EAAE,sCAAsC,4CAA4C,4CAA4C,EAAE,6CAA6C,kBAAkB,EAAE,6BAA6B,iBAAiB,uBAAuB,cAAc,oDAAoD,sBAAsB,sBAAsB,wBAAwB,4DAA4D,EAAE,oCAAoC,0BAA0B,gBAAgB,iBAAiB,uBAAuB,EAAE,sBAAsB,gCAAgC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAhyC;AAC7D;AAE8B;AAOpE;IAgEE;QA1DA,UAAK,GAAG;YACN,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,OAAO;SACf,CAAC;QAEK,WAAM,GAAe;YAC1B;gBACE,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,oBAAoB;gBACjC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,sBAAsB;aAC9C;SACF,CAAC;QAEF,YAAO,GAAG;YACR,SAAS,EAAE;gBACT,QAAQ,EAAE,CAAC;aACZ;YACD,UAAU,EAAE,IAAI;YAChB,mBAAmB,EAAE,KAAK;YAC1B,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE;oBACJ,WAAW,EAAE,CAAC;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,SAAS;aAClB;YACD,MAAM,EAAE;gBACN,KAAK,EAAE;oBACL;wBACE,OAAO,EAAE,KAAK;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL;wBACE,OAAO,EAAE,KAAK;qBACf;iBACF;aACF;SACF,CAAC;QAEK,aAAQ,GAAe;YAC5B;gBACE,IAAI,EAAE,EAAE;aACT;SACF,CAAC;QAEK,WAAM,GAAe,EAAE,CAAC;IAEhB,CAAC;IAEhB,qCAAQ,GAAR;QACE,IAAM,WAAW,GAAG,UAAC,OAAO,EAAE,SAAS;YACrC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACzE,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,UAAC,OAAO,EAAE,SAAS;YACtC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3C,CAAC,CAAC;QAEF,IAAM,YAAY,GAAG,IAAI,yEAAY,CACnC,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,eAAe,EACpB,YAAY,EACZ,WAAW,CACZ,CAAC;QAEF,YAAY,CAAC,YAAY,GAAG;YAC1B,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,oBAAoB;YACpD,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB;SAC7C,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,iBAAO;YACpC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAO,IAAI,CAAC,QAAQ,QAAC,CAAC;QACnC,IAAI,CAAC,MAAM,GAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,QAAC,CAAC;IAChE,CAAC;IA/FyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAiB,wDAAU;8DAAC;IAC1B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAkB,wDAAU;+DAAC;IAE9C;QAAR,2DAAK,EAAE;;oDAAW;IAEnB;QADC,2DAAK,EAAE;;qDAIN;IATS,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,kBAAkB,CAiG9B;IAAD,yBAAC;CAAA;AAjG8B;;;;;;;;;;;;ACV/B,6S;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA2F;AACH;AAE5D;AAE5B;;;;;;;;;;;;;;;;;GAiBG;AAMH;IAOE,+BAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAL5B,SAAI,GAAG,QAAQ,CAAC;QACf,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE5C,YAAO,GAAG,KAAK,CAAC;IAEwB,CAAC;IAEzC,wCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAChC,EAAE,CAAC,CAAC,0CAAK,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,4CAAO,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;gBAC3C,yBAAyB;gBAC1B,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,YAAY,8DAAe,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,IAAK,CAAC,sBAAsB,EAAE,CAAC;gBACxD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAM,GAAN,UAAO,MAAM;QACX,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,8CAA8C;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,YAAY,iEAAkB,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,aAAa,CACjD,mBAAgB,IAAI,CAAC,IAAI,QAAI,CAC9B,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,4CAAY,GAAZ;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,aAAa,CAChE,qCAAqC,CACtC,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IApDQ;QAAR,2DAAK,EAAE;;uDAA0B;IACzB;QAAR,2DAAK,EAAE;;uDAAiB;IACf;QAAT,4DAAM,EAAE;;+DAAmC;IAHjC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQ2B,wDAAU;OAP1B,qBAAqB,CAsDjC;IAAD,4BAAC;CAAA;AAtDiC;;;;;;;;;;;;AC5BlC,gHAAgH,iDAAiD,6BAA6B,8EAA8E,iDAAiD,6BAA6B,0SAA0S,kBAAkB,0K;;;;;;;;;;;ACAtpB,mB;;;;;;;;;;;;;;;;;;;;;;;;ACA4D;AAO5D;IAQE;IAAe,CAAC;IAEhB,uCAAW,GAAX;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;IACpD,CAAC;IAbQ;QAAR,2DAAK,EAAE;;yDAAoB;IACnB;QAAR,2DAAK,EAAE;;wDAAmB;IAFhB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAe7B;IAAD,wBAAC;CAAA;AAf6B;;;;;;;;;;;;ACP9B,spB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AAEqB;AAO9E;IAKE;QAFA,QAAG,GAAG,mFAAe,CAAC;IAEP,CAAC;IAEhB,qCAAQ,GAAR,cAAY,CAAC;IANJ;QAAR,2DAAK,EAAE;;sDAAyB;IACxB;QAAR,2DAAK,EAAE;;yDAAmB;IAFhB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAQ9B;IAAD,yBAAC;CAAA;AAR8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACN;AACI;AACE;AAEc;AACH;AAES;AACf;AACiC;AAC5B;AAsBzD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QApB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAkB;gBAClB,0DAAW;gBACX,uEAAgB,CAAC,OAAO,EAAE;gBAC1B,+DAAW;gBACX,8EAAgB;gBAChB,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,qEAAc;gBACd,iGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,qEAAc;gBACd,0EAAkB;gBAClB,iGAAsB;aACvB;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjC5B,uW;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0F;AAE9D;AAEiC;AAG7D;;;;;;;GAOG;AAMH;IAoBE;QAnBA,YAAO,GAAyB,EAAE,CAAC;QAG1B,eAAU,GAAQ,IAAI,CAAC;QAEvB,kBAAa,GAAG,KAAK,CAAC;QAC/B,oCAAoC;QAC3B,oBAAe,GAAG,IAAI,CAAC;QAOhC;;WAEG;QACO,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;IAE1B,CAAC;IAEhB,yCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,CAAC;gBACX,kBAAkB,EAAE,qEAAY,CAAC,IAAI;aACtC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,CAAC;aACZ;SACF,CAAC;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,4CAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,wCAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,CAAC,gBAAgB;QAC1B,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,2CAAU,GAAV,UAAW,IAAS;QAApB,iBAaC;QAZC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,CAAC,gBAAgB;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,8CAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,YAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAArB,CAAqB,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,EAAD,CAAC,CAAC,CAAC,CAAC,wBAAwB;QACxF,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtE,CAAC;IAED,oDAAmB,GAAnB,UAAoB,IAAW;QAC7B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,oDAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,0CAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,0CAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,GAAO,IAAI,QAAC,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;YAC5E,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,8CAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,QAAC;wBACtB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;wBACT,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;qBACZ,CAAC,EAHqB,CAGrB,CAAC,CAAC;gBACN,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,qDAAoB,GAApB,UAAqB,IAAY;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,QAAC;YACnC,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;SACf,CAAC,EAHkC,CAGlC,CAAC,CAAC;IACN,CAAC;IAED,sDAAqB,GAArB,UAAsB,IAAW;QAAjC,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAChB,EAAE,CAAC,CAAC,oDAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;oBACpC,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;oBACpC,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;oBACxB,CAAC,EAAE,CAAC;gBACN,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,8CAAa,GAAb,UAAc,CAAM;QAClB,EAAE,CAAC,CAAC,8CAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK;iBACd,GAAG,CAAC,UAAC,IAAI,IAAK,QAAC,oDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAArD,CAAqD,CAAC;iBACpE,IAAI,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oDAAe,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC;QACT,CAAC;QACD,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,2CAAU,GAAV;QACE,uDAAuD;QACvD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAzHQ;QAAR,2DAAK,EAAE;;wDAAW;IACV;QAAR,2DAAK,EAAE;;8DAAwB;IAEvB;QAAR,2DAAK,EAAE;;iEAAuB;IAEtB;QAAR,2DAAK,EAAE;;mEAAwB;IAUtB;QAAT,4DAAM,EAAE;;6DAAgC;IAlB9B,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,sBAAsB,CA6HlC;IAAD,6BAAC;CAAA;AA7HkC;;;;;;;;;;;;ACpBnC,ggEAAggE,eAAe,2xDAA2xD,iBAAiB,gGAAgG,YAAY,yCAAyC,qBAAqB,67BAA67B,SAAS,wUAAwU,SAAS,6QAA6Q,SAAS,yMAAyM,SAAS,4EAA4E,mBAAmB,+B;;;;;;;;;;;ACAn0L,uCAAuC,wBAAwB,EAAE,oCAAoC,mBAAmB,iDAAiD,wBAAwB,uBAAuB,4BAA4B,6BAA6B,EAAE,yCAAyC,4BAA4B,mBAAmB,kBAAkB,mBAAmB,wBAAwB,yBAAyB,iDAAiD,sBAAsB,qBAAqB,yBAAyB,EAAE,wCAAwC,0BAA0B,EAAE,6CAA6C,wBAAwB,EAAE,qDAAqD,sBAAsB,2BAA2B,6BAA6B,8BAA8B,0BAA0B,EAAE,2DAA2D,sCAAsC,EAAE,6DAA6D,4BAA4B,EAAE,gDAAgD,kBAAkB,EAAE,oDAAoD,wBAAwB,wBAAwB,EAAE,wBAAwB,8BAA8B,8BAA8B,wBAAwB,iBAAiB,uBAAuB,EAAE,4CAA4C,4BAA4B,EAAE,oCAAoC,wBAAwB,EAAE,qCAAqC,mBAAmB,iDAAiD,wBAAwB,iBAAiB,uBAAuB,EAAE,mDAAmD,qBAAqB,EAAE,kDAAkD,qBAAqB,EAAE,oDAAoD,mCAAmC,EAAE,yDAAyD,gBAAgB,sBAAsB,yBAAyB,EAAE,4BAA4B,8BAA8B,qBAAqB,+BAA+B,EAAE,6CAA6C,qBAAqB,yBAAyB,kBAAkB,kBAAkB,iBAAiB,gBAAgB,EAAE,wDAAwD,kCAAkC,EAAE,6DAA6D,kBAAkB,uBAAuB,sBAAsB,6BAA6B,2BAA2B,oCAAoC,EAAE,oEAAoE,yBAAyB,6BAA6B,wBAAwB,uBAAuB,uBAAuB,uBAAuB,oCAAoC,iEAAiE,iEAAiE,EAAE,8CAA8C,mCAAmC,gCAAgC,4EAA4E,kCAAkC,6HAA6H,EAAE,6GAA6G,uBAAuB,EAAE,qEAAqE,qBAAqB,qBAAqB,uCAAuC,yCAAyC,yBAAyB,0BAA0B,EAAE,wGAAwG,mCAAmC,2BAA2B,sBAAsB,qBAAqB,4BAA4B,6BAA6B,mCAAmC,sBAAsB,EAAE,iHAAiH,+BAA+B,EAAE,sIAAsI,+BAA+B,EAAE,uIAAuI,+BAA+B,EAAE,iFAAiF,4BAA4B,EAAE,uDAAuD,gCAAgC,yBAAyB,wBAAwB,yBAAyB,uBAAuB,0BAA0B,EAAE,qGAAqG,6BAA6B,sCAAsC,+BAA+B,yCAAyC,EAAE,mFAAmF,gCAAgC,EAAE,kFAAkF,gCAAgC,EAAE,gJAAgJ,gCAAgC,EAAE,qFAAqF,mBAAmB,mBAAmB,qCAAqC,uCAAuC,EAAE,iGAAiG,0BAA0B,EAAE,gHAAgH,uBAAuB,EAAE,oHAAoH,yBAAyB,wBAAwB,EAAE,sEAAsE,mCAAmC,EAAE,2FAA2F,iEAAiE,EAAE,yJAAyJ,2BAA2B,EAAE,iKAAiK,8BAA8B,0BAA0B,2BAA2B,qBAAqB,EAAE,qFAAqF,kCAAkC,EAAE,wFAAwF,kCAAkC,EAAE,yCAAyC,UAAU,mBAAmB,iBAAiB,EAAE,SAAS,iBAAiB,EAAE,SAAS,iBAAiB,EAAE,SAAS,gBAAgB,EAAE,SAAS,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,iCAAiC,UAAU,mBAAmB,iBAAiB,EAAE,SAAS,iBAAiB,EAAE,SAAS,iBAAiB,EAAE,SAAS,gBAAgB,EAAE,SAAS,iBAAiB,EAAE,QAAQ,iBAAiB,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACY54O;AAOU;AACL;AACgC;AAEC;AAEM;AAQnE;IAiGE,wBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAlFlC,yCAAyC;QAChC,eAAU,GAAI,MAAM,CAAC;QAC9B,kFAAkF;QACzE,eAAU,GAAI,IAAI,CAAC;QAC5B,4BAA4B;QACnB,WAAM,GAAI,IAAI,CAAC;QACxB,4BAA4B;QACnB,WAAM,GAAI,IAAI,CAAC;QACxB,gEAAgE;QACvD,UAAK,GAAI,EAAE,CAAC;QAErB;;;;WAIG;QACM,eAAU,GAAQ,IAAI,CAAC;QAEhC,oFAAoF;QACpF,gFAAgF;QACvE,eAAU,GAAG,IAAI,CAAC;QAC3B,wFAAwF;QACxF,sCAAsC;QAC7B,oBAAe,GAAG,KAAK,CAAC;QACjC,wEAAwE;QACxE,4BAA4B;QACnB,kBAAa,GAAW,SAAS,CAAC;QAC3C,mEAAmE;QAC1D,6BAAwB,GAAG,IAAI,CAAC;QAEhC,aAAQ,GAAG,IAAI,CAAC;QAEzB;;;;;;;;WAQG;QACO,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEzC;;;;;;;WAOG;QACO,oBAAe,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE/C;;WAEG;QACH,cAAS,GAAG,IAAI,2EAAgB,EAAE,CAAC;QAGnC,kBAAa,GAET,EAAE,CAAC;QACP,WAAM,GAAG,EAAE,CAAC;QACZ,SAAI,GAAG,EAAE,CAAC;QACV,qBAAgB,GAAG,IAAI,CAAC;QACxB,sBAAiB,GAAG;YAClB,cAAc,EAAE,2BAA2B;YAC3C,eAAe,EAAE,4BAA4B;YAC7C,aAAa,EAAE,oBAAoB;YACnC,SAAS,EAAE,qBAAqB;SACjC,CAAC;QACF,eAAU,GAAiB,EAAE,CAAC;QAE9B,iBAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAG3B,aAAQ,GAAG,KAAK,CAAC;IAMY,CAAC;IAEtC,iCAAQ,GAAR;QAAA,iBA+CC;QA9CC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,iDAAiD;YACjD,IAAM,MAAM,GAAG,gDAAW,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3E,mFAAmF;YACnF,6CAA6C;YAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CACvC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CACrD,CAAC;YACF,mFAAmF;YACnF,6CAA6C;YAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;YAC9C,CAAC;QACH,CAAC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC;YACrB,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAC5D,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,KAAK,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,2DAA2D;QAC3D,gFAAgF;QAChF,8EAA8E;QAC9E,8CAA8C;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,EAAE,CAAC,CAAC,gDAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBAC5B,KAAI,CAAC,gBAAgB,GAAG,kDAAe,CAAC,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,CAAC;oBACtE,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;wBACd,MAAM,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IAED,uCAAc,GAAd;QAAA,iBAmBC;QAlBC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACjC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACxB,CAAC,CAAC,QAAQ,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,kDAAyB,GAAzB,UAA0B,OAAO;QAC/B,IAAM,cAAc,GAAG,UAAC,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,+CAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC;YACX,CAAC;YACD,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,MAAM,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;QACF,MAAM,CAAC,OAAO;aACX,MAAM,CACL,UAAC,MAAM,EAAE,KAAK,EAAE,KAAK;YACnB,QAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM;QAAhF,CAAgF,EAClF,CAAC,CACF;aACA,QAAQ,EAAE,CAAC;IAChB,CAAC;IAED,wCAAe,GAAf;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,gDAAuB,GAAvB;QACE,IAAM,MAAM,GAAG,+CAAU,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,6CAAoB,GAApB,UAAqB,QAAQ;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YAC3C,GAAG,YAAC,MAAM,EAAE,IAAI,EAAE,KAAK;gBACrB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;gBACrB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,wCAAe,GAAf,UAAgB,MAAM;QACpB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,QAAC;YACjD,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ;SACvB,CAAC,EAJgD,CAIhD,CAAC,CAAC;IACN,CAAC;IAED,4CAAmB,GAAnB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,CAAC,QAAQ,EAAX,CAAW,CAAC,CAAC;IAC9D,CAAC;IAED,oCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACtC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IAED,8CAAqB,GAArB;QACE,wEAAwE;QACxE,2EAA2E;QAC3E,+CAA+C;QAC/C,uDAAuD;QACvD,8EAA8E;QAC9E,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC;YACnD,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,sCAAa,GAAb;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;IACnD,CAAC;IAED,oCAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAC;QACR,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;QAChC,CAAC;IACH,CAAC;IAED,mCAAU,GAAV;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAW,GAAX;QAAA,iBAQC;QAPC,MAAM,CAAC,UAAC,GAAG;YACT,IAAM,EAAE,GAAG,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,kDAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,IAAI,KAAK,CAAC,wBAAqB,KAAI,CAAC,UAAU,gBAAS,EAAE,OAAG,CAAC,CAAC;YACtE,CAAC;YACD,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,CAAC;IACJ,CAAC;IAED,gCAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,CAAC,gBAAgB;QAC1B,CAAC;QACD,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,QAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,uCAAc,GAAd;QAAA,iBAWC;QAVC,IAAM,WAAW,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,YAAY;YAC3C,GAAG,CAAC,CAAc,UAAS,EAAT,UAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;gBAAtB,IAAM,GAAG;gBACZ,EAAE,CAAC,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3D,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACxB,CAAC;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW,CAAC;QACtC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,4CAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,qCAAY,GAAZ,UAAa,MAAW;QACtB,IAAM,IAAI,GAAoB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACjD,IAAM,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACpC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QACD,2CAAM,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAgB,IAAK,QAAC,CAAC,IAAI,KAAK,IAAI,EAAf,CAAe,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5E,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sCAAa,GAAb;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/C,EAAE,CAAC,CAAC,CAAC,2CAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,CAAgB,IAAK,QAAC,CAAC,IAAI,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChF,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,gDAAuB,GAAvB,UAAwB,IAAqB;QAC3C,MAAM,CAAC;YACL;gBACE,IAAI,EAAE,IAAI;gBACV,GAAG,EAAE,qEAAa,CAAC,GAAG;aACvB;SACF,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb,UAAc,EAAS;YAAP,gBAAK;QACnB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,qCAAY,GAAZ,UAAa,KAAW;QACtB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACzD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,kBAAkB,KAAK,qEAAY,CAAC,SAAS,EAA/C,CAA+C,CAAC,CAAC;QAC5F,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAC,KAAa;gBACvD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;QACL,CAAC;QACD,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,CAAC,EAAE,OAAO,CAAC,CAAC;QAC9F,gEAAgE;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,kCAAS,GAAT,UAAU,IAAW,EAAE,aAAuB,EAAE,OAAwB;QACtE,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAM,WAAW,GAAa,aAAa;aACxC,GAAG,EAAE;aACL,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;aACjB,KAAK,CAAC,GAAG,CAAC,CAAC;QACd,IAAM,YAAY,GAAO,OAAO,QAAC,CAAC;QAClC,IAAM,SAAS,GAAO,IAAI,QAAC,CAAC;QAC5B,IAAM,aAAa,GAAG,UAAC,UAAkB;YACvC,mBAAY,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAA/C,CAA+C,CAAC;QAA3E,CAA2E,CAAC;QAC9E,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;QACD,IAAM,UAAU,GAAW,2CAAM,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACvD,4DAA4D;QAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1F,IAAI,GAAG,SAAS,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAC3D,CAAC;IAED,wCAAe,GAAf,UAAgB,UAAkB,EAAE,IAAW,EAAE,OAAwB;QACvE,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,CAAC;YACnB,MAAM,CAAC,CACL,OAAO,CAAC,MAAM,CAAC,UAAC,CAAC;gBACf,IAAI,SAAS,GAAQ,0CAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,CAAC,kDAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAC1C,CAAC;gBACD,EAAE,CAAC,CAAC,kDAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM,CAAC;gBACT,CAAC;gBACD,EAAE,CAAC,CAAC,8CAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACzB,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,+CAAU,CAAC,SAAS,CAAC,IAAI,gDAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC3D,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;gBACnC,CAAC;gBACD,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CACd,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAW,GAAX;QAAA,iBAOC;QANC,4DAA4D;QAC5D,MAAM,CAAC;YACL,MAAM,CAAC;gBACL,SAAS,EAAE,CAAC,kDAAa,CAAC,KAAI,CAAC,aAAa,CAAC;aAC9C,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAnb8B;QAA9B,+DAAS,CAAC,0EAAkB,CAAC;kCAAQ,0EAAkB;iDAAC;IAC1B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,yDAAW;4DAAM;IACvC;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;wDAAM;IAC9B;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAgB,yDAAW;yDAAM;IACjC;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;wDAAM;IAC/B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;wDAAM;IAC/B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;wDAAM;IAGjD;QAAR,2DAAK,EAAE;;gDAAa;IAEZ;QAAR,2DAAK,EAAE;;mDAA0B;IAEzB;QAAR,2DAAK,EAAE;;iDAAuB;IAEtB;QAAR,2DAAK,EAAE;;sDAAsB;IAErB;QAAR,2DAAK,EAAE;;sDAAoB;IAEnB;QAAR,2DAAK,EAAE;;kDAAgB;IAEf;QAAR,2DAAK,EAAE;;kDAAgB;IAEf;QAAR,2DAAK,EAAE;;iDAAa;IAOZ;QAAR,2DAAK,EAAE;;sDAAwB;IAIvB;QAAR,2DAAK,EAAE;;sDAAmB;IAGlB;QAAR,2DAAK,EAAE;;2DAAyB;IAGxB;QAAR,2DAAK,EAAE;;yDAAmC;IAElC;QAAR,2DAAK,EAAE;;oEAAiC;IAEhC;QAAR,2DAAK,EAAE;;oDAAiB;IAWf;QAAT,4DAAM,EAAE;;qDAAgC;IAU/B;QAAT,4DAAM,EAAE;;2DAAsC;IAlEpC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAkG4B,oDAAM;OAjGvB,cAAc,CAqb1B;IAAD,qBAAC;CAAA;AArb0B;;;;;;;;;;;;;;;;;ACjCC;AAE5B;;;;;;;;GAQG;AACG,kBAAmB,MAAuB;IAAvB,sCAAuB;IAC9C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,WAAW,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;AACH,CAAC;AAED,qBAAqB,MAAgB;4BACxB,YAAY;QACrB,IAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QACnF,IAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,YAAY,QAAQ,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAEhB,CAAC;QAED,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;QACxC,UAAU,CAAC,KAAK,GAAG;YAAS,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YACxC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC,EAAE,SAAS;gBAC7B,EAAE,CAAC,CAAC,+CAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpB,SAAS,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;QAEF,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IACpE,CAAC;IApBD,GAAG,CAAC,CAAuB,UAA6B,EAA7B,WAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAA7B,cAA6B,EAA7B,IAA6B;QAAnD,IAAM,YAAY;gBAAZ,YAAY;KAoBtB;AACH,CAAC;AAED;IACE,MAAM,CAAC,UAAS,MAAW,EAAE,WAAmB,EAAE,UAA8B;QAC9E,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACpE,CAAC;QACD,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;QAExC,UAAU,CAAC,KAAK,GAAG;YACjB,IAAM,IAAI,GAAG,EAAE,CAAC;YAEhB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1C,EAAE,CAAC,CAAC,+CAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC;YAED,IAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACjE6D;AAK9D;IAEE,4BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,qCAAQ,GAAR;QAAA,iBAMC;QALC,UAAU,CAAC;YACT,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrD,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACxC,CAAC;QACH,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAVU,kBAAkB;QAH9B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa,CAAC,sBAAsB;SAC/C,CAAC;yCAGgC,wDAAU;OAF/B,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL+D;AAEnD;AAK3C;IAIE,uCAAoB,UAAsB,EACtB,QAAmB,EACnB,MAAqB;QAFrB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAE7C,gDAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAEO,uDAAe,GAAvB;QACE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAqB,CAAC;IAClF,CAAC;IAGD,+CAAO,GAAP;QACE,IAAI,CAAC;YACH,qCAAqC;YACrC,IAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACxD,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC;YACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC3C,0BAA0B;YAC1B,eAAe,CAAC,MAAM,EAAE,CAAC;YACzB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC7B,8BAA8B;YAC9B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAE3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;QACpE,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAnCgC;QAAhC,2DAAK,CAAC,wBAAwB,CAAC;;iFAAwC;IAmBxE;QADC,kEAAY,CAAC,OAAO,CAAC;;;;gEAiBrB;IArCU,6BAA6B;QAHzC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;SACrC,CAAC;yCAKgC,wDAAU;YACZ,uDAAS;YACX,wDAAa;OAN9B,6BAA6B,CAsCzC;IAAD,oCAAC;CAAA;AAtCyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCnB;AACoB;AAEf;AAEqC;AACA;AAKjE;IAiDE,gCAAoB,UAAsB,EACtB,OAAkB,EAClB,iBAAoC,EACpC,SAA2B;QAH3B,eAAU,GAAV,UAAU,CAAY;QACtB,YAAO,GAAP,OAAO,CAAW;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAAkB;QAlDrC,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAmD9D,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;IAC1C,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAQ,GAAR,UAAS,KAAK;QACZ,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,IAAI,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC;QACnC,CAAC;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED,sCAAK,GAAL,UAAM,IAAI;QACR,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,CAAC,kDAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACvB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,kDAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACvB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,kDAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAGD,uCAAM,GAAN,UAAO,KAAK;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IA7FS;QAAT,4DAAM,EAAE;kCAAgB,0DAAY;iEAA2B;IAYvD;QAAR,2DAAK,EAAE;;4DAAkB;IAYjB;QAAR,2DAAK,EAAE;;4DAAkB;IASjB;QAAR,2DAAK,EAAE;;8DAAoB;IAUnB;QAAR,2DAAK,EAAE;;+DAAqB;IAgD7B;QADC,kEAAY,CAAC,MAAM,EAAE,CAAC,qBAAqB,CAAC,CAAC;;;;wDAG7C;IA/FU,sBAAsB;QAHlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAkDgC,wDAAU;YACb,wDAAS;YACC,4EAAiB;YACzB,4EAAgB;OApDpC,sBAAsB,CAiGlC;IAAD,6BAAC;CAAA;AAjGkC;;;;;;;;;;;;;;;;;;;;;;;;;ACnB2D;AAK9F;IAKE,iCAAoB,UAAsB,EACtB,QAAmB;QADnB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;IAAG,CAAC;IAE3C,0CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,iDAAe,GAAvB;QACE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAqB,CAAC;IAC5E,CAAC;IAEO,wCAAM,GAAd;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAGD,yCAAO,GAAP;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,sCAAsC;QACtC,YAAY,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QAC7E,kCAAkC;QAClC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAnC0B;QAA1B,2DAAK,CAAC,kBAAkB,CAAC;;qEAAkC;IA6B5D;QADC,kEAAY,CAAC,OAAO,CAAC;;;;0DAOrB;IAtCU,uBAAuB;QAHnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;yCAMgC,wDAAU;YACZ,uDAAS;OAN5B,uBAAuB,CAuCnC;IAAD,8BAAC;CAAA;AAvCmC;;;;;;;;;;;;;;;;;;;;;;;;ACLgB;AAExB;AAK5B;IAAA;IAMA,CAAC;IAJC,6BAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,kDAAa,CAAC,KAAK,CAAC,IAAI,6CAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC;IAJU,SAAS;QAHrB,0DAAI,CAAC;YACJ,IAAI,EAAE,OAAO;SACd,CAAC;OACW,SAAS,CAMrB;IAAD,gBAAC;CAAA;AANqB;;;;;;;;;;;;;;;ACPtB,IAAY,YAOX;AAPD,WAAY,YAAY;IACtB,6BAAa;IACb,uCAAuB;IACvB,uCAAuB;IACvB,uCAAuB;IACvB,yCAAyB;IACzB,uCAAuB;AACzB,CAAC,EAPW,YAAY,KAAZ,YAAY,QAOvB;;;;;;;;;;;;;;;ACPD,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,4BAAc;IACd,+BAAiB;IACjB,yBAAW;IACX,2BAAa;IACb,yBAAW;AACb,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;;;;;;;;;;;;;;;ACND,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,yDAAK;IACL,uDAAI;IACJ,6DAAO;AACT,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;;;;;;;;;;;;;;;ACJD,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,2DAAW;IACX,iEAAc;IACd,+DAAa;IACb,yEAAkB;AACpB,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL0C;AACE;AAEgB;AACf;AAE9C;;GAEG;AAIH;IAAmC,iCAAW;IAA9C;;IAQA,CAAC;IAPC,6BAAK,GAAL,UACE,cAAsC,EACtC,KAA2C;QAA3C,oCAA2C;QAE3C,IAAM,IAAI,GAAG,iBAAM,KAAK,YAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC7E,CAAC;IAPU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,wEAAc;SAC3B,CAAC;OACW,aAAa,CAQzB;IAAD,oBAAC;CAAA,CARkC,0DAAW,GAQ7C;AARyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACLF;AAExB;;GAEG;AACH;IAAiC,+BAAS;IACxC,qBACS,QAA4C,EACnD,eAA6E,EAC7E,cAA6D;QAH/D,YAKE,kBAAM,QAAQ,EAAE,eAAe,EAAE,cAAc,CAAC,SACjD;QALQ,cAAQ,GAAR,QAAQ,CAAoC;;IAKrD,CAAC;IAED;;;;;OAKG;IACH,yBAAG,GAAH,UAAI,WAAmB;QACrB,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,cAAY,WAAW,0BAAuB,CAAC,CAAC;QAClE,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,0BAAI,GAAJ,UAAK,WAAW;QACd,MAAM,CAAC,CACL,iBAAM,GAAG,YAAC,WAAW,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;iBACzB,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,GAAG,EAAL,CAAK,CAAC;iBACpB,GAAG,CAAC,UAAC,IAAI;gBACR,EAAE,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChC,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC/B,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,CAAC,IAAK,cAAO,CAAC,CAAC,CAAC,EAAV,CAAU,CAAC,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,8BAAQ,GAAR,UAAS,WAAmB;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;IAC3C,CAAC;IAED,4BAA4B;IAC5B,kCAAY,GAAZ,UAAa,KAAK;QAChB,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC;IACtB,CAAC;IAED;;;;;;;;OAQG;IACH,+BAAS,GAAT,UAAU,WAAmB,EAAE,KAAU;QACvC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;;;OAOG;IACH,+BAAS,GAAT,UAAU,WAAmB,EAAE,IAAY,EAAE,SAAkB;QAC7D,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACtC,MAAM,CAAC,CACL,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,KAAK,CAAC;YACjC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAC5D,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,CAlFgC,wDAAS,GAkFzC;;;;;;;;;;;;;;;;;;;;AC9F2F;AAEhE;AAEtB,2BAA4B,KAAU;IAC1C,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;AAC7C,CAAC;AAED;IAAA;IA0FA,CAAC;IAzFC;;;OAGG;IACI,kBAAK,GAAZ,UAAa,OAAwB;QACnC,sCAAsC;QACtC,EAAE,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,yDAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;OAoBG;IACI,uBAAU,GAAjB,UAAkB,aAAqB,EAAE,SAAgC;QACvE,MAAM,CAAC,UAAC,OAAwB;YAC9B,sCAAsC;YACtC,EAAE,CAAC,CACD,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACpC,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC;YAChF,CAAC,CACH,CAAC,CAAC,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YACD,IAAM,OAAO,GAAG,iDAAY,CAAC,SAAS,CAAC;gBACrC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,CAAC;gBAC1C,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,mBAAM,GAAb,UAAc,KAAa,EAAE,SAAmB;QAAhD,iBAQC;QAPC,MAAM,CAAC,UAAC,OAAwB;YAC9B,IAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YAClD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,MAAM,UAAG,GAAC,KAAK,IAAG,KAAK,KAAG;YAC5B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;;QACd,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,uBAAU,GAAjB,UACE,WAA4B,EAC5B,SAAmB,EACnB,UAAyB;QAH3B,iBAcC;QATC,WAAW,CAAC,aAAa,CAAC,UAAC,OAAwB;YAGjD,IAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;YACjD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AClGiE;AAElE;IAME,wBAAY,IAA8C,EAAE,OAAgB,EAAE,KAAc;QAAhF,8BAAyB,6EAAgB,CAAC,IAAI;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB;uDAC+C;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IACvC,CAAC;IAED,kCAAS,GAAT;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,KAAK,6EAAgB,CAAC,KAAK;gBACzB,MAAM,CAAC,aAAa,CAAC;YACvB,KAAK,6EAAgB,CAAC,IAAI;gBACxB,MAAM,CAAC,WAAW,CAAC;YACrB,KAAK,6EAAgB,CAAC,OAAO;gBAC3B,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,kCAAS,GAAT;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClB,KAAK,6EAAgB,CAAC,KAAK;gBACzB,MAAM,CAAC,yBAAyB,CAAC;YACnC,KAAK,6EAAgB,CAAC,IAAI;gBACxB,MAAM,CAAC,SAAS,CAAC;YACnB,KAAK,6EAAgB,CAAC,OAAO;gBAC3B,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;IACH,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACvCD;AAAA;IAME;QALA,aAAQ,GAAU,EAAE,CAAC;QAMnB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,iCAAM,GAAN;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACH,gCAAK,GAAL;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrD,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACzBD;AAAA;IAWE;;;;;;;OAOG;IACH,sBACE,WAAuB,EACvB,YAAwB,EACxB,YAAsB,EACtB,WAAqB;QAlBvB,iBAAY,GAAG;YACb,eAAe,EAAE,SAAS;YAC1B,WAAW,EAAE,SAAS;SACvB,CAAC;QACF,gBAAW,GAAG,KAAK,CAAC;QAgBlB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,aAAa,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACH,qCAAc,GAAd,UAAe,OAAO;QAAtB,iBAkEC;QAjEC,qBAAqB;QACrB,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;YACjC,MAAM,CAAC;QACT,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAClE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/C,CAAC;QAED,WAAW;QACX,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;YACvC,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,QAAQ;gBAC1C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,IAAI,WAAS,GAAG,SAAS,CAAC;YAE1B,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;gBACvB,WAAS,IAAI,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;YAChE,CAAC,CAAC,CAAC;YACH,WAAS,IAAI,iBAAiB,CAAC;YAE/B,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,CAAC;gBACxB,IAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,KAAK,GAAG,aAAa,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,eAAe,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC1F,KAAK,IAAI,iBAAiB,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;gBACnF,KAAK,IAAI,qBAAqB,CAAC;gBAC/B,IAAM,IAAI,GAAG,2CAA2C,GAAG,KAAK,GAAG,WAAW,CAAC;gBAC/E,WAAS,IAAI,iBAAiB,GAAG,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;YAC5E,CAAC,CAAC,CAAC;YACH,WAAS,IAAI,UAAU,CAAC;YAExB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACxD,SAAS,CAAC,SAAS,GAAG,WAAS,CAAC;QAClC,CAAC;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAE1C,6CAA6C;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAEhE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IACpF,CAAC;IAED,8BAAO,GAAP,UAAQ,IAAI;QACV,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK;QACZ,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AClHD;AAAA;IAAA;QAIE,mBAAc,GAAG,KAAK,CAAC;IACzB,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL6B;AAE9B;IAAmC,iCAAI;IAAvC;;IAGA,CAAC;IAAD,oBAAC;AAAD,CAAC,CAHkC,0CAAI,GAGtC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL6B;AAG9B;IAAkC,gCAAI;IAAtC;;IAUA,CAAC;IAAD,mBAAC;AAAD,CAAC,CAViC,0CAAI,GAUrC;;;;;;;;;;;;;;;;ACbD;AAAA;IAME,oBAAY,gBAAoC;QAApC,wDAAoC;QAC9C,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC;IACH,iBAAC;AAAD,CAAC;;AAED;IAcE,qBAAY,iBAAsB;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;IACH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC1CD;AAAA;IACE,cAAY,IAAK,EAAE,QAAS;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAKH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0C;AACS;AAKpD;IAEE,oBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IACtC,CAAC;IAED,8BAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,GAAG,GAAG;YACtD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IACjD,CAAC;IAXU,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;yCAG8B,wDAAQ;OAF3B,UAAU,CAatB;IAAD,iBAAC;CAAA;AAbsB;;;;;;;;;;;;;;;;;;;;;;ACN6B;AAKpD;IAAA;IAaA,CAAC;IAZC,uCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,8CAA8C;QAC9C,qEAAqE;QACrE,IAAM,MAAM,GAAG,yCAAyC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,6BAA6B;YAC7B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,qCAAqC;YACrC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAZU,mBAAmB;QAH/B,0DAAI,CAAC;YACJ,IAAI,EAAE,iBAAiB;SACxB,CAAC;OACW,mBAAmB,CAa/B;IAAD,0BAAC;CAAA;AAb+B;;;;;;;;;;;;;;;;;;;;;;ACLoB;AAKpD;IAAA;IAYA,CAAC;IAXC,wCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,sDAAsD;QACtD,IAAM,MAAM,GAAG,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,mCAAmC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,qCAAqC;YACrC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAXU,oBAAoB;QAHhC,0DAAI,CAAC;YACJ,IAAI,EAAE,kBAAkB;SACzB,CAAC;OACW,oBAAoB,CAYhC;IAAD,2BAAC;CAAA;AAZgC;;;;;;;;;;;;;;;;;;;;;;;;;;ACLmB;AACa;AAKjE;IACE,2BAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAEnD,qCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE;YAC/C,GAAG;YACH,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;SACN,CAAC,CAAC;IACL,CAAC;IAfU,iBAAiB;QAH7B,0DAAI,CAAC;YACJ,IAAI,EAAE,eAAe;SACtB,CAAC;yCAE+B,4EAAgB;OADpC,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhB6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsB;AACa;AAKjE;IACE,qBAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAEnD,+BAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE;YAC/C,EAAE;YACF,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ,CAAC,CAAC;IACL,CAAC;IAfU,WAAW;QAHvB,0DAAI,CAAC;YACJ,IAAI,EAAE,SAAS;SAChB,CAAC;yCAE+B,4EAAgB;OADpC,WAAW,CAgBvB;IAAD,kBAAC;CAAA;AAhBuB;;;;;;;;;;;;;;;;;;;;;;ACN4B;AAKpD;IAAA;IAIA,CAAC;IAHC,iCAAS,GAAT,UAAU,KAAU;QAClB,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAHU,aAAa;QAHzB,0DAAI,CAAC;YACJ,IAAI,EAAE,WAAW;SAClB,CAAC;OACW,aAAa,CAIzB;IAAD,oBAAC;CAAA;AAJyB;;;;;;;;;;;;;;;;;;;;;;ACL0B;AAKpD;IAAA;IAmBA,CAAC;IAlBC,8BAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,aAAG;YACrB,IAAI,MAAM,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,OAAO,CAAC,gBAAM;gBACjB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC;gBACT,CAAC;gBAED,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACZ,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAlBU,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,UAAU,CAmBtB;IAAD,iBAAC;CAAA;AAnBsB;;;;;;;;;;;;;;;;;;;;;;ACL6B;AAKpD;IAAA;IAYA,CAAC;IAXC,mCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAXU,eAAe;QAH3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;;;;;ACLwB;AAKpD;IAAA;IAIA,CAAC;IAHC,4BAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAHU,QAAQ;QAHpB,0DAAI,CAAC;YACJ,IAAI,EAAE,MAAM;SACb,CAAC;OACW,QAAQ,CAIpB;IAAD,eAAC;CAAA;AAJoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLoC;AAChB;AAEC;AACE;AACmB;AACE;AACP;AACb;AACK;AACP;AACW;AACf;AACiB;AA2CxD;IAAA;IAA0B,CAAC;IAAd,WAAW;QAzCvB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAE;gBACZ,sEAAiB;gBACjB,mEAAe;gBACf,yDAAW;gBACX,6EAAoB;gBACpB,2EAAmB;gBACnB,qEAAgB;gBAChB,oDAAQ;gBACR,uDAAU;gBACV,wDAAU;gBACV,qDAAS;gBACT,8DAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAiB;gBACjB,mEAAe;gBACf,yDAAW;gBACX,6EAAoB;gBACpB,2EAAmB;gBACnB,qEAAgB;gBAChB,oDAAQ;gBACR,uDAAU;gBACV,wDAAU;gBACV,qDAAS;gBACT,8DAAa;aACd;YACD,SAAS,EAAE;gBACT,wDAAQ;gBACR,6EAAoB;gBACpB,2EAAmB;gBACnB,sEAAiB;gBACjB,yDAAW;gBACX,qEAAgB;gBAChB,oDAAQ;gBACR,wDAAU;gBACV,qDAAS;gBACT,8DAAa;aACd;SACF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxD4B;AAEnB;AAKjC;IACE;IAAe,CAAC;IAEhB,oCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,mCAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IACxC,CAAC;IARU,gBAAgB;QAH5B,0DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;SACrB,CAAC;;OACW,gBAAgB,CAS5B;IAAD,uBAAC;CAAA;AAT4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDC;AACa;AACF;AAEb;AAC0C;AAC1B;AAEsB;AACX;AACK;AACC;AACV;AAKnD;IACE,+BACU,MAAc,EACd,kBAAsC,EACvC,mBAAwC;QAFvC,WAAM,GAAN,MAAM,CAAQ;QACd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACvC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC9C,CAAC;IAEJ,yCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAoEC;QAnEC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,iEAAU,CAAC,UAAC,IAAI;YACd,EAAE,CAAC,CAAC,IAAI,YAAY,sEAAiB,CAAC,CAAC,CAAC;gBACtC,IAAI,gBAAgB,GAAG,IAAI,CAAC;gBAC5B,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpB,KAAK,GAAG;wBACN,IAAM,YAAY,GAAG,IAAI,kEAAY,EAAE,CAAC;wBAExC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBAC7B,EAAE,CAAC,CAAC,oDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;4BAE1E,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BAC9B,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;wBACxC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;wBACrC,CAAC;wBAED,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC7B,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;wBACpC,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;wBAClD,gBAAgB,GAAG,KAAK,CAAC;wBACzB,KAAK,CAAC;oBACR,KAAK,GAAG;wBACN,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;wBACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACjC,KAAK,CAAC;oBACR,KAAK,GAAG;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC;oBACR,KAAK,GAAG;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC;gBACV,CAAC;gBAED,IAAI,WAAS,CAAC;gBACd,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACrB,WAAS,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CACvC,6EAAgB,CAAC,KAAK,EACtB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,EACpB,IAAI,CAAC,MAAM,WAAM,IAAI,CAAC,UAAY,CACtC,CAAC;gBACJ,CAAC;gBAED;;;;mBAIG;gBACH,IAAI,CAAC,gBAAgB,CAAC,GAAG;oBACvB,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,WAAS,CAAC,CAAC;gBAC7C,CAAC,CAAC;gBAEF;;;mBAGG;gBACH,IAAI,CAAC,kBAAkB,CAAC,GAAG,UAAS,MAAc;oBAChD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC;gBACH,CAAC,CAAC;YACJ,CAAC;YACD,iDAAiD;YACjD,MAAM,CAAC,uDAAoB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA3EU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,gEAAc;SAC3B,CAAC;yCAGkB,sDAAM;YACM,wEAAkB;YAClB,yEAAmB;OAJtC,qBAAqB,CA4EjC;IAAD,4BAAC;CAAA;AA5EiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBS;AACwD;AAEvC;AACT;AAKnD;IAEE,0BAAoB,MAAc,EAAU,kBAAsC;QAA9D,WAAM,GAAN,MAAM,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAClF,CAAC;IAED,sCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAXU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAG4B,sDAAM,EAA8B,wEAAkB;OAFvE,gBAAgB,CAY5B;IAAD,uBAAC;CAAA;AAZ4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AAES;AACD;AAKnD;IACE;IAAe,CAAC;IAEhB,gCAAG,GAAH,UAAI,QAAgB,EAAE,WAAqB;QAArB,8CAAqB;QACzC,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;QACrD,YAAY,CAAC,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,+DAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,mCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAChD,CAAC;IAED,uCAAU,GAAV;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;IAC7D,CAAC;IAED,2CAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CACf,YAAY,CAAC,OAAO,CAAC,uBAAuB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,+DAAW,CAAC,EAAE,CAAC,CAAC,CACrF,CAAC;IACJ,CAAC;IApBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;;OACW,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AAEf;AAEuB;AAKnD;IACE;IAAe,CAAC;IAEhB,wCAAa,GAAb,UAAc,CAAM,EAAE,OAAe,EAAE,KAAe,EAAE,QAAoB;QAApB,uCAAoB;QAC1E,EAAE,CAAC,CAAC,+CAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,+CAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QACD,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxD,IAAI,MAAM,GAAG,4CAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvE,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACvB,MAAM,GAAM,MAAM,SAAI,KAAK,CAAC,IAAI,CAAG,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,kCAAO,GAAP,UAAQ,KAAa;QACnB,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5D,IAAM,CAAC,GAAG,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1F,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,+CAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAxCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;;OACW,gBAAgB,CAyC5B;IAAD,uBAAC;CAAA;AAzC4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsC;AACX;AAGxD;IAEE,wBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,oCAAW,GAAX,UAAY,KAAK;QACf,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mEAAc,CAAC,CAAC;QACzD,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACjC,IAAM,OAAO,GAAG,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QACvC,IAAM,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;QACnC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;QACxD,MAAM,KAAK,CAAC;IACd,CAAC;IAXU,cAAc;QAD1B,gEAAU,EAAE;yCAGmB,sDAAQ;OAF3B,cAAc,CAa1B;IAAD,qBAAC;CAAA;AAb0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJuB;AACP;AAOlB;AAEiB;AACO;AAEE;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAIH;IACE,kCAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhE,8CAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,mDAAgB,GAAhB,UAAiB,UAAkC,EAAE,KAA0B;QAC7E,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAEO,0CAAO,GAAf,UAAgB,KAA6B;QAA7C,iBAcC;QAbC,IAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAQ,MAAM,CAAC,OAAO,YAAS,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,UAAC,IAAS;YACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YAChE,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC,CAAC,EACF,iEAAU,CAAC;YACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,+CAAY,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAzBU,wBAAwB;QAHpC,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAE0B,+DAAU,EAAkB,sDAAM;OADjD,wBAAwB,CA0BpC;IAAD,+BAAC;CAAA;AA1BoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CM;AAEf;AACe;AACJ;AAE2B;AACP;AAER;AACwB;AAK3E;IASE,6BACS,MAAqB,EACpB,yBAAoD;QADrD,WAAM,GAAN,MAAM,CAAe;QACpB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAV9D,qBAAqB;QACb,eAAU,GAAG,IAAI,oDAAe,CAAmB,EAAE,CAAC,CAAC;QAE/D,qBAAqB;QACrB,UAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAEvC,QAAG,GAAG,iBAAiB,CAAC;QAMtB,IAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,aAAa,GAAqB,EAAE,CAAC;QAEzC,EAAE,CAAC,CAAC,+CAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACpC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,UAAC,GAAG,EAAE,KAAK;gBACzD,EAAE,CAAC,CAAC,oDAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,6CAAQ,CAAC,IAAI,sEAAc,EAAE,EAAE,KAAK,CAAC,CAAC;gBAC/C,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,uCAAS,GAAT;QACE,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,kCAAI,GAAJ,UAAK,IAAsB,EAAE,OAAe,EAAE,KAAc;QAC1D,IAAM,YAAY,GAAG,IAAI,sEAAc,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAE9D,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YAC1B,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;;;;;;OAQG;IACH,kCAAI,GAAJ,UAAK,IAAsB,EAAE,OAAe,EAAE,KAAc,EAAE,OAAa;QAA3E,iBAeC;QAdC,MAAM,CAAC,UAAU,CAAC;YAChB,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,KAAK,6EAAgB,CAAC,KAAK;oBACzB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBAC3C,KAAK,CAAC;gBACR,KAAK,6EAAgB,CAAC,IAAI;oBACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBAC1C,KAAK,CAAC;gBACR,KAAK,6EAAgB,CAAC,OAAO;oBAC3B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBAC7C,KAAK,CAAC;YACV,CAAC;QACH,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,wCAAU,GAAV,UAAW,YAA0B,EAAE,OAAuB;QAAvB,wCAAuB;QAC5D,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,CACP,6EAAgB,CAAC,OAAO,EACxB,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAC/D,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CACP,6EAAgB,CAAC,KAAK,EACtB,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,YAAY,CAAC,EAC5D,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,YAAY,CAAC,CAC5D,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,oCAAM,GAAN,UAAO,SAAS;QACd,YAAY,CAAC,SAAS,CAAC,CAAC;IAC1B,CAAC;IApGU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAWiB,wDAAa;YACO,uFAAyB;OAXnD,mBAAmB,CAqG/B;IAAD,0BAAC;CAAA;AArG+B;;;;;;;;;;;;;;;;;;;;;;;ACfe;AACN;AAKzC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAH1B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNuB;AACC;AAEZ;AAEqB;AACT;AAKnD;IAME,wBACU,IAAgB,EAChB,kBAAsC,EACtC,MAAc;QAFd,SAAI,GAAJ,IAAI,CAAY;QAChB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QARxB,qBAAqB;QACb,sBAAiB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAEtD,qBAAqB;QACrB,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAMnD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gCAAO,GAAP;QAAA,iBAeC;QAdC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;gBACzC,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC5B,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,KAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAG,GAAH;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAjCU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAQgB,+DAAU;YACI,wEAAkB;YAC9B,oDAAM;OATb,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AAEU;AAGF;AAEnD;IAME,4BACE,KAA2B,EAC3B,OAA6B,EAC7B,OAA6B,EAC7B,KAA2B;QAE3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACH,yBAAC;AAAD,CAAC;AAKD;IA0JE;QAzJA,aAAQ,GAAG;YACT,YAAY,EAAE,IAAI,kBAAkB,CAClC,UAAC,QAAQ,IAAK,wBAAe,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA3D,CAA2D,EACzE,UAAC,QAAQ,IAAK,0BAAiB,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA7D,CAA6D,EAC3E,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,oCAAiC;YAAlF,CAAkF,EACpF,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,WAAS,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,yBAAsB;iBAC/E,CAAC;YACJ,CAAC,CACF;YACD,UAAU,EAAE,IAAI,kBAAkB,CAChC,UAAC,QAAQ,IAAK,wBAAe,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA3D,CAA2D,EACzE,UAAC,QAAQ,IAAK,0BAAiB,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA7D,CAA6D,EAC3E,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,oCAAiC;YAAlF,CAAkF,EACpF,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,WAAS,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,IAAI,yBAAsB;iBACzE,CAAC;YACJ,CAAC,CACF;YACD,YAAY,EAAE,IAAI,kBAAkB,CAClC,UAAC,QAAQ,IAAK,wBAAe,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA3D,CAA2D,EACzE,UAAC,QAAQ,IAAK,0BAAiB,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA7D,CAA6D,EAC3E,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,oCAAiC;YAAlF,CAAkF,EACpF,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,+BAA+B;iBACtC,CAAC;YACJ,CAAC,CACF;YACD,WAAW,EAAE,IAAI,kBAAkB,CACjC,UAAC,QAAQ,IAAK,uBAAc,QAAQ,CAAC,eAAe,SAAI,QAAQ,CAAC,gBAAgB,MAAG,EAAtE,CAAsE,EACpF,UAAC,QAAQ,IAAK,yBAAgB,QAAQ,CAAC,eAAe,SAAI,QAAQ,CAAC,gBAAgB,MAAG,EAAxE,CAAwE,EACtF,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,eAAe,SAC9B,QAAQ,CAAC,gBAAgB,mCACK;YAFhC,CAEgC,EAClC,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,WAAS,QAAQ,CAAC,eAAe,SACrC,QAAQ,CAAC,gBAAgB,yBACL;oBACtB,IAAI,EAAE,6BAA6B;iBACpC,CAAC;YACJ,CAAC,CACF;YACD,UAAU,EAAE,IAAI,kBAAkB,CAChC,UAAC,QAAQ,IAAK,sBAAa,QAAQ,CAAC,cAAc,SAAI,QAAQ,CAAC,eAAe,MAAG,EAAnE,CAAmE,EACjF,UAAC,QAAQ,IAAK,yBAAgB,QAAQ,CAAC,cAAc,SAAI,QAAQ,CAAC,eAAe,MAAG,EAAtE,CAAsE,EACpF,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,cAAc,SAAI,QAAQ,CAAC,eAAe,mCAAgC;YAA3F,CAA2F,EAC7F,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,WAAS,QAAQ,CAAC,cAAc,SAAI,QAAQ,CAAC,eAAe,yBAAsB;iBACzF,CAAC;YACJ,CAAC,CACF;YACD,aAAa,EAAE,IAAI,kBAAkB,CACnC,UAAC,QAAQ,IAAK,yBAAgB,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA5D,CAA4D,EAC1E,UAAC,QAAQ,IAAK,4BAAmB,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,MAAG,EAA/D,CAA+D,EAC7E,UAAC,QAAQ;gBACP,iBAAQ,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,sCAAmC;YAApF,CAAoF,EACtF;gBACE,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC,CACF;YACD,iBAAiB,EAAE,IAAI,kBAAkB,CACvC,UAAC,QAAQ;gBACP,yBAAkB;qBAClB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,2BAAoB;qBACpB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,kBAAW;qBACX,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,OAAI;oBAC3E,+BAA+B;YAF/B,CAE+B,EACjC,UAAC,QAAQ;gBACP,MAAM,CAAC;oBACL,IAAI,EAAE,WAAS,QAAQ,CAAC,aAAa,yBAAsB;iBAC5D,CAAC;YACJ,CAAC,CACF;YACD,eAAe,EAAE,IAAI,kBAAkB,CACrC,UAAC,QAAQ;gBACP,yBAAkB;qBAClB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,2BAAoB;qBACpB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,kBAAW;qBACX,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,OAAI;oBAC3E,+BAA+B;YAF/B,CAE+B,EACjC;gBACE,MAAM,CAAC;oBACL,IAAI,EAAE,6DAA6D;iBACpE,CAAC;YACJ,CAAC,CACF;YACD,iBAAiB,EAAE,IAAI,kBAAkB,CACvC,UAAC,QAAQ;gBACP,yBAAkB;qBAClB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,2BAAoB;qBACpB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,kBAAW;qBACX,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,OAAI;oBAC3E,+BAA+B;YAF/B,CAE+B,EACjC;gBACE,MAAM,CAAC;oBACL,IAAI,EAAE,wBAAwB;iBAC/B,CAAC;YACJ,CAAC,CACF;YACD,mBAAmB,EAAE,IAAI,kBAAkB,CACzC,UAAC,QAAQ;gBACP,2BAAoB;qBACpB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,+BAAwB;qBACxB,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,MAAG;YAD1E,CAC0E,EAC5E,UAAC,QAAQ;gBACP,kBAAW;qBACX,MAAI,QAAQ,CAAC,SAAS,SAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,aAAa,OAAI;oBAC3E,mCAAmC;YAFnC,CAEmC,EACrC;gBACE,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC,CACF;SACF,CAAC;QAEF,mBAAc,GAAG,IAAI,kBAAkB,CACrC,UAAC,QAAQ;YACP,MAAM,CAAC,gEAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,SAAS,IAAI,cAAc,CAAC;QAChF,CAAC,EACD,UAAC,QAAQ;YACP,MAAM,CAAC,CACL,YAAY,GAAG,CAAC,gEAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,SAAS,IAAI,cAAc,CAAC,CACxF,CAAC;QACJ,CAAC,EACD,UAAC,QAAQ,IAAK,mCAA4B,EAA5B,CAA4B,EAC1C;YACE,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,CACF,CAAC;IAEa,CAAC;IAEhB,qDAAiB,GAAjB,UAAkB,YAA0B;QAC1C,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;QACnF,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,mDAAe,GAAf,UAAgB,YAA0B;QACxC,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;QACnF,MAAM,CAAC,CACL,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;YAC5E,YAAY,CAAC,SAAS,CAAC,MAAM,CAC9B,CAAC;IACJ,CAAC;IAED,kDAAc,GAAd,UAAe,IAAU;QACvB,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;QAC3E,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED,qDAAiB,GAAjB,UAAkB,IAAU;QAC1B,IAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;QAC3E,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAjLU,yBAAyB;QAHrC,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;;OACW,yBAAyB,CAkLrC;IAAD,gCAAC;CAAA;AAlLqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BK;AAEf;AAKuB;AACA;AAEnD;IAKE,0BAAY,IAAI,EAAE,QAAQ,EAAE,cAAc;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IACH,uBAAC;AAAD,CAAC;AAKD;IAGE,4BAAY,cAA8B;QAA1C,iBAoBC;QAtBD,kBAAa,GAA4B,EAAE,CAAC;QAG1C,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;YAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC;YACT,CAAC;YACD,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YAC5C,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;YAC1C,IAAM,gBAAgB,GAA4B,EAAE,CAAC;YACrD,GAAG,CAAC,CAAuB,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;gBAAxC,IAAM,YAAY;gBACrB,IAAM,YAAY,GAAiB,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;gBAC9E,IAAM,aAAa,GAAkB,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;gBACjF,EAAE,CAAC,CAAC,YAAY,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;oBACpD,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBAC5C,CAAC;gBACD,EAAE,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC3B,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACtC,CAAC;gBACD,KAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,IAAI,EAAE,QAAQ,EAAE,cAAmD;QAC3E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,qCAAQ,GAAR,UAAS,YAA8B,EAAE,KAAkB;QACzD,GAAG,CAAC,CAAe,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAnB,IAAM,IAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,IAAI,8CAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvF,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IApCU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAI4B,+DAAc;OAH/B,kBAAkB,CAqC9B;IAAD,yBAAC;CAAA;AArC8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBY;AAEE;AAGqB;AACT;AAEI;AACV;AACwB;AACf;AAK5D;IACE,4BACU,mBAAwC,EACxC,yBAAoD,EACpD,kBAAsC;QAFtC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC7C,CAAC;IAEJ,+CAAkB,GAAlB,UAAmB,EAQlB;QARD,iBA8BC;YA7BC,cAAI,EACJ,cAAI,EACJ,gBAAK;QAML,MAAM,CAAC,IAAI,0DAAU,CAAC,UAAC,QAAyB;YAC9C,IAAI,CAAC,SAAS,CACZ,UAAC,IAAI;gBACH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC1C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC;YACH,CAAC,EACD,UAAC,IAAI;gBACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC5B,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC1C,QAAQ,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,EACD;gBACE,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAqB,GAArB,UAAsB,IAAkB,EAAE,KAAuB;QAAjE,iBAiBC;QAhBC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,6EAAgB,CAAC,IAAI,EACrB,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EACtD,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,IAAI,CAAC,CACpD,CAAC;QACF,IAAM,aAAa,GAAG,IAAI,oEAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/B,aAAa,CAAC,IAAI,EAClB,aAAa,CAAC,QAAQ,EACtB,UAAC,SAAuB;YACtB,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC,CACF,CAAC;IACJ,CAAC;IAxDU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,+DAAc;SAC3B,CAAC;yCAG+B,yEAAmB;YACb,uFAAyB;YAChC,wEAAkB;OAJrC,kBAAkB,CAyD9B;IAAD,yBAAC;CAAA;AAzD8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBgB;AACN;AAEI;AACqB;AACH;AACO;AACuB;AACd;AACE;AAC9B;AACc;AACI;AACL;AACJ;AAkC5D;IAAA;IAA2B,CAAC;IAAf,YAAY;QAhCxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,+DAAW;gBACX,8EAAgB;gBAChB,yEAAc;gBACd,2EAAe;gBACf,yDAAS;aACV;YACD,YAAY,EAAE;gBACZ,6FAAuB;gBACvB,2FAAsB;gBACtB,yGAA6B;gBAC7B,kFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,8EAAgB;gBAChB,+DAAW;gBACX,yEAAc;gBACd,6FAAuB;gBACvB,yGAA6B;gBAC7B,2FAAsB;gBACtB,2EAAe;gBACf,yDAAS;gBACT,kFAAkB;aACnB;YACD,SAAS,EAAE;gBACT,kFAAkB;gBAClB,8EAAgB;gBAChB,6EAAgB;aACjB;SACF,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH;;;;;;;;;;;;;;AChDzB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { IscsiComponent } from './ceph/block/iscsi/iscsi.component';\r\nimport { MirroringComponent } from './ceph/block/mirroring/mirroring.component';\r\nimport { RbdFormComponent } from './ceph/block/rbd-form/rbd-form.component';\r\nimport { RbdListComponent } from './ceph/block/rbd-list/rbd-list.component';\r\nimport { CephfsListComponent } from './ceph/cephfs/cephfs-list/cephfs-list.component';\r\nimport { ConfigurationComponent } from './ceph/cluster/configuration/configuration.component';\r\nimport { HostsComponent } from './ceph/cluster/hosts/hosts.component';\r\nimport { CrushmapComponent } from './ceph/cluster/crushmap/crushmap.component';\r\nimport { MonitorComponent } from './ceph/cluster/monitor/monitor.component';\r\nimport { OsdListComponent } from './ceph/cluster/osd/osd-list/osd-list.component';\r\nimport { DashboardComponent } from './ceph/dashboard/dashboard/dashboard.component';\r\nimport { PerformanceCounterComponent } from './ceph/performance-counter/performance-counter/performance-counter.component';\r\nimport { PoolListComponent } from './ceph/pool/pool-list/pool-list.component';\r\nimport { PoolFormComponent } from './ceph/pool/pool-form/pool-form.component';\r\nimport { Rgw501Component } from './ceph/rgw/rgw-501/rgw-501.component';\r\nimport { RgwBucketFormComponent } from './ceph/rgw/rgw-bucket-form/rgw-bucket-form.component';\r\nimport { RgwBucketListComponent } from './ceph/rgw/rgw-bucket-list/rgw-bucket-list.component';\r\nimport { RgwDaemonListComponent } from './ceph/rgw/rgw-daemon-list/rgw-daemon-list.component';\r\nimport { RgwUserFormComponent } from './ceph/rgw/rgw-user-form/rgw-user-form.component';\r\nimport { RgwUserListComponent } from './ceph/rgw/rgw-user-list/rgw-user-list.component';\r\nimport { LoginComponent } from './core/auth/login/login.component';\r\nimport { ForbiddenComponent } from './core/forbidden/forbidden.component';\r\nimport { NotFoundComponent } from './core/not-found/not-found.component';\r\nimport { AuthGuardService } from './shared/services/auth-guard.service';\r\nimport { ModuleStatusGuardService } from './shared/services/module-status-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService] },\r\n  { path: 'hosts', component: HostsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'hosts', component: HostsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'crushmap', component: CrushmapComponent, canActivate: [AuthGuardService] },\r\n  { path: 'rgw/501/:message', component: Rgw501Component, canActivate: [AuthGuardService] },\r\n  {\r\n    path: 'rgw',\r\n    canActivateChild: [ModuleStatusGuardService],\r\n    data: {\r\n      moduleStatusGuardConfig: {\r\n        apiPath: 'rgw',\r\n        redirectTo: 'rgw/501'\r\n      }\r\n    },\r\n    children: [\r\n      {\r\n        path: 'daemon',\r\n        component: RgwDaemonListComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'user',\r\n        component: RgwUserListComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'user/add',\r\n        component: RgwUserFormComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'user/edit/:uid',\r\n        component: RgwUserFormComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'bucket',\r\n        component: RgwBucketListComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'bucket/add',\r\n        component: RgwBucketFormComponent,\r\n        canActivate: [AuthGuardService]\r\n      },\r\n      {\r\n        path: 'bucket/edit/:bucket',\r\n        component: RgwBucketFormComponent,\r\n        canActivate: [AuthGuardService]\r\n      }\r\n    ]\r\n  },\r\n  { path: 'block/iscsi', component: IscsiComponent, canActivate: [AuthGuardService] },\r\n  { path: 'block/rbd', component: RbdListComponent, canActivate: [AuthGuardService] },\r\n  { path: 'rbd/add', component: RbdFormComponent, canActivate: [AuthGuardService] },\r\n  { path: 'rbd/edit/:pool/:name', component: RbdFormComponent, canActivate: [AuthGuardService] },\r\n  { path: 'pool', component: PoolListComponent, canActivate: [AuthGuardService] },\r\n  { path: 'pool/add', component: PoolFormComponent, canActivate: [AuthGuardService] },\r\n  {\r\n    path: 'rbd/clone/:pool/:name/:snap',\r\n    component: RbdFormComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'rbd/copy/:pool/:name',\r\n    component: RbdFormComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'rbd/copy/:pool/:name/:snap',\r\n    component: RbdFormComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'perf_counters/:type/:id',\r\n    component: PerformanceCounterComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  { path: 'monitor', component: MonitorComponent, canActivate: [AuthGuardService] },\r\n  { path: 'cephfs', component: CephfsListComponent, canActivate: [AuthGuardService] },\r\n  { path: 'configuration', component: ConfigurationComponent, canActivate: [AuthGuardService] },\r\n  { path: 'mirroring', component: MirroringComponent, canActivate: [AuthGuardService] },\r\n  { path: '403', component: ForbiddenComponent },\r\n  { path: '404', component: NotFoundComponent },\r\n  { path: 'osd', component: OsdListComponent, canActivate: [AuthGuardService] },\r\n  { path: '**', redirectTo: '/404' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<cd-navigation *ngIf=\\\"!isLoginActive()\\\"></cd-navigation>\\r\\n<div class=\\\"container-fluid\\\"\\r\\n     [ngClass]=\\\"{'full-height':isLoginActive()}\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToastsManager } from 'ng2-toastr';\n\nimport { AuthStorageService } from './shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cd';\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private router: Router,\n    public toastr: ToastsManager,\n    private vcr: ViewContainerRef\n  ) {\n    this.toastr.setRootViewContainerRef(this.vcr);\n  }\n\n  isLoginActive() {\n    return this.router.url === '/' || !this.authStorageService.isLoggedIn();\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastModule, ToastOptions } from 'ng2-toastr/ng2-toastr';\n\nimport { AccordionModule, BsDropdownModule, TabsModule } from 'ngx-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CephModule } from './ceph/ceph.module';\nimport { CoreModule } from './core/core.module';\nimport { ApiInterceptorService } from './shared/services/api-interceptor.service';\nimport { JsErrorHandler } from './shared/services/js-error-handler.service';\nimport { SharedModule } from './shared/shared.module';\n\nexport class CustomOption extends ToastOptions {\n  animate = 'flyRight';\n  newestOnTop = true;\n  showCloseButton = true;\n  enableHTML = true;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastModule.forRoot(),\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    CephModule,\n    AccordionModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot()\n  ],\n  exports: [SharedModule],\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: JsErrorHandler,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiInterceptorService,\n      multi: true\n    },\n    {\n      provide: ToastOptions,\n      useClass: CustomOption\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { BsDropdownModule, ModalModule, TabsModule, TooltipModule } from 'ngx-bootstrap';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { IscsiComponent } from './iscsi/iscsi.component';\nimport { MirrorHealthColorPipe } from './mirror-health-color.pipe';\nimport { MirroringComponent } from './mirroring/mirroring.component';\nimport { RbdDetailsComponent } from './rbd-details/rbd-details.component';\nimport { RbdFormComponent } from './rbd-form/rbd-form.component';\nimport { RbdListComponent } from './rbd-list/rbd-list.component';\nimport { RbdSnapshotFormComponent } from './rbd-snapshot-form/rbd-snapshot-form.component';\nimport { RbdSnapshotListComponent } from './rbd-snapshot-list/rbd-snapshot-list.component';\n\n@NgModule({\n  entryComponents: [RbdDetailsComponent, RbdSnapshotFormComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    SharedModule,\n    RouterModule\n  ],\n  declarations: [\n    RbdListComponent,\n    IscsiComponent,\n    MirroringComponent,\n    MirrorHealthColorPipe,\n    RbdDetailsComponent,\n    RbdFormComponent,\n    RbdSnapshotListComponent,\n    RbdSnapshotFormComponent\n  ]\n})\nexport class BlockModule {}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Block</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">iSCSI</li>\\n  </ol>\\n</nav>\\n\\n<legend i18n>Daemons</legend>\\n<cd-table [data]=\\\"daemons\\\"\\n          (fetchData)=\\\"refresh()\\\"\\n          [columns]=\\\"daemonsColumns\\\">\\n</cd-table>\\n\\n<legend i18n>Images</legend>\\n<cd-table [data]=\\\"images\\\"\\n          [columns]=\\\"imagesColumns\\\">\\n</cd-table>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { TcmuIscsiService } from '../../../shared/api/tcmu-iscsi.service';\nimport { CellTemplate } from '../../../shared/enum/cell-template.enum';\nimport { CephShortVersionPipe } from '../../../shared/pipes/ceph-short-version.pipe';\nimport { DimlessPipe } from '../../../shared/pipes/dimless.pipe';\nimport { ListPipe } from '../../../shared/pipes/list.pipe';\nimport { RelativeDatePipe } from '../../../shared/pipes/relative-date.pipe';\n\n@Component({\n  selector: 'cd-iscsi',\n  templateUrl: './iscsi.component.html',\n  styleUrls: ['./iscsi.component.scss']\n})\nexport class IscsiComponent {\n\n  daemons = [];\n  daemonsColumns: any;\n  images = [];\n  imagesColumns: any;\n\n  constructor(private tcmuIscsiService: TcmuIscsiService,\n              cephShortVersionPipe: CephShortVersionPipe,\n              dimlessPipe: DimlessPipe,\n              relativeDatePipe: RelativeDatePipe,\n              listPipe: ListPipe) {\n    this.daemonsColumns = [\n      {\n        name: 'Hostname',\n        prop: 'server_hostname'\n      },\n      {\n        name: '# Active/Optimized',\n        prop: 'optimized_paths',\n      },\n      {\n        name: '# Active/Non-Optimized',\n        prop: 'non_optimized_paths'\n      },\n      {\n        name: 'Version',\n        prop: 'version',\n        pipe: cephShortVersionPipe\n      }\n    ];\n    this.imagesColumns = [\n      {\n        name: 'Pool',\n        prop: 'pool_name'\n      },\n      {\n        name: 'Image',\n        prop: 'name'\n      },\n      {\n        name: 'Active/Optimized',\n        prop: 'optimized_paths',\n        pipe: listPipe\n      },\n      {\n        name: 'Active/Non-Optimized',\n        prop: 'non_optimized_paths',\n        pipe: listPipe\n      },\n      {\n        name: 'Read Bytes',\n        prop: 'stats_history.rd_bytes',\n        cellTransformation: CellTemplate.sparkline\n      },\n      {\n        name: 'Write Bytes',\n        prop: 'stats_history.wr_bytes',\n        cellTransformation: CellTemplate.sparkline\n      },\n      {\n        name: 'Read Ops',\n        prop: 'stats.rd',\n        pipe: dimlessPipe,\n        cellTransformation: CellTemplate.perSecond\n      },\n      {\n        name: 'Write Ops',\n        prop: 'stats.wr',\n        pipe: dimlessPipe,\n        cellTransformation: CellTemplate.perSecond\n      },\n      {\n        name: 'A/O Since',\n        prop: 'optimized_since',\n        pipe: relativeDatePipe\n      },\n    ];\n\n  }\n\n  refresh() {\n    this.tcmuIscsiService.tcmuiscsi().then((resp) => {\n      this.daemons = resp.daemons;\n      this.images = resp.images;\n      this.images.map((image) => {\n        image.stats_history.rd_bytes = image.stats_history.rd_bytes.map(i => i[1]);\n        image.stats_history.wr_bytes = image.stats_history.wr_bytes.map(i => i[1]);\n        return image;\n      });\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mirrorHealthColor'\n})\nexport class MirrorHealthColorPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value === 'warning') {\n      return 'label label-warning';\n    } else if (value === 'error') {\n      return 'label label-danger';\n    } else if (value === 'success') {\n      return 'label label-success';\n    }\n    return 'label label-info';\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\" i18n>Block</li>\\n    <li class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\" i18n>Mirroring</li>\\n  </ol>\\n</nav>\\n\\n<cd-view-cache [status]=\\\"status\\\"></cd-view-cache>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <fieldset>\\n      <legend i18n>Daemons</legend>\\n\\n      <cd-table [data]=\\\"daemons.data\\\"\\n                columnMode=\\\"flex\\\"\\n                [columns]=\\\"daemons.columns\\\"\\n                [autoReload]=\\\"30000\\\"\\n                (fetchData)=\\\"refresh()\\\">\\n      </cd-table>\\n    </fieldset>\\n  </div>\\n\\n  <div class=\\\"col-sm-6\\\">\\n    <fieldset>\\n      <legend i18n>Pools</legend>\\n\\n      <cd-table [data]=\\\"pools.data\\\"\\n                columnMode=\\\"flex\\\"\\n                [autoReload]=\\\"0\\\"\\n                (fetchData)=\\\"refresh()\\\"\\n                [columns]=\\\"pools.columns\\\">\\n      </cd-table>\\n    </fieldset>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <fieldset>\\n      <legend i18n>Images</legend>\\n      <tabset>\\n        <tab heading=\\\"Issues\\\" i18n-heading>\\n          <cd-table [data]=\\\"image_error.data\\\"\\n                    columnMode=\\\"flex\\\"\\n                    [autoReload]=\\\"0\\\"\\n                    (fetchData)=\\\"refresh()\\\"\\n                    [columns]=\\\"image_error.columns\\\">\\n          </cd-table>\\n        </tab>\\n        <tab heading=\\\"Syncing\\\" i18n-heading>\\n          <cd-table [data]=\\\"image_syncing.data\\\"\\n                    columnMode=\\\"flex\\\"\\n                    [autoReload]=\\\"0\\\"\\n                    (fetchData)=\\\"refresh()\\\"\\n                    [columns]=\\\"image_syncing.columns\\\">\\n          </cd-table>\\n        </tab>\\n        <tab heading=\\\"Ready\\\" i18n-heading>\\n          <cd-table [data]=\\\"image_ready.data\\\"\\n                    columnMode=\\\"flex\\\"\\n                    [autoReload]=\\\"0\\\"\\n                    (fetchData)=\\\"refresh()\\\"\\n                    [columns]=\\\"image_ready.columns\\\">\\n          </cd-table>\\n        </tab>\\n      </tabset>\\n    </fieldset>\\n  </div>\\n</div>\\n\\n<ng-template #healthTmpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  <span [ngClass]=\\\"row.health_color | mirrorHealthColor\\\">{{ value }}</span>\\n</ng-template>\\n\\n<ng-template #stateTmpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  <span [ngClass]=\\\"row.state_color | mirrorHealthColor\\\">{{ value }}</span>\\n</ng-template>\\n\\n<ng-template #syncTmpl>\\n  <span class=\\\"label label-info\\\">Syncing</span>\\n</ng-template>\\n\\n<ng-template #progressTmpl\\n             let-value=\\\"value\\\">\\n  <progressbar type=\\\"info\\\"\\n               [value]=\\\"value\\\">\\n  </progressbar>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { RbdMirroringService } from '../../../shared/api/rbd-mirroring.service';\nimport { ViewCacheStatus } from '../../../shared/enum/view-cache-status.enum';\nimport { CephShortVersionPipe } from '../../../shared/pipes/ceph-short-version.pipe';\n\n@Component({\n  selector: 'cd-mirroring',\n  templateUrl: './mirroring.component.html',\n  styleUrls: ['./mirroring.component.scss']\n})\nexport class MirroringComponent implements OnInit {\n  @ViewChild('healthTmpl') healthTmpl: TemplateRef<any>;\n  @ViewChild('stateTmpl') stateTmpl: TemplateRef<any>;\n  @ViewChild('syncTmpl') syncTmpl: TemplateRef<any>;\n  @ViewChild('progressTmpl') progressTmpl: TemplateRef<any>;\n\n  contentData: any;\n\n  status: ViewCacheStatus;\n  daemons = {\n    data: [],\n    columns: []\n  };\n  pools = {\n    data: [],\n    columns: {}\n  };\n  image_error = {\n    data: [],\n    columns: {}\n  };\n  image_syncing = {\n    data: [],\n    columns: {}\n  };\n  image_ready = {\n    data: [],\n    columns: {}\n  };\n\n  constructor(\n    private rbdMirroringService: RbdMirroringService,\n    private cephShortVersionPipe: CephShortVersionPipe\n  ) {}\n\n  ngOnInit() {\n    this.daemons.columns = [\n      { prop: 'instance_id', name: 'Instance', flexGrow: 2 },\n      { prop: 'id', name: 'ID', flexGrow: 2 },\n      { prop: 'server_hostname', name: 'Hostname', flexGrow: 2 },\n      {\n        prop: 'version',\n        name: 'Version',\n        pipe: this.cephShortVersionPipe,\n        flexGrow: 2\n      },\n      {\n        prop: 'health',\n        name: 'Health',\n        cellTemplate: this.healthTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.pools.columns = [\n      { prop: 'name', name: 'Name', flexGrow: 2 },\n      { prop: 'mirror_mode', name: 'Mode', flexGrow: 2 },\n      { prop: 'leader_id', name: 'Leader', flexGrow: 2 },\n      { prop: 'image_local_count', name: '# Local', flexGrow: 2 },\n      { prop: 'image_remote_count', name: '# Remote', flexGrow: 2 },\n      {\n        prop: 'health',\n        name: 'Health',\n        cellTemplate: this.healthTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.image_error.columns = [\n      { prop: 'pool_name', name: 'Pool', flexGrow: 2 },\n      { prop: 'name', name: 'Image', flexGrow: 2 },\n      { prop: 'description', name: 'Issue', flexGrow: 4 },\n      {\n        prop: 'state',\n        name: 'State',\n        cellTemplate: this.stateTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.image_syncing.columns = [\n      { prop: 'pool_name', name: 'Pool', flexGrow: 2 },\n      { prop: 'name', name: 'Image', flexGrow: 2 },\n      {\n        prop: 'progress',\n        name: 'Progress',\n        cellTemplate: this.progressTmpl,\n        flexGrow: 2\n      },\n      {\n        prop: 'state',\n        name: 'State',\n        cellTemplate: this.syncTmpl,\n        flexGrow: 1\n      }\n    ];\n\n    this.image_ready.columns = [\n      { prop: 'pool_name', name: 'Pool', flexGrow: 2 },\n      { prop: 'name', name: 'Image', flexGrow: 2 },\n      { prop: 'description', name: 'Description', flexGrow: 4 },\n      {\n        prop: 'state',\n        name: 'State',\n        cellTemplate: this.stateTmpl,\n        flexGrow: 1\n      }\n    ];\n  }\n\n  refresh() {\n    this.rbdMirroringService.get().subscribe((data: any) => {\n      this.daemons.data = data.content_data.daemons;\n      this.pools.data = data.content_data.pools;\n      this.image_error.data = data.content_data.image_error;\n      this.image_syncing.data = data.content_data.image_syncing;\n      this.image_ready.data = data.content_data.image_ready;\n\n      this.status = data.status;\n    });\n  }\n}\n","module.exports = \"<ng-template #usageNotAvailableTooltipTpl>\\n  <div [innerHtml]=\\\"'Only available for RBD images with <strong>fast-diff</strong> enabled'\\\"></div>\\n</ng-template>\\n\\n\\n<tabset *ngIf=\\\"selection?.hasSingleSelection\\\">\\n  <tab i18n-heading\\n       heading=\\\"Details\\\">\\n    <table class=\\\"table table-striped table-bordered\\\">\\n      <tbody>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Name\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.name }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Pool\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.pool_name }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Data Pool\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.data_pool | empty }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Created\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.timestamp | cdDate }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Size\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.size | dimlessBinary }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Objects\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.num_objs | dimless }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Object size\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.obj_size | dimlessBinary }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Features\\n        </td>\\n        <td class=\\\"col-sm-3\\\">\\n          <span *ngFor=\\\"let feature of selectedItem.features_name\\\">\\n            <span class=\\\"badge badge-pill badge-primary margin-right-sm\\\">{{ feature }}</span>\\n          </span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Provisioned\\n        </td>\\n        <td class=\\\"col-sm-3\\\">\\n          <span *ngIf=\\\"selectedItem.features_name?.indexOf('fast-diff') === -1\\\">\\n          <span class=\\\"text-muted\\\"\\n                [tooltip]=\\\"usageNotAvailableTooltipTpl\\\"\\n                placement=\\\"right\\\">N/A</span>\\n        </span>\\n          <span *ngIf=\\\"selectedItem.features_name?.indexOf('fast-diff') !== -1\\\">\\n          {{ selectedItem.disk_usage | dimlessBinary }}\\n        </span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Total provisioned\\n        </td>\\n        <td class=\\\"col-sm-3\\\">\\n          <span *ngIf=\\\"selectedItem.features_name?.indexOf('fast-diff') === -1\\\">\\n          <span class=\\\"text-muted\\\"\\n                [tooltip]=\\\"usageNotAvailableTooltipTpl\\\"\\n                placement=\\\"right\\\">N/A</span>\\n        </span>\\n          <span *ngIf=\\\"selectedItem.features_name?.indexOf('fast-diff') !== -1\\\">\\n          {{ selectedItem.total_disk_usage | dimlessBinary }}\\n        </span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Striping unit\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.stripe_unit | dimlessBinary }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Striping count\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.stripe_count }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Parent\\n        </td>\\n        <td class=\\\"col-sm-3\\\">\\n          <span *ngIf=\\\"selectedItem.parent\\\">{{ selectedItem.parent.pool_name }}/{{ selectedItem.parent.image_name }}@{{ selectedItem.parent.snap_name }}</span>\\n          <span *ngIf=\\\"!selectedItem.parent\\\">-</span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Block name prefix\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.block_name_prefix }}</td>\\n      </tr>\\n      <tr>\\n        <td i18n\\n            class=\\\"bold col-sm-1\\\">Order\\n        </td>\\n        <td class=\\\"col-sm-3\\\">{{ selectedItem.order }}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </tab>\\n  <tab i18n-heading\\n       heading=\\\"Snapshots\\\">\\n    <cd-rbd-snapshot-list [snapshots]=\\\"selectedItem.snapshots\\\"\\n                          [poolName]=\\\"selectedItem.pool_name\\\"\\n                          [rbdName]=\\\"selectedItem.name\\\"\\n                          [executingTasks]=\\\"selectedItem.executingTasks\\\"></cd-rbd-snapshot-list>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-rbd-details',\n  templateUrl: './rbd-details.component.html',\n  styleUrls: ['./rbd-details.component.scss']\n})\nexport class RbdDetailsComponent implements OnChanges {\n\n  @Input() selection: CdTableSelection;\n  selectedItem: any;\n\n  constructor() { }\n\n  ngOnChanges() {\n    if (this.selection.hasSelection) {\n      this.selectedItem = this.selection.first();\n    }\n  }\n}\n","export class RbdFormCloneRequestModel {\n  child_pool_name: string;\n  child_image_name: string;\n  obj_size: number;\n  features: Array<string> = [];\n  stripe_unit: number;\n  stripe_count: number;\n  data_pool: string;\n}\n","export class RbdFormCopyRequestModel {\n  dest_pool_name: string;\n  dest_image_name: string;\n  snapshot_name: string;\n  obj_size: number;\n  features: Array<string> = [];\n  stripe_unit: number;\n  stripe_count: number;\n  data_pool: string;\n}\n","import { RbdFormModel } from './rbd-form.model';\n\nexport class RbdFormCreateRequestModel extends RbdFormModel {\n  features: Array<string> = [];\n}\n","export class RbdFormEditRequestModel {\n  name: string;\n  size: number;\n  features: Array<string> = [];\n}\n","export enum RbdFormMode {\n  editing = 'editing',\n  cloning = 'cloning',\n  copying = 'copying'\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\">Block</li>\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a routerLink=\\\"/block/rbd\\\">Images</a></li>\\n    <li class=\\\"breadcrumb-item active\\\" i18n>{mode, select, editing {Edit} cloning {Clone} copying {Copy} other {Add}}</li>\\n  </ol>\\n</nav>\\n\\n<div class=\\\"col-sm-12 col-lg-6\\\">\\n  <form name=\\\"rbdForm\\\" class=\\\"form-horizontal\\\" #formDir=\\\"ngForm\\\" [formGroup]=\\\"rbdForm\\\" novalidate>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">\\n          <span i18n>{mode, select, editing {Edit} cloning {Clone} copying {Copy} other {Add}}</span> RBD\\n        </h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n\\n        <!-- Parent -->\\n        <div class=\\\"form-group\\\" *ngIf=\\\"rbdForm.getValue('parent')\\\">\\n          <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"name\\\">{mode, select, cloning {Clone from} copying {Copy from} other\\n            {Parent}}\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"parent\\\" name=\\\"parent\\\" formControlName=\\\"parent\\\">\\n            <hr>\\n          </div>\\n        </div>\\n\\n        <!-- Name -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('name', formDir)}\\\">\\n          <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"name\\\">Name\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Name...\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\" autofocus>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('name', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Pool -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('pool', formDir)}\\\" (change)=\\\"onPoolChange($event.target.value)\\\">\\n          <label class=\\\"control-label col-sm-3\\\" for=\\\"pool\\\">\\n            Pool\\n            <span class=\\\"required\\\" *ngIf=\\\"mode !== 'editing'\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Pool name...\\\" id=\\\"pool\\\" name=\\\"pool\\\" formControlName=\\\"pool\\\" *ngIf=\\\"mode === 'editing' || !poolPermission.read\\\">\\n            <select id=\\\"pool\\\" name=\\\"pool\\\" class=\\\"form-control\\\" formControlName=\\\"pool\\\" *ngIf=\\\"mode !== 'editing' && poolPermission.read\\\">\\n              <option *ngIf=\\\"pools === null\\\" [ngValue]=\\\"null\\\">Loading...\\n              </option>\\n              <option *ngIf=\\\"pools !== null && pools.length === 0\\\" [ngValue]=\\\"null\\\">-- No rbd pools available --\\n              </option>\\n              <option *ngIf=\\\"pools !== null && pools.length > 0\\\" [ngValue]=\\\"null\\\">-- Select a pool --\\n              </option>\\n              <option *ngFor=\\\"let pool of pools\\\" [value]=\\\"pool.pool_name\\\">{{ pool.pool_name }}</option>\\n            </select>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('pool', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Use a dedicated pool -->\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n            <div class=\\\"checkbox checkbox-primary\\\">\\n              <input type=\\\"checkbox\\\" id=\\\"useDataPool\\\" name=\\\"useDataPool\\\" formControlName=\\\"useDataPool\\\" (change)=\\\"onUseDataPoolChange()\\\">\\n              <label i18n for=\\\"useDataPool\\\">Use a dedicated data pool</label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- Data Pool -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('dataPool', formDir)}\\\" *ngIf=\\\"rbdForm.getValue('useDataPool')\\\">\\n          <label class=\\\"control-label col-sm-3\\\" for=\\\"dataPool\\\">\\n            Data pool\\n            <span class=\\\"required\\\" *ngIf=\\\"mode !== 'editing'\\\"></span>\\n            <cd-helper i18n-html html=\\\"Dedicated pool that stores the object-data of the RBD.\\\">\\n            </cd-helper>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Data pool name...\\\" id=\\\"dataPool\\\" name=\\\"dataPool\\\" formControlName=\\\"dataPool\\\"\\n              *ngIf=\\\"mode === 'editing' || !poolPermission.read\\\">\\n            <select id=\\\"dataPool\\\" name=\\\"dataPool\\\" class=\\\"form-control\\\" formControlName=\\\"dataPool\\\" (change)=\\\"onDataPoolChange($event.target.value)\\\"\\n              *ngIf=\\\"mode !== 'editing' && poolPermission.read\\\">\\n              <option *ngIf=\\\"dataPools === null\\\" [ngValue]=\\\"null\\\">Loading...\\n              </option>\\n              <option *ngIf=\\\"dataPools !== null && dataPools.length === 0\\\" [ngValue]=\\\"null\\\">-- No data pools available --\\n              </option>\\n              <option *ngIf=\\\"dataPools !== null && dataPools.length > 0\\\" [ngValue]=\\\"null\\\">-- Select a data pool --\\n              </option>\\n              <option *ngFor=\\\"let dataPool of dataPools\\\" [value]=\\\"dataPool.pool_name\\\">{{ dataPool.pool_name }}</option>\\n            </select>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('dataPool', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Size -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('size', formDir)}\\\">\\n          <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"size\\\">Size\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"size\\\" name=\\\"size\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"size\\\" ì18n-placeholder placeholder=\\\"e.g., 10GiB\\\"\\n              defaultUnit=\\\"GiB\\\" cdDimlessBinary>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('size', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('size', formDir, 'invalidSizeObject')\\\">\\n              You have to increase the size.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Features -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (formDir.submitted || featuresFormGroups.dirty) && featuresFormGroups.invalid}\\\"\\n          formGroupName=\\\"features\\\">\\n          <label i18n class=\\\"col-sm-3 control-label\\\" for=\\\"features\\\">\\n            Features\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <div class=\\\"checkbox checkbox-primary\\\" *ngFor=\\\"let feature of featuresList\\\">\\n              <input type=\\\"checkbox\\\" id=\\\"{{ feature.key }}\\\" name=\\\"{{ feature.key }}\\\" formControlName=\\\"{{ feature.key }}\\\">\\n              <label for=\\\"{{ feature.key }}\\\">{{ feature.desc }}</label>\\n              <cd-helper *ngIf=\\\"feature.helperHtml\\\" html=\\\"{{ feature.helperHtml }}\\\">\\n              </cd-helper>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- Advanced -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <a i18n class=\\\"pull-right margin-right-md\\\" (click)=\\\"advancedEnabled = true\\\" *ngIf=\\\"!advancedEnabled\\\">\\n              Advanced...\\n            </a>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"advancedEnabled\\\">\\n\\n          <h2 i18n class=\\\"page-header\\\">Advanced</h2>\\n\\n          <!-- Object Size -->\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('obj_size', formDir)}\\\">\\n            <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"size\\\">Object size\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <select id=\\\"obj_size\\\" name=\\\"obj_size\\\" class=\\\"form-control\\\" formControlName=\\\"obj_size\\\">\\n                <option *ngFor=\\\"let objectSize of objectSizes\\\" [value]=\\\"objectSize\\\">{{ objectSize }}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <!-- Strippe Unit -->\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('stripingUnit', formDir)}\\\">\\n            <label class=\\\"control-label col-sm-3\\\" for=\\\"stripingUnit\\\">\\n              <span i18n>Stripe unit</span><span class=\\\"required\\\" *ngIf=\\\"rbdForm.getValue('stripingCount')\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <select id=\\\"stripingUnit\\\" name=\\\"stripingUnit\\\" class=\\\"form-control\\\" formControlName=\\\"stripingUnit\\\">\\n                <option i18n [ngValue]=\\\"null\\\">-- Select stripe unit --</option>\\n                <option *ngFor=\\\"let objectSize of objectSizes\\\" [value]=\\\"objectSize\\\">{{ objectSize }}</option>\\n              </select>\\n              <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('stripingUnit', formDir, 'required')\\\">\\n                This field is required because stripe count is defined!\\n              </span>\\n              <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('stripingUnit', formDir, 'invalidStripingUnit')\\\">\\n                Stripe unit is greater than object size.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Strippe Count -->\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': rbdForm.showError('stripingCount', formDir)}\\\">\\n            <label class=\\\"control-label col-sm-3\\\" for=\\\"stripingCount\\\">\\n              <span i18n>Stripe count</span><span class=\\\"required\\\" *ngIf=\\\"rbdForm.getValue('stripingUnit')\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input id=\\\"stripingCount\\\" name=\\\"stripingCount\\\" formControlName=\\\"stripingCount\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n              <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('stripingCount', formDir, 'required')\\\">\\n                This field is required because stripe unit is defined!\\n              </span>\\n              <span i18n class=\\\"help-block\\\" *ngIf=\\\"rbdForm.showError('stripingCount', formDir, 'min')\\\">\\n                Stripe count must be greater than 0.\\n              </span>\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button [form]=\\\"formDir\\\" type=\\\"button\\\" (submitAction)=\\\"submit()\\\">\\n            <span i18n>{mode, select, editing {Update} cloning {Clone} copying {Copy} other {Create}}</span> RBD\\n          </cd-submit-button>\\n          <button i18n type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" routerLink=\\\"/block/rbd\\\">\\n            Back\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs/Observable';\n\nimport { PoolService } from '../../../shared/api/pool.service';\nimport { RbdService } from '../../../shared/api/rbd.service';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { Permission } from '../../../shared/models/permissions';\nimport { DimlessBinaryPipe } from '../../../shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\nimport { FormatterService } from '../../../shared/services/formatter.service';\nimport { TaskWrapperService } from '../../../shared/services/task-wrapper.service';\nimport { RbdFormCloneRequestModel } from './rbd-form-clone-request.model';\nimport { RbdFormCopyRequestModel } from './rbd-form-copy-request.model';\nimport { RbdFormCreateRequestModel } from './rbd-form-create-request.model';\nimport { RbdFormEditRequestModel } from './rbd-form-edit-request.model';\nimport { RbdFormMode } from './rbd-form-mode.enum';\nimport { RbdFormResponseModel } from './rbd-form-response.model';\n\n@Component({\n  selector: 'cd-rbd-form',\n  templateUrl: './rbd-form.component.html',\n  styleUrls: ['./rbd-form.component.scss']\n})\nexport class RbdFormComponent implements OnInit {\n  poolPermission: Permission;\n  rbdForm: CdFormGroup;\n  featuresFormGroups: CdFormGroup;\n  deepFlattenFormControl: FormControl;\n  layeringFormControl: FormControl;\n  exclusiveLockFormControl: FormControl;\n  objectMapFormControl: FormControl;\n  journalingFormControl: FormControl;\n  fastDiffFormControl: FormControl;\n\n  pools: Array<string> = null;\n  allPools: Array<string> = null;\n  dataPools: Array<string> = null;\n  allDataPools: Array<string> = null;\n  features: any;\n  featuresList = [];\n\n  pool: string;\n\n  advancedEnabled = false;\n\n  public rbdFormMode = RbdFormMode;\n  mode: RbdFormMode;\n\n  response: RbdFormResponseModel;\n  snapName: string;\n\n  defaultObjectSize = '4 MiB';\n\n  objectSizes: Array<string> = [\n    '4 KiB',\n    '8 KiB',\n    '16 KiB',\n    '32 KiB',\n    '64 KiB',\n    '128 KiB',\n    '256 KiB',\n    '512 KiB',\n    '1 MiB',\n    '2 MiB',\n    '4 MiB',\n    '8 MiB',\n    '16 MiB',\n    '32 MiB'\n  ];\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private poolService: PoolService,\n    private rbdService: RbdService,\n    private formatter: FormatterService,\n    private taskWrapper: TaskWrapperService,\n    private dimlessBinaryPipe: DimlessBinaryPipe\n  ) {\n    this.poolPermission = this.authStorageService.getPermissions().pool;\n    this.features = {\n      'deep-flatten': {\n        desc: 'Deep flatten',\n        requires: null,\n        allowEnable: false,\n        allowDisable: true\n      },\n      layering: {\n        desc: 'Layering',\n        requires: null,\n        allowEnable: false,\n        allowDisable: false\n      },\n      'exclusive-lock': {\n        desc: 'Exclusive lock',\n        requires: null,\n        allowEnable: true,\n        allowDisable: true\n      },\n      'object-map': {\n        desc: 'Object map (requires exclusive-lock)',\n        requires: 'exclusive-lock',\n        allowEnable: true,\n        allowDisable: true\n      },\n      journaling: {\n        desc: 'Journaling (requires exclusive-lock)',\n        requires: 'exclusive-lock',\n        allowEnable: true,\n        allowDisable: true\n      },\n      'fast-diff': {\n        desc: 'Fast diff (requires object-map)',\n        requires: 'object-map',\n        allowEnable: true,\n        allowDisable: true\n      }\n    };\n    this.createForm();\n    for (const key of Object.keys(this.features)) {\n      const listItem = this.features[key];\n      listItem.key = key;\n      this.featuresList.push(listItem);\n    }\n\n  }\n\n  createForm() {\n    this.deepFlattenFormControl = new FormControl(false);\n    this.layeringFormControl = new FormControl(false);\n    this.exclusiveLockFormControl = new FormControl(false);\n    this.objectMapFormControl = new FormControl({ value: false, disabled: true });\n    this.journalingFormControl = new FormControl({ value: false, disabled: true });\n    this.fastDiffFormControl = new FormControl({ value: false, disabled: true });\n    this.featuresFormGroups = new CdFormGroup({\n      'deep-flatten': this.deepFlattenFormControl,\n      layering: this.layeringFormControl,\n      'exclusive-lock': this.exclusiveLockFormControl,\n      'object-map': this.objectMapFormControl,\n      journaling: this.journalingFormControl,\n      'fast-diff': this.fastDiffFormControl\n    });\n    this.rbdForm = new CdFormGroup(\n      {\n        parent: new FormControl(''),\n        name: new FormControl('', {\n          validators: [Validators.required]\n        }),\n        pool: new FormControl(null, {\n          validators: [Validators.required]\n        }),\n        useDataPool: new FormControl(false),\n        dataPool: new FormControl(null),\n        size: new FormControl(null, {\n          updateOn: 'blur'\n        }),\n        obj_size: new FormControl(this.defaultObjectSize),\n        features: this.featuresFormGroups,\n        stripingUnit: new FormControl(null),\n        stripingCount: new FormControl(null, {\n          updateOn: 'blur'\n        })\n      },\n      this.validateRbdForm(this.formatter)\n    );\n  }\n\n  disableForEdit() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('pool').disable();\n    this.rbdForm.get('useDataPool').disable();\n    this.rbdForm.get('dataPool').disable();\n    this.rbdForm.get('obj_size').disable();\n    this.rbdForm.get('stripingUnit').disable();\n    this.rbdForm.get('stripingCount').disable();\n  }\n\n  disableForClone() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('size').disable();\n  }\n\n  disableForCopy() {\n    this.rbdForm.get('parent').disable();\n    this.rbdForm.get('size').disable();\n  }\n\n  ngOnInit() {\n    if (this.router.url.startsWith('/rbd/edit')) {\n      this.mode = this.rbdFormMode.editing;\n      this.disableForEdit();\n    } else if (this.router.url.startsWith('/rbd/clone')) {\n      this.mode = this.rbdFormMode.cloning;\n      this.disableForClone();\n    } else if (this.router.url.startsWith('/rbd/copy')) {\n      this.mode = this.rbdFormMode.copying;\n      this.disableForCopy();\n    }\n    if (\n      this.mode === this.rbdFormMode.editing ||\n      this.mode === this.rbdFormMode.cloning ||\n      this.mode === this.rbdFormMode.copying\n    ) {\n      this.route.params.subscribe((params: { pool: string; name: string; snap: string }) => {\n        const poolName = decodeURIComponent(params.pool);\n        const rbdName = decodeURIComponent(params.name);\n        if (params.snap) {\n          this.snapName = decodeURIComponent(params.snap);\n        }\n        this.rbdService.get(poolName, rbdName).subscribe((resp: RbdFormResponseModel) => {\n          this.setResponse(resp, this.snapName);\n        });\n      });\n    } else {\n      this.rbdService.defaultFeatures().subscribe((defaultFeatures: Array<string>) => {\n        this.setFeatures(defaultFeatures);\n      });\n    }\n    if (this.mode !== this.rbdFormMode.editing && this.poolPermission.read) {\n      this.poolService\n        .list(['pool_name', 'type', 'flags_names', 'application_metadata'])\n        .then((resp) => {\n          const pools = [];\n          const dataPools = [];\n          for (const pool of resp) {\n            if (_.indexOf(pool.application_metadata, 'rbd') !== -1) {\n              if (pool.type === 'replicated') {\n                pools.push(pool);\n                dataPools.push(pool);\n              } else if (\n                pool.type === 'erasure' &&\n                pool.flags_names.indexOf('ec_overwrites') !== -1\n              ) {\n                dataPools.push(pool);\n              }\n            }\n          }\n          this.pools = pools;\n          this.allPools = pools;\n          this.dataPools = dataPools;\n          this.allDataPools = dataPools;\n          if (this.pools.length === 1) {\n            const poolName = this.pools[0]['pool_name'];\n            this.rbdForm.get('pool').setValue(poolName);\n            this.onPoolChange(poolName);\n          }\n        });\n    }\n    this.deepFlattenFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('deep-flatten', value);\n    });\n    this.layeringFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('layering', value);\n    });\n    this.exclusiveLockFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('exclusive-lock', value);\n    });\n    this.objectMapFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('object-map', value);\n    });\n    this.journalingFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('journaling', value);\n    });\n    this.fastDiffFormControl.valueChanges.subscribe((value) => {\n      this.watchDataFeatures('fast-diff', value);\n    });\n  }\n\n  onPoolChange(selectedPoolName) {\n    const newDataPools = this.allDataPools.filter((dataPool: any) => {\n      return dataPool.pool_name !== selectedPoolName;\n    });\n    if (this.rbdForm.getValue('dataPool') === selectedPoolName) {\n      this.rbdForm.get('dataPool').setValue(null);\n    }\n    this.dataPools = newDataPools;\n  }\n\n  onUseDataPoolChange() {\n    if (!this.rbdForm.getValue('useDataPool')) {\n      this.rbdForm.get('dataPool').setValue(null);\n      this.onDataPoolChange(null);\n    }\n  }\n\n  onDataPoolChange(selectedDataPoolName) {\n    const newPools = this.allPools.filter((pool: any) => {\n      return pool.pool_name !== selectedDataPoolName;\n    });\n    if (this.rbdForm.getValue('pool') === selectedDataPoolName) {\n      this.rbdForm.get('pool').setValue(null);\n    }\n    this.pools = newPools;\n  }\n\n  validateRbdForm(formatter: FormatterService): ValidatorFn {\n    return (formGroup: CdFormGroup) => {\n      // Data Pool\n      const useDataPoolControl = formGroup.get('useDataPool');\n      const dataPoolControl = formGroup.get('dataPool');\n      let dataPoolControlErrors = null;\n      if (useDataPoolControl.value && dataPoolControl.value == null) {\n        dataPoolControlErrors = { required: true };\n      }\n      dataPoolControl.setErrors(dataPoolControlErrors);\n      // Size\n      const sizeControl = formGroup.get('size');\n      const objectSizeControl = formGroup.get('obj_size');\n      const objectSizeInBytes = formatter.toBytes(\n        objectSizeControl.value != null ? objectSizeControl.value : this.defaultObjectSize\n      );\n      const stripingCountControl = formGroup.get('stripingCount');\n      const stripingCount = stripingCountControl.value != null ? stripingCountControl.value : 1;\n      let sizeControlErrors = null;\n      if (sizeControl.value === null) {\n        sizeControlErrors = { required: true };\n      } else {\n        const sizeInBytes = formatter.toBytes(sizeControl.value);\n        if (stripingCount * objectSizeInBytes > sizeInBytes) {\n          sizeControlErrors = { invalidSizeObject: true };\n        }\n      }\n      sizeControl.setErrors(sizeControlErrors);\n      // Striping Unit\n      const stripingUnitControl = formGroup.get('stripingUnit');\n      let stripingUnitControlErrors = null;\n      if (stripingUnitControl.value === null && stripingCountControl.value !== null) {\n        stripingUnitControlErrors = { required: true };\n      } else if (stripingUnitControl.value !== null) {\n        const stripingUnitInBytes = formatter.toBytes(stripingUnitControl.value);\n        if (stripingUnitInBytes > objectSizeInBytes) {\n          stripingUnitControlErrors = { invalidStripingUnit: true };\n        }\n      }\n      stripingUnitControl.setErrors(stripingUnitControlErrors);\n      // Striping Count\n      let stripingCountControlErrors = null;\n      if (stripingCountControl.value === null && stripingUnitControl.value !== null) {\n        stripingCountControlErrors = { required: true };\n      } else if (stripingCount < 1) {\n        stripingCountControlErrors = { min: true };\n      }\n      stripingCountControl.setErrors(stripingCountControlErrors);\n      return null;\n    };\n  }\n\n  deepBoxCheck(key, checked) {\n    _.forIn(this.features, (details, feature) => {\n      if (details.requires === key) {\n        if (checked) {\n          this.rbdForm.get(feature).enable();\n        } else {\n          this.rbdForm.get(feature).disable();\n          this.rbdForm.get(feature).setValue(checked);\n          this.watchDataFeatures(feature, checked);\n          this.deepBoxCheck(feature, checked);\n        }\n      }\n      if (this.mode === this.rbdFormMode.editing && this.rbdForm.get(feature).enabled) {\n        if (this.response.features_name.indexOf(feature) !== -1 && !details.allowDisable) {\n          this.rbdForm.get(feature).disable();\n        } else if (this.response.features_name.indexOf(feature) === -1 && !details.allowEnable) {\n          this.rbdForm.get(feature).disable();\n        }\n      }\n    });\n  }\n\n  featureFormUpdate(key, checked) {\n    if (checked) {\n      const required = this.features[key].requires;\n      if (required && !this.rbdForm.getValue(required)) {\n        this.rbdForm.get(key).setValue(false);\n        return;\n      }\n    }\n    this.deepBoxCheck(key, checked);\n  }\n\n  watchDataFeatures(key, checked) {\n    this.featureFormUpdate(key, checked);\n  }\n\n  setFeatures(features: Array<string>) {\n    const featuresControl = this.rbdForm.get('features');\n    _.forIn(this.features, (feature) => {\n      if (features.indexOf(feature.key) !== -1) {\n        featuresControl.get(feature.key).setValue(true);\n      }\n      this.watchDataFeatures(feature.key, featuresControl.get(feature.key).value);\n    });\n  }\n\n  setResponse(response: RbdFormResponseModel, snapName: string) {\n    this.response = response;\n    if (this.mode === this.rbdFormMode.cloning) {\n      this.rbdForm.get('parent').setValue(`${response.pool_name}/${response.name}@${snapName}`);\n    } else if (this.mode === this.rbdFormMode.copying) {\n      if (snapName) {\n        this.rbdForm.get('parent').setValue(`${response.pool_name}/${response.name}@${snapName}`);\n      } else {\n        this.rbdForm.get('parent').setValue(`${response.pool_name}/${response.name}`);\n      }\n    } else if (response.parent) {\n      const parent = response.parent;\n      this.rbdForm\n        .get('parent')\n        .setValue(`${parent.pool_name}/${parent.image_name}@${parent.snap_name}`);\n    }\n    if (this.mode === this.rbdFormMode.editing) {\n      this.rbdForm.get('name').setValue(response.name);\n    }\n    this.rbdForm.get('pool').setValue(response.pool_name);\n    if (response.data_pool) {\n      this.rbdForm.get('useDataPool').setValue(true);\n      this.rbdForm.get('dataPool').setValue(response.data_pool);\n    }\n    this.rbdForm.get('size').setValue(this.dimlessBinaryPipe.transform(response.size));\n    this.rbdForm.get('obj_size').setValue(this.dimlessBinaryPipe.transform(response.obj_size));\n    this.setFeatures(response.features_name);\n    this.rbdForm\n      .get('stripingUnit')\n      .setValue(this.dimlessBinaryPipe.transform(response.stripe_unit));\n    this.rbdForm.get('stripingCount').setValue(response.stripe_count);\n  }\n\n  createRequest() {\n    const request = new RbdFormCreateRequestModel();\n    request.pool_name = this.rbdForm.getValue('pool');\n    request.name = this.rbdForm.getValue('name');\n    request.size = this.formatter.toBytes(this.rbdForm.getValue('size'));\n    request.obj_size = this.formatter.toBytes(this.rbdForm.getValue('obj_size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n    request.stripe_unit = this.formatter.toBytes(this.rbdForm.getValue('stripingUnit'));\n    request.stripe_count = this.rbdForm.getValue('stripingCount');\n    request.data_pool = this.rbdForm.getValue('dataPool');\n    return request;\n  }\n\n  createAction(): Observable<any> {\n    const request = this.createRequest();\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/create', {\n        pool_name: request.pool_name,\n        image_name: request.name\n      }),\n      call: this.rbdService.create(request)\n    });\n  }\n\n  editRequest() {\n    const request = new RbdFormEditRequestModel();\n    request.name = this.rbdForm.getValue('name');\n    request.size = this.formatter.toBytes(this.rbdForm.getValue('size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n    return request;\n  }\n\n  cloneRequest(): RbdFormCloneRequestModel {\n    const request = new RbdFormCloneRequestModel();\n    request.child_pool_name = this.rbdForm.getValue('pool');\n    request.child_image_name = this.rbdForm.getValue('name');\n    request.obj_size = this.formatter.toBytes(this.rbdForm.getValue('obj_size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n    request.stripe_unit = this.formatter.toBytes(this.rbdForm.getValue('stripingUnit'));\n    request.stripe_count = this.rbdForm.getValue('stripingCount');\n    request.data_pool = this.rbdForm.getValue('dataPool');\n    return request;\n  }\n\n  editAction(): Observable<any> {\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/edit', {\n        pool_name: this.response.pool_name,\n        image_name: this.response.name\n      }),\n      call: this.rbdService.update(this.response.pool_name, this.response.name, this.editRequest())\n    });\n  }\n\n  cloneAction(): Observable<any> {\n    const request = this.cloneRequest();\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/clone', {\n        parent_pool_name: this.response.pool_name,\n        parent_image_name: this.response.name,\n        parent_snap_name: this.snapName,\n        child_pool_name: request.child_pool_name,\n        child_image_name: request.child_image_name\n      }),\n      call: this.rbdService.cloneSnapshot(\n        this.response.pool_name,\n        this.response.name,\n        this.snapName,\n        request\n      )\n    });\n  }\n\n  copyRequest(): RbdFormCopyRequestModel {\n    const request = new RbdFormCopyRequestModel();\n    if (this.snapName) {\n      request.snapshot_name = this.snapName;\n    }\n    request.dest_pool_name = this.rbdForm.getValue('pool');\n    request.dest_image_name = this.rbdForm.getValue('name');\n    request.obj_size = this.formatter.toBytes(this.rbdForm.getValue('obj_size'));\n    _.forIn(this.features, (feature) => {\n      if (this.rbdForm.getValue(feature.key)) {\n        request.features.push(feature.key);\n      }\n    });\n    request.stripe_unit = this.formatter.toBytes(this.rbdForm.getValue('stripingUnit'));\n    request.stripe_count = this.rbdForm.getValue('stripingCount');\n    request.data_pool = this.rbdForm.getValue('dataPool');\n    return request;\n  }\n\n  copyAction(): Observable<any> {\n    const request = this.copyRequest();\n    return this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('rbd/copy', {\n        src_pool_name: this.response.pool_name,\n        src_image_name: this.response.name,\n        dest_pool_name: request.dest_pool_name,\n        dest_image_name: request.dest_image_name\n      }),\n      call: this.rbdService.copy(this.response.pool_name, this.response.name, request)\n    });\n  }\n\n  submit() {\n    let action: Observable<any>;\n    if (this.mode === this.rbdFormMode.editing) {\n      action = this.editAction();\n    } else if (this.mode === this.rbdFormMode.cloning) {\n      action = this.cloneAction();\n    } else if (this.mode === this.rbdFormMode.copying) {\n      action = this.copyAction();\n    } else {\n      action = this.createAction();\n    }\n    action.subscribe(\n      undefined,\n      () => this.rbdForm.setErrors({ cdSubmitButton: true }),\n      () => this.router.navigate(['/block/rbd'])\n    );\n  }\n}\n","export class RbdFormModel {\n  name: string;\n  pool_name: string;\n  data_pool: string;\n  size: number;\n  obj_size: number;\n  stripe_unit: number;\n  stripe_count: number;\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Block</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Images</li>\\n  </ol>\\n</nav>\\n\\n<cd-view-cache *ngFor=\\\"let viewCacheStatus of viewCacheStatusList\\\"\\n               [status]=\\\"viewCacheStatus.status\\\"\\n               [statusFor]=\\\"viewCacheStatus.statusFor\\\"></cd-view-cache>\\n\\n<cd-table [data]=\\\"images\\\"\\n          columnMode=\\\"flex\\\"\\n          [columns]=\\\"columns\\\"\\n          identifier=\\\"id\\\"\\n          forceIdentifier=\\\"true\\\"\\n          selectionType=\\\"single\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\">\\n  <div class=\\\"table-actions\\\">\\n    <div class=\\\"btn-group\\\"\\n         dropdown>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.create && (!permission.update || !selection.hasSingleSelection)\\\"\\n              routerLink=\\\"/rbd/add\\\">\\n        <i class=\\\"fa fa-fw fa-plus\\\"></i><span i18n>Add</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.update && (!permission.create || permission.create && selection.hasSingleSelection)\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\"\\n              routerLink=\\\"/rbd/edit/{{ selection.first()?.pool_name | encodeUri }}/{{ selection.first()?.name | encodeUri }}\\\">\\n        <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n        <span i18n>Edit</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.delete && !permission.update && !permission.create\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\"\\n              (click)=\\\"deleteRbdModal()\\\">\\n        <i class=\\\"fa fa-fw fa-trash-o\\\"></i><span i18n>Delete</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              dropdownToggle\\n              class=\\\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\\\"\\n              *ngIf=\\\"permission.create || permission.update\\\">\\n        <span class=\\\"caret\\\"></span>\\n        <span class=\\\"sr-only\\\"></span>\\n      </button>\\n      <ul *dropdownMenu\\n          class=\\\"dropdown-menu\\\"\\n          role=\\\"menu\\\">\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rbd/add\\\">\\n            <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n            <span i18n>Add</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rbd/edit/{{ selection.first()?.pool_name | encodeUri }}/{{ selection.first()?.name | encodeUri }}\\\">\\n            <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n            <span i18n>Edit</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rbd/copy/{{ selection.first()?.pool_name | encodeUri }}/{{ selection.first()?.name | encodeUri }}\\\">\\n            <i class=\\\"fa fa-fw fa-copy\\\"></i>\\n            <span i18n>Copy</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing || !selection.first().parent}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"flattenRbdModal()\\\">\\n            <i class=\\\"fa fa-fw fa-chain-broken\\\"></i>\\n            <span i18n>Flatten</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.delete\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"deleteRbdModal()\\\">\\n            <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n            <span i18n>Delete</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <cd-rbd-details cdTableDetail\\n                  [selection]=\\\"selection\\\">\\n  </cd-rbd-details>\\n</cd-table>\\n\\n<ng-template #usageNotAvailableTooltipTpl>\\n  <div i18n\\n       [innerHtml]=\\\"'Only available for RBD images with <strong>fast-diff</strong> enabled'\\\"></div>\\n</ng-template>\\n\\n<ng-template #parentTpl\\n             let-value=\\\"value\\\">\\n  <span *ngIf=\\\"value\\\">{{ value.pool_name }}/{{ value.image_name }}@{{ value.snap_name }}</span>\\n  <span *ngIf=\\\"!value\\\">-</span>\\n</ng-template>\\n\\n<ng-template #flattenTpl\\n             let-value>\\n  You are about to flatten\\n  <strong>{{ value.child }}</strong>.\\n  <br>\\n  <br> All blocks will be copied from parent\\n  <strong>{{ value.parent }}</strong> to child\\n  <strong>{{ value.child }}</strong>.\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\n\nimport { RbdService } from '../../../shared/api/rbd.service';\nimport { ConfirmationModalComponent } from '../../../shared/components/confirmation-modal/confirmation-modal.component';\nimport { DeletionModalComponent } from '../../../shared/components/deletion-modal/deletion-modal.component';\nimport { CellTemplate } from '../../../shared/enum/cell-template.enum';\nimport { ViewCacheStatus } from '../../../shared/enum/view-cache-status.enum';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { ExecutingTask } from '../../../shared/models/executing-task';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { Permission } from '../../../shared/models/permissions';\nimport { DimlessBinaryPipe } from '../../../shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '../../../shared/pipes/dimless.pipe';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\nimport { SummaryService } from '../../../shared/services/summary.service';\nimport { TaskWrapperService } from '../../../shared/services/task-wrapper.service';\nimport { RbdParentModel } from '../rbd-form/rbd-parent.model';\nimport { RbdModel } from './rbd-model';\n\n@Component({\n  selector: 'cd-rbd-list',\n  templateUrl: './rbd-list.component.html',\n  styleUrls: ['./rbd-list.component.scss']\n})\nexport class RbdListComponent implements OnInit, OnDestroy {\n  @ViewChild('usageTpl') usageTpl: TemplateRef<any>;\n  @ViewChild('parentTpl') parentTpl: TemplateRef<any>;\n  @ViewChild('nameTpl') nameTpl: TemplateRef<any>;\n  @ViewChild('flattenTpl') flattenTpl: TemplateRef<any>;\n\n  permission: Permission;\n  images: any;\n  executingTasks: ExecutingTask[] = [];\n  columns: CdTableColumn[];\n  retries: number;\n  viewCacheStatusList: any[];\n  selection = new CdTableSelection();\n\n  summaryDataSubscription = null;\n\n  modalRef: BsModalRef;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rbdService: RbdService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private dimlessPipe: DimlessPipe,\n    private summaryService: SummaryService,\n    private modalService: BsModalService,\n    private taskWrapper: TaskWrapperService) {\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Name',\n        prop: 'name',\n        flexGrow: 2,\n        cellTransformation: CellTemplate.executing\n      },\n      {\n        name: 'Pool',\n        prop: 'pool_name',\n        flexGrow: 2\n      },\n      {\n        name: 'Size',\n        prop: 'size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'Objects',\n        prop: 'num_objs',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessPipe\n      },\n      {\n        name: 'Object size',\n        prop: 'obj_size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'Provisioned',\n        prop: 'disk_usage',\n        cellClass: 'text-center',\n        flexGrow: 1,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'Total provisioned',\n        prop: 'total_disk_usage',\n        cellClass: 'text-center',\n        flexGrow: 1,\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'Parent',\n        prop: 'parent',\n        flexGrow: 2,\n        cellTemplate: this.parentTpl\n      }\n    ];\n\n    this.summaryService.get().subscribe((resp: any) => {\n      if (!resp) {\n        return;\n      }\n      this.loadImages(resp.executing_tasks);\n      this.summaryDataSubscription = this.summaryService.summaryData$.subscribe((data: any) => {\n        this.loadImages(data.executing_tasks);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.summaryDataSubscription) {\n      this.summaryDataSubscription.unsubscribe();\n    }\n  }\n\n  loadImages(executingTasks) {\n    if (executingTasks === null) {\n      executingTasks = this.executingTasks;\n    }\n    this.rbdService.list().subscribe(\n      (resp: any[]) => {\n        let images = [];\n        const viewCacheStatusMap = {};\n        resp.forEach((pool) => {\n          if (_.isUndefined(viewCacheStatusMap[pool.status])) {\n            viewCacheStatusMap[pool.status] = [];\n          }\n          viewCacheStatusMap[pool.status].push(pool.pool_name);\n          images = images.concat(pool.value);\n        });\n        const viewCacheStatusList = [];\n        _.forEach(viewCacheStatusMap, (value, key) => {\n          viewCacheStatusList.push({\n            status: parseInt(key, 10),\n            statusFor:\n              (value.length > 1 ? 'pools ' : 'pool ') +\n              '<strong>' +\n              value.join('</strong>, <strong>') +\n              '</strong>'\n          });\n        });\n        this.viewCacheStatusList = viewCacheStatusList;\n        images.forEach((image) => {\n          image.executingTasks = this._getExecutingTasks(\n            executingTasks,\n            image.pool_name,\n            image.name\n          );\n        });\n        this.images = this.merge(images, executingTasks);\n        this.executingTasks = executingTasks;\n      },\n      () => {\n        this.viewCacheStatusList = [{ status: ViewCacheStatus.ValueException }];\n      }\n    );\n  }\n\n  _getExecutingTasks(executingTasks: ExecutingTask[], poolName, imageName): ExecutingTask[] {\n    const result: ExecutingTask[] = [];\n    executingTasks.forEach((executingTask) => {\n      if (\n        executingTask.name === 'rbd/snap/create' ||\n        executingTask.name === 'rbd/snap/delete' ||\n        executingTask.name === 'rbd/snap/edit' ||\n        executingTask.name === 'rbd/snap/rollback'\n      ) {\n        if (\n          poolName === executingTask.metadata['pool_name'] &&\n          imageName === executingTask.metadata['image_name']\n        ) {\n          result.push(executingTask);\n        }\n      }\n    });\n    return result;\n  }\n\n  private merge(rbds: RbdModel[], executingTasks: ExecutingTask[] = []) {\n    const resultRBDs = _.clone(rbds);\n    executingTasks.forEach((executingTask) => {\n      const rbdExecuting = resultRBDs.find((rbd) => {\n        return (\n          rbd.pool_name === executingTask.metadata['pool_name'] &&\n          rbd.name === executingTask.metadata['image_name']\n        );\n      });\n      if (rbdExecuting) {\n        if (executingTask.name === 'rbd/delete') {\n          rbdExecuting.cdExecuting = 'deleting';\n        } else if (executingTask.name === 'rbd/edit') {\n          rbdExecuting.cdExecuting = 'updating';\n        } else if (executingTask.name === 'rbd/flatten') {\n          rbdExecuting.cdExecuting = 'flattening';\n        }\n      } else if (executingTask.name === 'rbd/create') {\n        const rbdModel = new RbdModel();\n        rbdModel.name = executingTask.metadata['image_name'];\n        rbdModel.pool_name = executingTask.metadata['pool_name'];\n        rbdModel.cdExecuting = 'creating';\n        this.pushIfNotExists(resultRBDs, rbdModel);\n      } else if (executingTask.name === 'rbd/clone') {\n        const rbdModel = new RbdModel();\n        rbdModel.name = executingTask.metadata['child_image_name'];\n        rbdModel.pool_name = executingTask.metadata['child_pool_name'];\n        rbdModel.cdExecuting = 'cloning';\n        this.pushIfNotExists(resultRBDs, rbdModel);\n      } else if (executingTask.name === 'rbd/copy') {\n        const rbdModel = new RbdModel();\n        rbdModel.name = executingTask.metadata['dest_image_name'];\n        rbdModel.pool_name = executingTask.metadata['dest_pool_name'];\n        rbdModel.cdExecuting = 'copying';\n        this.pushIfNotExists(resultRBDs, rbdModel);\n      }\n    });\n    return resultRBDs;\n  }\n\n  private pushIfNotExists(resultRBDs: RbdModel[], rbdModel: RbdModel) {\n    const exists = resultRBDs.some((resultRBD) => {\n      return resultRBD.name === rbdModel.name && resultRBD.pool_name === rbdModel.pool_name;\n    });\n    if (!exists) {\n      resultRBDs.push(rbdModel);\n    }\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteRbdModal() {\n    const poolName = this.selection.first().pool_name;\n    const imageName = this.selection.first().name;\n    this.modalRef = this.modalService.show(DeletionModalComponent);\n    this.modalRef.content.setUp({\n      metaType: 'RBD',\n      pattern: `${poolName}/${imageName}`,\n      deletionObserver: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('rbd/delete', {\n            pool_name: poolName,\n            image_name: imageName\n          }),\n          tasks: this.executingTasks,\n          call: this.rbdService.delete(poolName, imageName)\n        }),\n      modalRef: this.modalRef\n    });\n  }\n\n  flattenRbd(poolName, imageName) {\n    this.taskWrapper\n      .wrapTaskAroundCall({\n        task: new FinishedTask('rbd/flatten', {\n          pool_name: poolName,\n          image_name: imageName\n        }),\n        tasks: this.executingTasks,\n        call: this.rbdService.flatten(poolName, imageName)\n      })\n      .subscribe(undefined, undefined, () => {\n        this.modalRef.hide();\n        this.loadImages(null);\n      });\n  }\n\n  flattenRbdModal() {\n    const poolName = this.selection.first().pool_name;\n    const imageName = this.selection.first().name;\n    const parent: RbdParentModel = this.selection.first().parent;\n\n    const initialState = {\n      titleText: 'RBD flatten',\n      buttonText: 'Flatten',\n      bodyTpl: this.flattenTpl,\n      bodyData: {\n        parent: `${parent.pool_name}/${parent.image_name}@${parent.snap_name}`,\n        child: `${poolName}/${imageName}`\n      },\n      onSubmit: () => {\n        this.flattenRbd(poolName, imageName);\n      }\n    };\n\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, { initialState });\n  }\n}\n","export class RbdModel {\n  name: string;\n  pool_name: string;\n\n  cdExecuting: string;\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">{{ editing ? 'Rename' : 'Create' }} RBD Snapshot</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form name=\\\"snapshotForm\\\"\\n      class=\\\"form-horizontal\\\"\\n      #formDir=\\\"ngForm\\\"\\n      [formGroup]=\\\"snapshotForm\\\"\\n      novalidate>\\n  <div class=\\\"modal-body\\\">\\n\\n    <!-- Name -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': snapshotForm.showError('snapshotName', formDir)}\\\">\\n      <label i18n\\n             class=\\\"control-label col-sm-3\\\"\\n             for=\\\"snapshotName\\\">Name\\n        <span class=\\\"required\\\"></span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               placeholder=\\\"Snapshot name...\\\"\\n               id=\\\"snapshotName\\\"\\n               name=\\\"snapshotName\\\"\\n               formControlName=\\\"snapshotName\\\"\\n               autofocus>\\n        <span i18n\\n              class=\\\"help-block\\\"\\n              *ngIf=\\\"snapshotForm.showError('snapshotName', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <div class=\\\"button-group text-right\\\">\\n      <cd-submit-button [form]=\\\"snapshotForm\\\"\\n                        (submitAction)=\\\"submit()\\\">\\n        {{ editing ? 'Rename' : 'Create' }} Snapshot\\n      </cd-submit-button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subject } from 'rxjs';\n\nimport { RbdService } from '../../../shared/api/rbd.service';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { TaskManagerService } from '../../../shared/services/task-manager.service';\n\n@Component({\n  selector: 'cd-rbd-snapshot-form',\n  templateUrl: './rbd-snapshot-form.component.html',\n  styleUrls: ['./rbd-snapshot-form.component.scss']\n})\nexport class RbdSnapshotFormComponent implements OnInit {\n  poolName: string;\n  imageName: string;\n  snapName: string;\n\n  snapshotForm: CdFormGroup;\n\n  editing = false;\n\n  public onSubmit: Subject<string>;\n\n  constructor(\n    public modalRef: BsModalRef,\n    private rbdService: RbdService,\n    private taskManagerService: TaskManagerService,\n    private notificationService: NotificationService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.snapshotForm = new CdFormGroup({\n      snapshotName: new FormControl('', {\n        validators: [Validators.required]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.onSubmit = new Subject();\n  }\n\n  setSnapName(snapName) {\n    this.snapName = snapName;\n    this.snapshotForm.get('snapshotName').setValue(snapName);\n    this.editing = true;\n  }\n\n  editAction() {\n    const snapshotName = this.snapshotForm.getValue('snapshotName');\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/edit';\n    finishedTask.metadata = {\n      pool_name: this.poolName,\n      image_name: this.imageName,\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .renameSnapshot(this.poolName, this.imageName, this.snapName, snapshotName)\n      .toPromise()\n      .then((resp) => {\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n        this.modalRef.hide();\n        this.onSubmit.next(this.snapName);\n      })\n      .catch((resp) => {\n        this.snapshotForm.setErrors({ cdSubmitButton: true });\n      });\n  }\n\n  createAction() {\n    const snapshotName = this.snapshotForm.getValue('snapshotName');\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/create';\n    finishedTask.metadata = {\n      pool_name: this.poolName,\n      image_name: this.imageName,\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .createSnapshot(this.poolName, this.imageName, snapshotName)\n      .toPromise()\n      .then((resp) => {\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n        this.modalRef.hide();\n        this.onSubmit.next(snapshotName);\n      })\n      .catch((resp) => {\n        this.snapshotForm.setErrors({ cdSubmitButton: true });\n      });\n  }\n\n  submit() {\n    if (this.editing) {\n      this.editAction();\n    } else {\n      this.createAction();\n    }\n  }\n}\n","module.exports = \"<cd-table [data]=\\\"data\\\"\\n          columnMode=\\\"flex\\\"\\n          selectionType=\\\"single\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\"\\n          [columns]=\\\"columns\\\">\\n  <div class=\\\"table-actions\\\">\\n    <div class=\\\"btn-group\\\"\\n         dropdown>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.create && (!permission.update || !selection.hasSingleSelection)\\\"\\n              (click)=\\\"openCreateSnapshotModal()\\\">\\n        <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n        <span i18n>Create</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.update && (!permission.create || permission.create && selection.hasSingleSelection)\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\"\\n              (click)=\\\"openEditSnapshotModal()\\\">\\n        <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n        <span i18n>Rename</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.delete && !permission.update && !permission.create\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\"\\n              (click)=\\\"deleteSnapshotModal()\\\">\\n        <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n        <span i18n>Delete</span>\\n      </button>\\n      <button type=\\\"button\\\"\\n              dropdownToggle\\n              class=\\\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\\\"\\n              *ngIf=\\\"permission.create || permission.update\\\">\\n        <span class=\\\"caret\\\"></span>\\n        <span class=\\\"sr-only\\\"></span>\\n      </button>\\n      <ul *dropdownMenu\\n          class=\\\"dropdown-menu\\\"\\n          role=\\\"menu\\\">\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"openCreateSnapshotModal()\\\">\\n            <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n            <span i18n>Create</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"openEditSnapshotModal()\\\">\\n            <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n            <span i18n>Rename</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleProtection()\\\">\\n            <span *ngIf=\\\"!selection.first()?.is_protected\\\">\\n              <i class=\\\"fa fa-fw fa-lock\\\"></i>\\n              <span i18n>Protect</span>\\n            </span>\\n            <span *ngIf=\\\"selection.first()?.is_protected\\\">\\n              <i class=\\\"fa fa-fw fa-unlock\\\"></i>\\n              <span i18n>Unprotect</span>\\n            </span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rbd/clone/{{ poolName | encodeUri }}/{{ rbdName | encodeUri }}/{{ selection.first()?.name | encodeUri }}\\\">\\n            <i class=\\\"fa fa-fw fa-clone\\\"></i>\\n            <span i18n>Clone</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rbd/copy/{{ poolName | encodeUri }}/{{ rbdName | encodeUri }}/{{ selection.first()?.name | encodeUri }}\\\">\\n            <i class=\\\"fa fa-fw fa-copy\\\"></i>\\n            <span i18n>Copy</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"rollbackModal()\\\">\\n            <i class=\\\"fa fa-fw fa-undo\\\"></i>\\n            <span i18n>Rollback</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.delete\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection || selection.first().executing || selection.first().is_protected}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"deleteSnapshotModal()\\\">\\n            <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n            <span i18n>Delete</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</cd-table>\\n\\n<ng-template #protectTpl\\n             let-value=\\\"value\\\">\\n  <span *ngIf=\\\"value\\\"\\n        class=\\\"label label-success\\\">PROTECTED</span>\\n  <span *ngIf=\\\"!value\\\"\\n        class=\\\"label label-info\\\">UNPROTECTED</span>\\n</ng-template>\\n\\n<ng-template #rollbackTpl\\n             let-value>\\n  You are about to rollback\\n  <strong>{{ value.snapName }}</strong>.\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\n\nimport { RbdService } from '../../../shared/api/rbd.service';\nimport { ConfirmationModalComponent } from '../../../shared/components/confirmation-modal/confirmation-modal.component';\nimport { DeletionModalComponent } from '../../../shared/components/deletion-modal/deletion-modal.component';\nimport { CellTemplate } from '../../../shared/enum/cell-template.enum';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { ExecutingTask } from '../../../shared/models/executing-task';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { Permission } from '../../../shared/models/permissions';\nimport { CdDatePipe } from '../../../shared/pipes/cd-date.pipe';\nimport { DimlessBinaryPipe } from '../../../shared/pipes/dimless-binary.pipe';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { TaskManagerService } from '../../../shared/services/task-manager.service';\nimport { RbdSnapshotFormComponent } from '../rbd-snapshot-form/rbd-snapshot-form.component';\nimport { RbdSnapshotModel } from './rbd-snapshot.model';\n\n@Component({\n  selector: 'cd-rbd-snapshot-list',\n  templateUrl: './rbd-snapshot-list.component.html',\n  styleUrls: ['./rbd-snapshot-list.component.scss']\n})\nexport class RbdSnapshotListComponent implements OnInit, OnChanges {\n  @Input() snapshots: RbdSnapshotModel[] = [];\n  @Input() poolName: string;\n  @Input() rbdName: string;\n  @Input() executingTasks: ExecutingTask[] = [];\n\n  @ViewChild('nameTpl') nameTpl: TemplateRef<any>;\n  @ViewChild('protectTpl') protectTpl: TemplateRef<any>;\n  @ViewChild('rollbackTpl') rollbackTpl: TemplateRef<any>;\n\n  permission: Permission;\n\n  data: RbdSnapshotModel[];\n\n  columns: CdTableColumn[];\n\n  modalRef: BsModalRef;\n\n  selection = new CdTableSelection();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private modalService: BsModalService,\n    private dimlessBinaryPipe: DimlessBinaryPipe,\n    private cdDatePipe: CdDatePipe,\n    private rbdService: RbdService,\n    private taskManagerService: TaskManagerService,\n    private notificationService: NotificationService\n  ) {\n    this.permission = this.authStorageService.getPermissions().rbdImage;\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Name',\n        prop: 'name',\n        cellTransformation: CellTemplate.executing,\n        flexGrow: 2\n      },\n      {\n        name: 'Size',\n        prop: 'size',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'Provisioned',\n        prop: 'disk_usage',\n        flexGrow: 1,\n        cellClass: 'text-right',\n        pipe: this.dimlessBinaryPipe\n      },\n      {\n        name: 'State',\n        prop: 'is_protected',\n        flexGrow: 1,\n        cellClass: 'text-center',\n        cellTemplate: this.protectTpl\n      },\n      {\n        name: 'Created',\n        prop: 'timestamp',\n        flexGrow: 1,\n        pipe: this.cdDatePipe\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    this.data = this.merge(this.snapshots, this.executingTasks);\n  }\n\n  private merge(snapshots: RbdSnapshotModel[], executingTasks: ExecutingTask[] = []) {\n    const resultSnapshots = _.clone(snapshots);\n    executingTasks.forEach((executingTask) => {\n      const snapshotExecuting = resultSnapshots.find((snapshot) => {\n        return snapshot.name === executingTask.metadata['snapshot_name'];\n      });\n      if (snapshotExecuting) {\n        if (executingTask.name === 'rbd/snap/delete') {\n          snapshotExecuting.cdExecuting = 'deleting';\n        } else if (executingTask.name === 'rbd/snap/edit') {\n          snapshotExecuting.cdExecuting = 'updating';\n        } else if (executingTask.name === 'rbd/snap/rollback') {\n          snapshotExecuting.cdExecuting = 'rolling back';\n        }\n      } else if (executingTask.name === 'rbd/snap/create') {\n        const rbdSnapshotModel = new RbdSnapshotModel();\n        rbdSnapshotModel.name = executingTask.metadata['snapshot_name'];\n        rbdSnapshotModel.cdExecuting = 'creating';\n        this.pushIfNotExists(resultSnapshots, rbdSnapshotModel);\n      }\n    });\n    return resultSnapshots;\n  }\n\n  private pushIfNotExists(resultSnapshots: RbdSnapshotModel[], rbdSnapshotModel: RbdSnapshotModel) {\n    const exists = resultSnapshots.some((resultSnapshot) => {\n      return resultSnapshot.name === rbdSnapshotModel.name;\n    });\n    if (!exists) {\n      resultSnapshots.push(rbdSnapshotModel);\n    }\n  }\n\n  private openSnapshotModal(taskName: string, oldSnapshotName: string = null) {\n    this.modalRef = this.modalService.show(RbdSnapshotFormComponent);\n    this.modalRef.content.poolName = this.poolName;\n    this.modalRef.content.imageName = this.rbdName;\n    if (oldSnapshotName) {\n      this.modalRef.content.setSnapName(this.selection.first().name);\n    }\n    this.modalRef.content.onSubmit.subscribe((snapshotName: string) => {\n      const executingTask = new ExecutingTask();\n      executingTask.name = taskName;\n      executingTask.metadata = { snapshot_name: snapshotName };\n      this.executingTasks.push(executingTask);\n      this.ngOnChanges();\n    });\n  }\n\n  openCreateSnapshotModal() {\n    this.openSnapshotModal('rbd/snap/create');\n  }\n\n  openEditSnapshotModal() {\n    this.openSnapshotModal('rbd/snap/edit', this.selection.first().name);\n  }\n\n  toggleProtection() {\n    const snapshotName = this.selection.first().name;\n    const isProtected = this.selection.first().is_protected;\n    const finishedTask = new FinishedTask();\n    finishedTask.name = 'rbd/snap/edit';\n    finishedTask.metadata = {\n      pool_name: this.poolName,\n      image_name: this.rbdName,\n      snapshot_name: snapshotName\n    };\n    this.rbdService\n      .protectSnapshot(this.poolName, this.rbdName, snapshotName, !isProtected)\n      .toPromise()\n      .then((resp) => {\n        const executingTask = new ExecutingTask();\n        executingTask.name = finishedTask.name;\n        executingTask.metadata = finishedTask.metadata;\n        this.executingTasks.push(executingTask);\n        this.ngOnChanges();\n        this.taskManagerService.subscribe(\n          finishedTask.name,\n          finishedTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n      });\n  }\n\n  _asyncTask(task: string, taskName: string, snapshotName: string) {\n    const finishedTask = new FinishedTask();\n    finishedTask.name = taskName;\n    finishedTask.metadata = {\n      pool_name: this.poolName,\n      image_name: this.rbdName,\n      snapshot_name: snapshotName\n    };\n    this.rbdService[task](this.poolName, this.rbdName, snapshotName)\n      .toPromise()\n      .then(() => {\n        const executingTask = new ExecutingTask();\n        executingTask.name = finishedTask.name;\n        executingTask.metadata = finishedTask.metadata;\n        this.executingTasks.push(executingTask);\n        this.modalRef.hide();\n        this.ngOnChanges();\n        this.taskManagerService.subscribe(\n          executingTask.name,\n          executingTask.metadata,\n          (asyncFinishedTask: FinishedTask) => {\n            this.notificationService.notifyTask(asyncFinishedTask);\n          }\n        );\n      })\n      .catch((resp) => {\n        this.modalRef.content.stopLoadingSpinner();\n      });\n  }\n\n  rollbackModal() {\n    const snapshotName = this.selection.selected[0].name;\n    const initialState = {\n      titleText: 'RBD snapshot rollback',\n      buttonText: 'Rollback',\n      bodyTpl: this.rollbackTpl,\n      bodyData: {\n        snapName: `${this.poolName}/${this.rbdName}@${snapshotName}`\n      },\n      onSubmit: () => {\n        this._asyncTask('rollbackSnapshot', 'rbd/snap/rollback', snapshotName);\n      }\n    };\n\n    this.modalRef = this.modalService.show(ConfirmationModalComponent, { initialState });\n  }\n\n  deleteSnapshotModal() {\n    const snapshotName = this.selection.selected[0].name;\n    this.modalRef = this.modalService.show(DeletionModalComponent);\n    this.modalRef.content.setUp({\n      metaType: 'RBD snapshot',\n      pattern: snapshotName,\n      deletionMethod: () => this._asyncTask('deleteSnapshot', 'rbd/snap/delete', snapshotName),\n      modalRef: this.modalRef\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","export class RbdSnapshotModel {\n  id: number;\n  name: string;\n  size: number;\n  timestamp: string;\n  is_protected: boolean;\n\n  cdExecuting: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { BlockModule } from './block/block.module';\nimport { CephfsModule } from './cephfs/cephfs.module';\nimport { ClusterModule } from './cluster/cluster.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { PerformanceCounterModule } from './performance-counter/performance-counter.module';\nimport { PoolModule } from './pool/pool.module';\nimport { RgwModule } from './rgw/rgw.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClusterModule,\n    DashboardModule,\n    RgwModule,\n    PerformanceCounterModule,\n    BlockModule,\n    PoolModule,\n    CephfsModule,\n    SharedModule\n  ],\n  declarations: []\n})\nexport class CephModule { }\n","module.exports = \"<div class=\\\"chart-container\\\">\\n  <canvas baseChart\\n          #chartCanvas\\n          [datasets]=\\\"chart?.datasets\\\"\\n          [options]=\\\"chart?.options\\\"\\n          [chartType]=\\\"chart?.chartType\\\">\\n  </canvas>\\n  <div class=\\\"chartjs-tooltip\\\"\\n       #chartTooltip>\\n    <table></table>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  position: absolute;\\n  margin: auto;\\n  cursor: pointer;\\n  overflow: visible; }\\n\\ncanvas {\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.chartjs-tooltip {\\n  opacity: 0;\\n  position: absolute;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: white;\\n  border-radius: 3px;\\n  transition: all 0.1s ease;\\n  pointer-events: none;\\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !important;\\n  -webkit-transform: translate(-50%, 0);\\n  transform: translate(-50%, 0); }\\n\\n.chartjs-tooltip.transform-left {\\n    -webkit-transform: translate(-10%, 0);\\n            transform: translate(-10%, 0); }\\n\\n.chartjs-tooltip.transform-left::after {\\n      left: 10%; }\\n\\n.chartjs-tooltip.transform-right {\\n    -webkit-transform: translate(-90%, 0);\\n            transform: translate(-90%, 0); }\\n\\n.chartjs-tooltip.transform-right::after {\\n      left: 90%; }\\n\\n.chartjs-tooltip::after {\\n  content: ' ';\\n  position: absolute;\\n  top: 100%;\\n  /* At the bottom of the tooltip */\\n  left: 50%;\\n  margin-left: -5px;\\n  border-width: 5px;\\n  border-style: solid;\\n  border-color: black transparent transparent transparent; }\\n\\n::ng-deep .chartjs-tooltip-key {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 10px; }\\n\\n.chart-container {\\n  height: 500px;\\n  width: 100%; }\\n\"","import { Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\n\nimport { ChartTooltip } from '../../../shared/models/chart-tooltip';\n\n@Component({\n  selector: 'cd-cephfs-chart',\n  templateUrl: './cephfs-chart.component.html',\n  styleUrls: ['./cephfs-chart.component.scss']\n})\nexport class CephfsChartComponent implements OnChanges, OnInit {\n  @ViewChild('chartCanvas') chartCanvas: ElementRef;\n  @ViewChild('chartTooltip') chartTooltip: ElementRef;\n\n  @Input() mdsCounter: any;\n\n  lhsCounter = 'mds.inodes';\n  rhsCounter = 'mds_server.handle_client_request';\n\n  chart: any;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (_.isUndefined(this.mdsCounter)) {\n      return;\n    }\n\n    const getTitle = (ts) => {\n      return moment(ts, 'x').format('LTS');\n    };\n\n    const getStyleTop = (tooltip) => {\n      return tooltip.caretY - tooltip.height - 15 + 'px';\n    };\n\n    const getStyleLeft = (tooltip) => {\n      return tooltip.caretX + 'px';\n    };\n\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvas,\n      this.chartTooltip,\n      getStyleLeft,\n      getStyleTop\n    );\n    chartTooltip.getTitle = getTitle;\n    chartTooltip.checkOffset = true;\n\n    const lhsData = this.convert_timeseries(this.mdsCounter[this.lhsCounter]);\n    const rhsData = this.delta_timeseries(this.mdsCounter[this.rhsCounter]);\n\n    this.chart = {\n      datasets: [\n        {\n          label: this.lhsCounter,\n          yAxisID: 'LHS',\n          data: lhsData,\n          tension: 0.1\n        },\n        {\n          label: this.rhsCounter,\n          yAxisID: 'RHS',\n          data: rhsData,\n          tension: 0.1\n        }\n      ],\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: 'top'\n        },\n        scales: {\n          xAxes: [\n            {\n              position: 'top',\n              type: 'time',\n              time: {\n                displayFormats: {\n                  quarter: 'MMM YYYY'\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              id: 'LHS',\n              type: 'linear',\n              position: 'left',\n              min: 0\n            },\n            {\n              id: 'RHS',\n              type: 'linear',\n              position: 'right',\n              min: 0\n            }\n          ]\n        },\n        tooltips: {\n          enabled: false,\n          mode: 'index',\n          intersect: false,\n          position: 'nearest',\n          callbacks: {\n            // Pick the Unix timestamp of the first tooltip item.\n            title: function(tooltipItems, data) {\n              let ts = 0;\n              if (tooltipItems.length > 0) {\n                const item = tooltipItems[0];\n                ts = data.datasets[item.datasetIndex].data[item.index].x;\n              }\n              return ts;\n            }\n          },\n          custom: (tooltip) => {\n            chartTooltip.customTooltips(tooltip);\n          }\n        }\n      },\n      chartType: 'line'\n    };\n  }\n\n  ngOnChanges() {\n    if (!this.chart) {\n      return;\n    }\n\n    const lhsData = this.convert_timeseries(this.mdsCounter[this.lhsCounter]);\n    const rhsData = this.delta_timeseries(this.mdsCounter[this.rhsCounter]);\n\n    this.chart.datasets[0].data = lhsData;\n    this.chart.datasets[1].data = rhsData;\n  }\n\n  // Convert ceph-mgr's time series format (list of 2-tuples\n  // with seconds-since-epoch timestamps) into what chart.js\n  // can handle (list of objects with millisecs-since-epoch\n  // timestamps)\n  convert_timeseries(sourceSeries) {\n    const data = [];\n    _.each(sourceSeries, (dp) => {\n      data.push({\n        x: dp[0] * 1000,\n        y: dp[1]\n      });\n    });\n\n    return data;\n  }\n\n  delta_timeseries(sourceSeries) {\n    let i;\n    let prev = sourceSeries[0];\n    const result = [];\n    for (i = 1; i < sourceSeries.length; i++) {\n      const cur = sourceSeries[i];\n      const tdelta = cur[0] - prev[0];\n      const vdelta = cur[1] - prev[1];\n      const rate = vdelta / tdelta;\n\n      result.push({\n        x: cur[0] * 1000,\n        y: rate\n      });\n\n      prev = cur;\n    }\n    return result;\n  }\n}\n","module.exports = \"<cd-view-cache [status]=\\\"viewCacheStatus\\\"></cd-view-cache>\\n\\n<cd-table [data]=\\\"clients.data\\\"\\n          [columns]=\\\"clients.columns\\\"\\n          (fetchData)=\\\"refresh()\\\"\\n          [header]=\\\"false\\\">\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\n\nimport { CephfsService } from '../../../shared/api/cephfs.service';\nimport { ViewCacheStatus } from '../../../shared/enum/view-cache-status.enum';\n\n@Component({\n  selector: 'cd-cephfs-clients',\n  templateUrl: './cephfs-clients.component.html',\n  styleUrls: ['./cephfs-clients.component.scss']\n})\nexport class CephfsClientsComponent implements OnInit {\n  @Input() id: number;\n\n  clients: any;\n  viewCacheStatus: ViewCacheStatus;\n\n  constructor(private cephfsService: CephfsService) {}\n\n  ngOnInit() {\n    this.clients = {\n      columns: [\n        { prop: 'id' },\n        { prop: 'type' },\n        { prop: 'state' },\n        { prop: 'version' },\n        { prop: 'hostname', name: 'Host' },\n        { prop: 'root' }\n      ],\n      data: []\n    };\n\n    this.clients.data = [];\n    this.viewCacheStatus = ViewCacheStatus.ValueNone;\n  }\n\n  refresh() {\n    this.cephfsService.getClients(this.id).subscribe((data: any) => {\n      this.viewCacheStatus = data.status;\n      this.clients.data = data.data;\n    });\n  }\n}\n","module.exports = \"<tabset *ngIf=\\\"selectedItem\\\">\\n  <tab i18n-heading\\n       heading=\\\"Details\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <fieldset>\\n          <legend i18n>Ranks</legend>\\n\\n          <cd-table [data]=\\\"ranks.data\\\"\\n                    [columns]=\\\"ranks.columns\\\"\\n                    (fetchData)=\\\"refresh()\\\"\\n                    [toolHeader]=\\\"false\\\">\\n          </cd-table>\\n        </fieldset>\\n\\n        <cd-table-key-value [data]=\\\"standbys\\\">\\n        </cd-table-key-value>\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <fieldset>\\n          <legend i18n>Pools</legend>\\n\\n          <cd-table [data]=\\\"pools.data\\\"\\n                    [columns]=\\\"pools.columns\\\"\\n                    [toolHeader]=\\\"false\\\">\\n          </cd-table>\\n        </fieldset>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\"\\n         *ngFor=\\\"let mdsCounter of objectValues(mdsCounters); trackBy: trackByFn\\\">\\n      <div class=\\\"cold-md-12\\\">\\n        <cd-cephfs-chart [mdsCounter]=\\\"mdsCounter\\\"></cd-cephfs-chart>\\n      </div>\\n    </div>\\n  </tab>\\n  <tab i18n-heading\\n       heading=\\\"Clients: {{ clientCount }}\\\"\\n       (select)=\\\"clientsSelect=true\\\"\\n       (deselect)=\\\"clientsSelect=false\\\">\\n    <cd-cephfs-clients [id]=\\\"id\\\"\\n                       *ngIf=\\\"clientsSelect\\\">\\n    </cd-cephfs-clients>\\n  </tab>\\n</tabset>\\n\\n<!-- templates -->\\n<ng-template #poolUsageTpl\\n             let-row=\\\"row\\\">\\n  <cd-usage-bar [totalBytes]=\\\"row.size\\\"\\n                [usedBytes]=\\\"row.used\\\"></cd-usage-bar>\\n</ng-template>\\n\\n<ng-template #activityTmpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  {{ row.state === 'standby-replay' ? 'Evts' : 'Reqs' }}: {{ value | dimless }} /s\\n</ng-template>\\n\"","module.exports = \".progress {\\n  margin-bottom: 0px; }\\n\"","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { CephfsService } from '../../../shared/api/cephfs.service';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { DimlessBinaryPipe } from '../../../shared/pipes/dimless-binary.pipe';\nimport { DimlessPipe } from '../../../shared/pipes/dimless.pipe';\n\n@Component({\n  selector: 'cd-cephfs-detail',\n  templateUrl: './cephfs-detail.component.html',\n  styleUrls: ['./cephfs-detail.component.scss']\n})\nexport class CephfsDetailComponent implements OnChanges, OnInit {\n  @ViewChild('poolUsageTpl') poolUsageTpl: TemplateRef<any>;\n  @ViewChild('activityTmpl') activityTmpl: TemplateRef<any>;\n\n  @Input() selection: CdTableSelection;\n\n  selectedItem: any;\n\n  id: number;\n  name: string;\n  ranks: any;\n  pools: any;\n  standbys = [];\n  clientCount: number;\n  mdsCounters = {};\n\n  objectValues = Object.values;\n  clientsSelect = false;\n\n  constructor(\n    private cephfsService: CephfsService,\n    private dimlessBinary: DimlessBinaryPipe,\n    private dimless: DimlessPipe\n  ) {}\n\n  ngOnChanges() {\n    if (this.selection.hasSelection) {\n      this.selectedItem = this.selection.first();\n\n      if (this.id !== this.selectedItem.id) {\n        this.id = this.selectedItem.id;\n        this.ranks.data = [];\n        this.pools.data = [];\n        this.standbys = [];\n        this.mdsCounters = {};\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.ranks = {\n      columns: [\n        { prop: 'rank' },\n        { prop: 'state' },\n        { prop: 'mds', name: 'Daemon' },\n        { prop: 'activity', cellTemplate: this.activityTmpl },\n        { prop: 'dns', name: 'Dentries', pipe: this.dimless },\n        { prop: 'inos', name: 'Inodes', pipe: this.dimless }\n      ],\n      data: []\n    };\n\n    this.pools = {\n      columns: [\n        { prop: 'pool' },\n        { prop: 'type' },\n        { prop: 'size', pipe: this.dimlessBinary },\n        {\n          name: 'Usage',\n          cellTemplate: this.poolUsageTpl,\n          comparator: (valueA, valueB, rowA, rowB, sortDirection) => {\n            const valA = rowA.used / rowA.avail;\n            const valB = rowB.used / rowB.avail;\n\n            if (valA === valB) {\n              return 0;\n            }\n\n            if (valA > valB) {\n              return 1;\n            } else {\n              return -1;\n            }\n          }\n        }\n      ],\n      data: []\n    };\n  }\n\n  refresh() {\n    this.cephfsService.getCephfs(this.id).subscribe((data: any) => {\n      this.ranks.data = data.cephfs.ranks;\n      this.pools.data = data.cephfs.pools;\n      this.pools.data.forEach((pool) => {\n        pool.size = pool.used + pool.avail;\n      });\n      this.standbys = [\n        {\n          key: 'Standby daemons',\n          value: data.standbys.map((value) => value.name).join(', ')\n        }\n      ];\n      this.name = data.cephfs.name;\n      this.clientCount = data.cephfs.client_count;\n    });\n\n    this.cephfsService.getMdsCounters(this.id).subscribe((data) => {\n      _.each(this.mdsCounters, (value, key) => {\n        if (data[key] === undefined) {\n          delete this.mdsCounters[key];\n        }\n      });\n\n      _.each(data, (mdsData: any, mdsName) => {\n        mdsData.name = mdsName;\n        this.mdsCounters[mdsName] = mdsData;\n      });\n    });\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\">Filesystems</li>\\n  </ol>\\n</nav>\\n\\n<cd-table [data]=\\\"filesystems\\\"\\n          columnMode=\\\"flex\\\"\\n          [columns]=\\\"columns\\\"\\n          (fetchData)=\\\"loadFilesystems()\\\"\\n          identifier=\\\"id\\\"\\n          forceIdentifier=\\\"true\\\"\\n          selectionType=\\\"single\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\">\\n  <cd-cephfs-detail cdTableDetail\\n             [selection]=\\\"selection\\\">\\n  </cd-cephfs-detail>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { CephfsService } from '../../../shared/api/cephfs.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-cephfs-list',\n  templateUrl: './cephfs-list.component.html',\n  styleUrls: ['./cephfs-list.component.scss']\n})\nexport class CephfsListComponent implements OnInit {\n  columns: CdTableColumn[];\n  filesystems: any = [];\n  selection = new CdTableSelection();\n\n  constructor(private cephfsService: CephfsService) {}\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Name',\n        prop: 'mdsmap.fs_name',\n        flexGrow: 2\n      },\n      {\n        name: 'Created',\n        prop: 'mdsmap.created',\n        flexGrow: 2\n      },\n      {\n        name: 'Enabled',\n        prop: 'mdsmap.enabled',\n        flexGrow: 1\n      }\n    ];\n  }\n\n  loadFilesystems() {\n    this.cephfsService.list().subscribe((resp: any[]) => {\n      this.filesystems = resp;\n    });\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { AppRoutingModule } from '../../app-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CephfsChartComponent } from './cephfs-chart/cephfs-chart.component';\nimport { CephfsClientsComponent } from './cephfs-clients/cephfs-clients.component';\nimport { CephfsDetailComponent } from './cephfs-detail/cephfs-detail.component';\nimport { CephfsListComponent } from './cephfs-list/cephfs-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    AppRoutingModule,\n    ChartsModule,\n    ProgressbarModule.forRoot(),\n    TabsModule.forRoot()\n  ],\n  declarations: [\n    CephfsDetailComponent,\n    CephfsClientsComponent,\n    CephfsChartComponent,\n    CephfsListComponent\n  ]\n})\nexport class CephfsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { PerformanceCounterModule } from '../performance-counter/performance-counter.module';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { HostsComponent } from './hosts/hosts.component';\nimport { MonitorComponent } from './monitor/monitor.component';\nimport { OsdDetailsComponent } from './osd/osd-details/osd-details.component';\nimport { OsdFlagsModalComponent } from './osd/osd-flags-modal/osd-flags-modal.component';\nimport { OsdListComponent } from './osd/osd-list/osd-list.component';\nimport { OsdPerformanceHistogramComponent } from './osd/osd-performance-histogram/osd-performance-histogram.component';\nimport { OsdScrubModalComponent } from './osd/osd-scrub-modal/osd-scrub-modal.component';\nimport { OsdInOutComponent } from './osd/osd-in-out-modal/osd-in-out-modal.component';\nimport { CrushmapComponent } from './crushmap/crushmap.component';\n\n@NgModule({\n  entryComponents: [OsdDetailsComponent, OsdScrubModalComponent, OsdFlagsModalComponent, OsdInOutComponent],\n  imports: [\n    CommonModule,\n    PerformanceCounterModule,\n    TabsModule.forRoot(),\n    SharedModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  declarations: [\n    HostsComponent,\n    MonitorComponent,\n    ConfigurationComponent,\n    OsdListComponent,\n    OsdDetailsComponent,\n    OsdPerformanceHistogramComponent,\n    OsdScrubModalComponent,\n    OsdFlagsModalComponent,\n    OsdInOutComponent,\n    CrushmapComponent\n  ]\n})\nexport class ClusterModule {}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\">Cluster</li>\\n    <li class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Configuration Documentation</li>\\n  </ol>\\n</nav>\\n<cd-table [data]=\\\"data | filter:filters\\\"\\n          (fetchData)=\\\"getConfigurationList()\\\"\\n          [columns]=\\\"columns\\\"\\n          selectionType=\\\"single\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\">\\n  <div class=\\\"table-actions form-inline\\\">\\n    <div class=\\\"form-group filter\\\"\\n         *ngFor=\\\"let filter of filters\\\">\\n      <label>{{ filter.label }}: </label>\\n      <select class=\\\"form-control input-sm\\\"\\n              [(ngModel)]=\\\"filter.value\\\"\\n              (ngModelChange)=\\\"updateFilter()\\\">\\n        <option *ngFor=\\\"let opt of filter.options\\\">{{ opt }}</option>\\n      </select>\\n    </div>\\n  </div>\\n  <tabset cdTableDetail *ngIf=\\\"selection.hasSingleSelection\\\">\\n    <tab i18n-heading\\n         heading=\\\"Details\\\">\\n      <cd-table-key-value [data]=\\\"selection.first()\\\" [autoReload]=\\\"false\\\">\\n      </cd-table-key-value>\\n    </tab>\\n  </tabset>\\n  <ng-template #confValTpl let-value=\\\"value\\\">\\n    <span *ngIf=\\\"value\\\">\\n      <span *ngFor=\\\"let conf of value; last as isLast\\\">\\n        {{ conf.section }}: {{ conf.value }}{{ !isLast ? \\\",\\\" : \\\"\\\" }}<br/>\\n      </span>\\n    </span>\\n  </ng-template>\\n  <ng-template #confFlagTpl let-value=\\\"value\\\">\\n    <span *ngIf=\\\"value !== ''\\\">\\n      <span *ngFor=\\\"let flag of value; last as isLast\\\">\\n        <span title=\\\"{{ flags[flag] }}\\\">\\n          {{ flag | uppercase }}{{ !isLast ? \\\",\\\" : \\\"\\\" }}<br/>\\n        </span>\\n      </span>\\n    </span>\\n  </ng-template>\\n</cd-table>\\n\"","module.exports = \".filter {\\n  padding-right: 8px; }\\n\\n::ng-deep datatable-body-cell.wrap {\\n  word-break: break-all; }\\n\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ConfigurationService } from '../../../shared/api/configuration.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n  data = [];\n  columns: CdTableColumn[];\n  selection = new CdTableSelection();\n  filters = [\n    {\n      label: 'Level',\n      prop: 'level',\n      value: 'basic',\n      options: ['basic', 'advanced', 'dev'],\n      applyFilter: (row, value) => {\n        enum Level {\n          basic = 0,\n          advanced = 1,\n          dev = 2\n        }\n\n        const levelVal = Level[value];\n\n        return Level[row.level] <= levelVal;\n      }\n    },\n    {\n      label: 'Service',\n      prop: 'services',\n      value: 'any',\n      options: ['any', 'mon', 'mgr', 'osd', 'mds', 'common', 'mds_client', 'rgw'],\n      applyFilter: (row, value) => {\n        if (value === 'any') {\n          return true;\n        }\n\n        return row.services.includes(value);\n      }\n    },\n    {\n      label: 'Source',\n      prop: 'source',\n      value: 'any',\n      options: ['any', 'mon'],\n      applyFilter: (row, value) => {\n        if (value === 'any') {\n          return true;\n        }\n\n        if (!row.hasOwnProperty('source')) {\n          return false;\n        }\n\n        return row.source.includes(value);\n      }\n    }\n  ];\n  flags = {\n    runtime: 'The value can be updated at runtime.',\n    no_mon_update:\n      'Daemons/clients do not pull this value from the monitor config database. ' +\n      'We disallow setting this option via \\'ceph config set ...\\'. This option should be ' +\n      'configured via ceph.conf or via the command line.',\n    startup: 'Option takes effect only during daemon startup.',\n    cluster_create: 'Option only affects cluster creation.',\n    create: 'Option only affects daemon creation.'\n  };\n\n  @ViewChild('confValTpl') public confValTpl: TemplateRef<any>;\n  @ViewChild('confFlagTpl') public confFlagTpl: TemplateRef<any>;\n\n  constructor(private configurationService: ConfigurationService) {}\n\n  ngOnInit() {\n    this.columns = [\n      { flexGrow: 2, canAutoResize: true, prop: 'name' },\n      {\n        flexGrow: 2,\n        prop: 'value',\n        name: 'Current value',\n        cellClass: 'wrap',\n        cellTemplate: this.confValTpl\n      },\n      { flexGrow: 1, prop: 'source' },\n      { flexGrow: 2, prop: 'desc', name: 'Description', cellClass: 'wrap' },\n      { flexGrow: 2, prop: 'long_desc', name: 'Long description', cellClass: 'wrap' },\n      {\n        flexGrow: 2,\n        prop: 'flags',\n        name: 'Flags',\n        cellClass: 'wrap',\n        cellTemplate: this.confFlagTpl\n      },\n      { flexGrow: 1, prop: 'type' },\n      { flexGrow: 1, prop: 'level' },\n      { flexGrow: 1, prop: 'default', cellClass: 'wrap' },\n      { flexGrow: 2, prop: 'daemon_default', name: 'Daemon default' },\n      { flexGrow: 1, prop: 'tags', name: 'Tags' },\n      { flexGrow: 1, prop: 'services', name: 'Services' },\n      { flexGrow: 1, prop: 'see_also', name: 'See_also', cellClass: 'wrap' },\n      { flexGrow: 1, prop: 'max', name: 'Max' },\n      { flexGrow: 1, prop: 'min', name: 'Min' }\n    ];\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  getConfigurationList() {\n    this.configurationService.getConfigData().subscribe((data: any) => {\n      this.data = data;\n    });\n  }\n\n  updateFilter() {\n    this.data = [...this.data];\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\">Cluster</li>\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\" i18n>CRUSH map</li>\\n  </ol>\\n</nav>\\n\\n<p>\\n  crushmap works!\\n</p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cd-crushmap',\n  templateUrl: './crushmap.component.html',\n  styleUrls: ['./crushmap.component.scss']\n})\nexport class CrushmapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Cluster</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Hosts</li>\\n  </ol>\\n</nav>\\n<cd-table [data]=\\\"hosts\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          (fetchData)=\\\"getHosts()\\\">\\n  <ng-template #servicesTpl let-value=\\\"value\\\">\\n    <span *ngFor=\\\"let service of value; last as isLast\\\">\\n      <a [routerLink]=\\\"[service.cdLink]\\\"\\n         *ngIf=\\\"service.canRead\\\">{{ service.type }}.{{ service.id }}</a>\\n      <span *ngIf=\\\"!service.canRead\\\">{{ service.type }}.{{ service.id }}</span>\\n      {{ !isLast ? \\\", \\\" : \\\"\\\" }}\\n    </span>\\n  </ng-template>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport { HostService } from '../../../shared/api/host.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { Permissions } from '../../../shared/models/permissions';\nimport { CephShortVersionPipe } from '../../../shared/pipes/ceph-short-version.pipe';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-hosts',\n  templateUrl: './hosts.component.html',\n  styleUrls: ['./hosts.component.scss']\n})\nexport class HostsComponent implements OnInit {\n  permissions: Permissions;\n  columns: Array<CdTableColumn> = [];\n  hosts: Array<object> = [];\n  isLoadingHosts = false;\n\n  @ViewChild('servicesTpl') public servicesTpl: TemplateRef<any>;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private hostService: HostService,\n    private cephShortVersionPipe: CephShortVersionPipe\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Hostname',\n        prop: 'hostname',\n        flexGrow: 1\n      },\n      {\n        name: 'Services',\n        prop: 'services',\n        flexGrow: 3,\n        cellTemplate: this.servicesTpl\n      },\n      {\n        name: 'Version',\n        prop: 'ceph_version',\n        flexGrow: 1,\n        pipe: this.cephShortVersionPipe\n      }\n    ];\n  }\n\n  getHosts() {\n    if (this.isLoadingHosts) {\n      return;\n    }\n    const typeToPermissionKey = {\n      mds: 'cephfs',\n      mon: 'monitor',\n      osd: 'osd',\n      rgw: 'rgw',\n      'rbd-mirror': 'rbdMirroring',\n      mgr: 'manager'\n    };\n    this.isLoadingHosts = true;\n    this.hostService\n      .list()\n      .then((resp) => {\n        resp.map((host) => {\n          host.services.map((service) => {\n            service.cdLink = `/perf_counters/${service.type}/${service.id}`;\n            const permissionKey = typeToPermissionKey[service.type];\n            service.canRead = this.permissions[permissionKey].read;\n            return service;\n          });\n          return host;\n        });\n        this.hosts = resp;\n        this.isLoadingHosts = false;\n      })\n      .catch(() => {\n        this.isLoadingHosts = false;\n      });\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Cluster</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Monitors</li>\\n  </ol>\\n</nav>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <fieldset>\\n      <legend i18n>Status</legend>\\n      <table class=\\\"table table-striped\\\"\\n             *ngIf=\\\"mon_status\\\">\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">Cluster ID</td>\\n          <td>{{ mon_status.monmap.fsid }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">monmap modified</td>\\n          <td>{{ mon_status.monmap.modified }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">monmap epoch</td>\\n          <td>{{ mon_status.monmap.epoch }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">quorum con</td>\\n          <td>{{ mon_status.features.quorum_con }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">quorum mon</td>\\n          <td>{{ mon_status.features.quorum_mon }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">required con</td>\\n          <td>{{ mon_status.features.required_con }}</td>\\n        </tr>\\n        <tr>\\n          <td i18n\\n              class=\\\"bold\\\">required mon</td>\\n          <td>{{ mon_status.features.required_mon }}</td>\\n        </tr>\\n      </table>\\n    </fieldset>\\n  </div>\\n\\n  <div class=\\\"col-md-8\\\">\\n    <fieldset>\\n      <legend i18n\\n              class=\\\"in-quorum\\\">In Quorum</legend>\\n      <cd-table [data]=\\\"inQuorum.data\\\"\\n                [columns]=\\\"inQuorum.columns\\\">\\n      </cd-table>\\n\\n      <legend i18n\\n              class=\\\"in-quorum\\\">Not In Quorum</legend>\\n      <cd-table [data]=\\\"notInQuorum.data\\\"\\n                (fetchData)=\\\"refresh()\\\"\\n                [columns]=\\\"notInQuorum.columns\\\">\\n      </cd-table>\\n    </fieldset>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { MonitorService } from '../../../shared/api/monitor.service';\nimport { CellTemplate } from '../../../shared/enum/cell-template.enum';\n\n@Component({\n  selector: 'cd-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.scss']\n})\nexport class MonitorComponent {\n\n  mon_status: any;\n  inQuorum: any;\n  notInQuorum: any;\n\n  interval: any;\n  sparklineStyle = {\n    height: '30px',\n    width: '50%'\n  };\n\n  constructor(private monitorService: MonitorService) {\n    this.inQuorum = {\n      columns: [\n        { prop: 'name', name: 'Name', cellTransformation: CellTemplate.routerLink },\n        { prop: 'rank', name: 'Rank' },\n        { prop: 'public_addr', name: 'Public Address' },\n        {\n          prop: 'cdOpenSessions',\n          name: 'Open Sessions',\n          cellTransformation: CellTemplate.sparkline\n        }\n      ],\n      data: []\n    };\n\n    this.notInQuorum = {\n      columns: [\n        { prop: 'name', name: 'Name', cellTransformation: CellTemplate.routerLink },\n        { prop: 'rank', name: 'Rank' },\n        { prop: 'public_addr', name: 'Public Address' }\n      ],\n      data: []\n    };\n  }\n\n  refresh() {\n    this.monitorService.getMonitor().subscribe((data: any) => {\n      data.in_quorum.map((row) => {\n        row.cdOpenSessions = row.stats.num_sessions.map(i => i[1]);\n        row.cdLink = '/perf_counters/mon/' + row.name;\n        row.cdParams = {fromLink: '/monitor'};\n        return row;\n      });\n\n      data.out_quorum.map((row) => {\n        row.cdLink = '/perf_counters/mon/' + row.name;\n        row.cdParams = {fromLink: '/monitor'};\n        return row;\n      });\n\n      this.inQuorum.data = [...data.in_quorum];\n      this.notInQuorum.data = [...data.out_quorum];\n      this.mon_status = data.mon_status;\n    });\n  }\n}\n","module.exports = \"<tabset *ngIf=\\\"selection.hasSingleSelection\\\">\\n  <tab heading=\\\"Attributes (OSD map)\\\">\\n    <cd-table-key-value *ngIf=\\\"osd.loaded\\\"\\n                        [data]=\\\"osd.details.osd_map\\\">\\n    </cd-table-key-value>\\n  </tab>\\n  <tab heading=\\\"Metadata\\\">\\n    <cd-table-key-value *ngIf=\\\"osd.loaded\\\"\\n                        (fetchData)=\\\"osd.autoRefresh()\\\"\\n                        [data]=\\\"osd.details.osd_metadata\\\">\\n    </cd-table-key-value>\\n  </tab>\\n  <tab heading=\\\"Performance counter\\\">\\n    <cd-table-performance-counter *ngIf=\\\"osd.loaded\\\"\\n                                  serviceType=\\\"osd\\\"\\n                                  [serviceId]=\\\"osd.id\\\">\\n    </cd-table-performance-counter>\\n  </tab>\\n  <tab heading=\\\"Histogram\\\">\\n    <h3 *ngIf=\\\"osd.loaded && osd.histogram_failed\\\">\\n      Histogram not available -> <span class=\\\"text-warning\\\">{{ osd.histogram_failed }}</span>\\n    </h3>\\n    <div class=\\\"row\\\" *ngIf=\\\"osd.loaded && osd.details.histogram\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h4>Writes</h4>\\n        <cd-osd-performance-histogram [histogram]=\\\"osd.details.histogram.osd.op_w_latency_in_bytes_histogram\\\">\\n        </cd-osd-performance-histogram>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <h4>Reads</h4>\\n        <cd-osd-performance-histogram [histogram]=\\\"osd.details.histogram.osd.op_r_latency_out_bytes_histogram\\\">\\n        </cd-osd-performance-histogram>\\n      </div>\\n    </div>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { OsdService } from '../../../../shared/api/osd.service';\nimport { CdTableSelection } from '../../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-osd-details',\n  templateUrl: './osd-details.component.html',\n  styleUrls: ['./osd-details.component.scss']\n})\nexport class OsdDetailsComponent implements OnChanges {\n  @Input() selection: CdTableSelection;\n\n  osd: any;\n\n  constructor(private osdService: OsdService) {}\n\n  ngOnChanges() {\n    this.osd = {\n      loaded: false\n    };\n    if (this.selection.hasSelection) {\n      this.osd = this.selection.first();\n      this.osd.autoRefresh = () => {\n        this.refresh();\n      };\n      this.refresh();\n    }\n  }\n\n  refresh() {\n    this.osdService.getDetails(this.osd.tree.id)\n      .subscribe((data: any) => {\n        this.osd.details = data;\n        if (!_.isObject(data.histogram)) {\n          this.osd.histogram_failed = data.histogram;\n          this.osd.details.histogram = undefined;\n        }\n        this.osd.loaded = true;\n      });\n  }\n}\n","module.exports = \"<cd-modal [modalRef]=\\\"bsModalRef\\\">\\n  <ng-container class=\\\"modal-title\\\"\\n                i18n>Cluster-wide OSD Flags\\n  </ng-container>\\n\\n  <ng-container class=\\\"modal-content\\\">\\n    <form name=\\\"osdFlagsForm\\\"\\n          #formDir=\\\"ngForm\\\"\\n          [formGroup]=\\\"osdFlagsForm\\\"\\n          novalidate>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"checkbox checkbox-primary\\\"\\n             *ngFor=\\\"let flag of flags; let last = last\\\">\\n          <input type=\\\"checkbox\\\"\\n                 [checked]=\\\"flag.value\\\"\\n                 (change)=\\\"flag.value = !flag.value\\\"\\n                 [name]=\\\"flag.code\\\"\\n                 [id]=\\\"flag.code\\\"\\n                 [disabled]=\\\"flag.disabled\\\">\\n          <label [for]=\\\"flag.code\\\"\\n                 ng-class=\\\"['tc_' + key]\\\">\\n            <strong>{{ flag.name }}</strong>\\n            <br>\\n            <span class=\\\"text-muted\\\">{{ flag.description }}</span>\\n          </label>\\n          <hr class=\\\"oa-hr-small\\\"\\n              *ngIf=\\\"!last\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button (submitAction)=\\\"submitAction()\\\"\\n                            [form]=\\\"osdFlagsForm\\\"\\n                            i18n>\\n            Submit\\n          </cd-submit-button>\\n\\n          <button class=\\\"btn btn-link btn-sm\\\"\\n                  (click)=\\\"bsModalRef.hide()\\\"\\n                  i18n>\\n            Cancel\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </ng-container>\\n</cd-modal>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport * as _ from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { OsdService } from '../../../../shared/api/osd.service';\nimport { NotificationType } from '../../../../shared/enum/notification-type.enum';\nimport { NotificationService } from '../../../../shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-flags-modal',\n  templateUrl: './osd-flags-modal.component.html',\n  styleUrls: ['./osd-flags-modal.component.scss']\n})\nexport class OsdFlagsModalComponent implements OnInit {\n  osdFlagsForm = new FormGroup({});\n\n  allFlags = {\n    noin: {\n      code: 'noin',\n      name: 'No In',\n      value: false,\n      description: 'OSDs that were previously marked out will not be marked back in when they start'\n    },\n    noout: {\n      code: 'noout',\n      name: 'No Out',\n      value: false,\n      description: 'OSDs will not automatically be marked out after the configured interval'\n    },\n    noup: {\n      code: 'noup',\n      name: 'No Up',\n      value: false,\n      description: 'OSDs are not allowed to start'\n    },\n    nodown: {\n      code: 'nodown',\n      name: 'No Down',\n      value: false,\n      description:\n        'OSD failure reports are being ignored, such that the monitors will not mark OSDs down'\n    },\n    pause: {\n      code: 'pause',\n      name: 'Pause',\n      value: false,\n      description: 'Pauses reads and writes'\n    },\n    noscrub: {\n      code: 'noscrub',\n      name: 'No Scrub',\n      value: false,\n      description: 'Scrubbing is disabled'\n    },\n    'nodeep-scrub': {\n      code: 'nodeep-scrub',\n      name: 'No Deep Scrub',\n      value: false,\n      description: 'Deep Scrubbing is disabled'\n    },\n    nobackfill: {\n      code: 'nobackfill',\n      name: 'No Backfill',\n      value: false,\n      description: 'Backfilling of PGs is suspended'\n    },\n    norecover: {\n      code: 'norecover',\n      name: 'No Recover',\n      value: false,\n      description: 'Recovery of PGs is suspended'\n    },\n    sortbitwise: {\n      code: 'sortbitwise',\n      name: 'Bitwise Sort',\n      value: false,\n      description: 'Use bitwise sort',\n      disabled: true\n    },\n    purged_snapdirs: {\n      code: 'purged_snapdirs',\n      name: 'Purged Snapdirs',\n      value: false,\n      description: 'OSDs have converted snapsets',\n      disabled: true\n    },\n    recovery_deletes: {\n      code: 'recovery_deletes',\n      name: 'Recovery Deletes',\n      value: false,\n      description: 'Deletes performed during recovery instead of peering',\n      disabled: true\n    }\n  };\n  flags: any[];\n  unknownFlags: string[] = [];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private osdService: OsdService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit() {\n    this.osdService.getFlags().subscribe((res: string[]) => {\n      res.forEach((value) => {\n        if (this.allFlags[value]) {\n          this.allFlags[value].value = true;\n        } else {\n          this.unknownFlags.push(value);\n        }\n      });\n      this.flags = _.toArray(this.allFlags);\n    });\n  }\n\n  submitAction() {\n    const newFlags = this.flags\n      .filter((flag) => flag.value)\n      .map((flag) => flag.code)\n      .concat(this.unknownFlags);\n\n    this.osdService.updateFlags(newFlags).subscribe(\n      () => {\n        this.notificationService.show(\n          NotificationType.success,\n          'OSD Flags were updated successfully.',\n          'OSD Flags'\n        );\n        this.bsModalRef.hide();\n      },\n      () => {\n        this.bsModalRef.hide();\n      }\n    );\n  }\n}\n","module.exports = \"<cd-modal [modalRef]=\\\"bsModalRef\\\">\\n  <ng-container class=\\\"modal-title\\\" i18n>\\n    OSDs {{ mode === 'in' ? 'in' : 'out' }}\\n  </ng-container>\\n\\n  <ng-container class=\\\"modal-content\\\">\\n    <form name=\\\"inoutForm\\\" class=\\\"form-horizontal\\\" #formDir=\\\"ngForm\\\" [formGroup]=\\\"inoutForm\\\" novalidate>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"selected.length === 1\\\">\\n          <p i18n>\\n            You are about to mark OSD \\n            <strong>{{ selected[0].id }}</strong>\\n            as {{mode === 'in' ? 'in ' : 'out'}}.\\n          </p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <cd-submit-button (submitAction)=\\\"submit()\\\" [form]=\\\"inoutForm\\\" i18n>\\n          Submit\\n        </cd-submit-button>\\n\\n        <button class=\\\"btn btn-link btn-sm\\\" (click)=\\\"bsModalRef.hide()\\\" i18n>\\n          Cancel\\n        </button>\\n      </div>\\n    </form>\\n  </ng-container>\\n</cd-modal>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { OsdService } from '../../../../shared/api/osd.service';\nimport { NotificationType } from '../../../../shared/enum/notification-type.enum';\nimport { NotificationService } from '../../../../shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-in-out',\n  templateUrl: './osd-in-out-modal.component.html',\n  styleUrls: ['./osd-in-out-modal.component.scss']\n})\nexport class OsdInOutComponent implements OnInit {\n\n  mode: string;\n  inoutForm: FormGroup;\n  selected = [];\n\n  constructor(\n    private osdService: OsdService,\n    private notificationService: NotificationService,\n    private bsModalRef: BsModalRef,\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.inoutForm = new FormGroup({});\n  }\n\n  submit() {\n    const id = this.selected[0].id;\n\n    if (this.mode === 'in') {\n      this.osdService.mark_in(id).subscribe((res) => {\n        this.notificationService.show(\n          NotificationType.success,\n          `Osd ${id} was marked as 'in'`\n        );\n\n        this.bsModalRef.hide();\n      }, () => {\n        this.bsModalRef.hide();\n      });\n    }\n    if (this.mode === \"out\") {\n      this.osdService.mark_out(id).subscribe((res) => {\n        this.notificationService.show(\n          NotificationType.success,\n          `Osd ${id} was marked as 'out'`\n        );\n\n        this.bsModalRef.hide();\n      }, () => {\n        this.bsModalRef.hide();\n      });\n    }\n  }\n\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">Cluster</li>\\r\\n    <li class=\\\"breadcrumb-item active\\\">OSDs</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n<cd-table [data]=\\\"osds\\\" (fetchData)=\\\"getOsdList()\\\" [columns]=\\\"columns\\\" selectionType=\\\"single\\\" (updateSelection)=\\\"updateSelection($event)\\\"\\r\\n  [updateSelectionOnRefresh]=\\\"false\\\">\\r\\n  <div class=\\\"table-actions btn-toolbar\\\" *ngIf=\\\"permission.update\\\">\\r\\n    <div class=\\\"btn-group\\\" dropdown>\\r\\n      <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-sm btn-primary dropdown-toggle tc_scrub_toggle\\\" [ngClass]=\\\"{disabled: !tableComponent.selection.hasSelection}\\\">\\r\\n        <ng-container i18n> Perform Task</ng-container>\\r\\n        <span class=\\\"caret\\\"></span>\\r\\n      </button>\\r\\n      <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n        <li role=\\\"menuitem\\\" (click)=\\\"scrubAction(false)\\\">\\r\\n          <a>\\r\\n            <i class=\\\"fa fa-fw fa-stethoscope\\\"></i>\\r\\n            <ng-container i18n>Scrub</ng-container>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li role=\\\"menuitem\\\" (click)=\\\"scrubAction(true)\\\">\\r\\n          <a>\\r\\n            <i class=\\\"fa fa-fw fa-stethoscope\\\"></i>\\r\\n            <ng-container i18n>Deep Scrub</ng-container>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li role=\\\"menuitem\\\" (click)=\\\"in_out('in')\\\">\\r\\n          <a>\\r\\n            <i class=\\\"fa fa-angle-double-right\\\"></i>\\r\\n            <ng-container i18n>In</ng-container>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li role=\\\"menuitem\\\" (click)=\\\"in_out('out')\\\">\\r\\n          <a>\\r\\n            <i class=\\\"fa fa-angle-double-left\\\"></i>\\r\\n            <ng-container i18n>Out</ng-container>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-sm btn-default btn-label tc_configureCluster\\\" type=\\\"button\\\" (click)=\\\"configureClusterAction()\\\">\\r\\n      <i class=\\\"fa fa-fw fa-cog\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <ng-container i18n>Set Cluster-wide OSD Flags</ng-container>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <cd-osd-details cdTableDetail [selection]=\\\"selection\\\">\\r\\n  </cd-osd-details>\\r\\n</cd-table>\\r\\n\\r\\n<ng-template #statusColor let-value=\\\"value\\\">\\r\\n  <span *ngFor=\\\"let state of value; last as last\\\">\\r\\n    <span [class.text-success]=\\\"'up' === state || 'in' === state\\\" [class.text-warning]=\\\"'down' === state || 'out' === state\\\">\\r\\n      {{ state }}</span>\\r\\n    <span *ngIf=\\\"!last\\\">, </span>\\r\\n    <!-- Has to be on the same line to prevent a space between state and comma. -->\\r\\n  </span>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #osdUsageTpl let-row=\\\"row\\\">\\r\\n  <cd-usage-bar [totalBytes]=\\\"row.stats.stat_bytes\\\" [usedBytes]=\\\"row.stats.stat_bytes_used\\\"></cd-usage-bar>\\r\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\n\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n\r\nimport { OsdService } from '../../../../shared/api/osd.service';\r\nimport { TableComponent } from '../../../../shared/datatable/table/table.component';\r\nimport { CellTemplate } from '../../../../shared/enum/cell-template.enum';\r\nimport { CdTableColumn } from '../../../../shared/models/cd-table-column';\r\nimport { CdTableSelection } from '../../../../shared/models/cd-table-selection';\r\nimport { Permission } from '../../../../shared/models/permissions';\r\nimport { DimlessBinaryPipe } from '../../../../shared/pipes/dimless-binary.pipe';\r\nimport { AuthStorageService } from '../../../../shared/services/auth-storage.service';\r\nimport { OsdFlagsModalComponent } from '../osd-flags-modal/osd-flags-modal.component';\r\nimport { OsdScrubModalComponent } from '../osd-scrub-modal/osd-scrub-modal.component';\r\nimport { OsdInOutComponent } from '../osd-in-out-modal/osd-in-out-modal.component';\r\n\r\n@Component({\r\n  selector: 'cd-osd-list',\r\n  templateUrl: './osd-list.component.html',\r\n  styleUrls: ['./osd-list.component.scss']\r\n})\r\nexport class OsdListComponent implements OnInit {\r\n  @ViewChild('statusColor') statusColor: TemplateRef<any>;\r\n  @ViewChild('osdUsageTpl') osdUsageTpl: TemplateRef<any>;\r\n  @ViewChild(TableComponent) tableComponent: TableComponent;\r\n\r\n  permission: Permission;\r\n  bsModalRef: BsModalRef;\r\n  osds = [];\r\n  columns: CdTableColumn[];\r\n  selection = new CdTableSelection();\r\n\r\n  constructor(\r\n    private authStorageService: AuthStorageService,\r\n    private osdService: OsdService,\r\n    private dimlessBinaryPipe: DimlessBinaryPipe,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.permission = this.authStorageService.getPermissions().osd;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      { prop: 'host.name', name: 'Host' },\r\n      { prop: 'id', name: 'ID', cellTransformation: CellTemplate.bold },\r\n      { prop: 'collectedStates', name: 'Status', cellTemplate: this.statusColor },\r\n      { prop: 'stats.numpg', name: 'PGs' },\r\n      { prop: 'stats.stat_bytes', name: 'Size', pipe: this.dimlessBinaryPipe },\r\n      { name: 'Usage', cellTemplate: this.osdUsageTpl },\r\n      {\r\n        prop: 'stats_history.out_bytes',\r\n        name: 'Read bytes',\r\n        cellTransformation: CellTemplate.sparkline\r\n      },\r\n      {\r\n        prop: 'stats_history.in_bytes',\r\n        name: 'Writes bytes',\r\n        cellTransformation: CellTemplate.sparkline\r\n      },\r\n      { prop: 'stats.op_r', name: 'Read ops', cellTransformation: CellTemplate.perSecond },\r\n      { prop: 'stats.op_w', name: 'Write ops', cellTransformation: CellTemplate.perSecond }\r\n    ];\r\n  }\r\n\r\n  updateSelection(selection: CdTableSelection) {\r\n    this.selection = selection;\r\n  }\r\n\r\n  getOsdList() {\r\n    this.osdService.getList().subscribe((data: any[]) => {\r\n      this.osds = data;\r\n      data.map((osd) => {\r\n        osd.collectedStates = this.collectStates(osd);\r\n        osd.stats_history.out_bytes = osd.stats_history.op_out_bytes.map((i) => i[1]);\r\n        osd.stats_history.in_bytes = osd.stats_history.op_in_bytes.map((i) => i[1]);\r\n        return osd;\r\n      });\r\n    });\r\n  }\r\n\r\n  collectStates(osd) {\r\n    const select = (onState, offState) => (osd[onState] ? onState : offState);\r\n    return [select('up', 'down'), select('in', 'out')];\r\n  }\r\n\r\n  beforeShowDetails(selection: CdTableSelection) {\r\n    return selection.hasSingleSelection;\r\n  }\r\n\r\n  scrubAction(deep) {\r\n    if (!this.tableComponent.selection.hasSelection) {\r\n      return;\r\n    }\r\n\r\n    const initialState = {\r\n      selected: this.tableComponent.selection.selected,\r\n      deep: deep\r\n    };\r\n\r\n    this.bsModalRef = this.modalService.show(OsdScrubModalComponent, { initialState });\r\n  }\r\n\r\n  in_out(mode) {\r\n    if (!this.tableComponent.selection.hasSelection) {\r\n      return;\r\n    }\r\n    const initialState = {\r\n      selected: this.tableComponent.selection.selected,\r\n      mode: mode,\r\n    };\r\n    this.bsModalRef = this.modalService.show(OsdInOutComponent, { initialState });\r\n  }\r\n\r\n  configureClusterAction() {\r\n    this.bsModalRef = this.modalService.show(OsdFlagsModalComponent, {});\r\n  }\r\n}\r\n","module.exports = \"<table>\\n  <tr style=\\\"height: 10px;\\\"\\n      *ngFor=\\\"let row of valuesStyle\\\">\\n    <td style=\\\"width: 10px; height: 10px;\\\"\\n        *ngFor=\\\"let col of row\\\"\\n        [ngStyle]=\\\"col\\\">\\n    </td>\\n  </tr>\\n</table>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'cd-osd-performance-histogram',\n  templateUrl: './osd-performance-histogram.component.html',\n  styleUrls: ['./osd-performance-histogram.component.scss']\n})\nexport class OsdPerformanceHistogramComponent implements OnChanges {\n  @Input() histogram: any;\n  valuesStyle: any;\n  last = {};\n\n  constructor() { }\n\n  ngOnChanges() {\n    this.render();\n  }\n\n  hexdigits(v): string {\n    const i = Math.floor(v * 255).toString(16);\n    return i.length === 1 ? '0' + i : i;\n  }\n\n  hexcolor(r, g, b) {\n    return '#' + this.hexdigits(r) + this.hexdigits(g) + this.hexdigits(b);\n  }\n\n  render() {\n    if (!this.histogram) {\n      return;\n    }\n    let max = 0;\n\n    _.each(this.histogram.values, (row, i) => {\n      _.each(row, (col, j) => {\n        let val;\n        if (this.last && this.last[i] && this.last[i][j]) {\n          val = col - this.last[i][j];\n        } else {\n          val = col;\n        }\n        max = Math.max(max, val);\n      });\n    });\n\n    this.valuesStyle = this.histogram.values.map((row, i) => {\n      return row.map((col, j) => {\n        const val = this.last && this.last[i] && this.last[i][j] ? col - this.last[i][j] : col;\n        const g = max ? val / max : 0;\n        const r = 1 - g;\n        return {backgroundColor: this.hexcolor(r, g, 0)};\n      });\n    });\n\n    this.last = this.histogram.values;\n  }\n}\n","module.exports = \"<cd-modal [modalRef]=\\\"bsModalRef\\\">\\n  <ng-container class=\\\"modal-title\\\"\\n                i18n>\\n    OSDs {{ deep ? 'Deep ' : '' }}Scrub\\n  </ng-container>\\n\\n  <ng-container class=\\\"modal-content\\\">\\n    <form name=\\\"scrubForm\\\"\\n          class=\\\"form-horizontal\\\"\\n          #formDir=\\\"ngForm\\\"\\n          [formGroup]=\\\"scrubForm\\\"\\n          novalidate>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"selected.length === 1\\\">\\n          <p i18n>\\n            You are about to apply a {{ deep ? 'deep ' : '' }}scrub to the OSD\\n            <strong>{{ selected[0].id }}</strong>.\\n          </p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <cd-submit-button (submitAction)=\\\"scrub()\\\"\\n                          [form]=\\\"scrubForm\\\"\\n                          i18n>\\n          Submit\\n        </cd-submit-button>\\n\\n        <button class=\\\"btn btn-link btn-sm\\\"\\n                (click)=\\\"bsModalRef.hide()\\\"\\n                i18n>\\n          Cancel\\n        </button>\\n      </div>\\n    </form>\\n  </ng-container>\\n</cd-modal>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { OsdService } from '../../../../shared/api/osd.service';\nimport { NotificationType } from '../../../../shared/enum/notification-type.enum';\nimport { NotificationService } from '../../../../shared/services/notification.service';\n\n@Component({\n  selector: 'cd-osd-scrub-modal',\n  templateUrl: './osd-scrub-modal.component.html',\n  styleUrls: ['./osd-scrub-modal.component.scss']\n})\nexport class OsdScrubModalComponent implements OnInit {\n  deep: boolean;\n  selected = [];\n  scrubForm: FormGroup;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private osdService: OsdService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit() {\n    this.scrubForm = new FormGroup({});\n  }\n\n  scrub() {\n    const id = this.selected[0].id;\n\n    this.osdService.scrub(id, this.deep).subscribe(\n      (res) => {\n        const operation = this.deep ? 'Deep scrub' : 'Scrub';\n\n        this.notificationService.show(\n          NotificationType.success,\n          `${operation} was initialized in the following OSD: ${id}`\n        );\n\n        this.bsModalRef.hide();\n      },\n      () => {\n        this.bsModalRef.hide();\n      }\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ChartsModule } from 'ng2-charts';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HealthPieComponent } from './health-pie/health-pie.component';\nimport { HealthComponent } from './health/health.component';\nimport { InfoCardComponent } from './info-card/info-card.component';\nimport { LogColorPipe } from './log-color.pipe';\nimport { MdsSummaryPipe } from './mds-summary.pipe';\nimport { MgrSummaryPipe } from './mgr-summary.pipe';\nimport { MonSummaryPipe } from './mon-summary.pipe';\nimport { OsdSummaryPipe } from './osd-summary.pipe';\nimport { PgStatusStylePipe } from './pg-status-style.pipe';\nimport { PgStatusPipe } from './pg-status.pipe';\n\n@NgModule({\n  imports: [CommonModule, TabsModule.forRoot(), SharedModule, ChartsModule, RouterModule],\n  declarations: [\n    HealthComponent,\n    DashboardComponent,\n    MonSummaryPipe,\n    OsdSummaryPipe,\n    LogColorPipe,\n    MgrSummaryPipe,\n    PgStatusPipe,\n    MdsSummaryPipe,\n    PgStatusStylePipe,\n    HealthPieComponent,\n    InfoCardComponent\n  ]\n})\nexport class DashboardModule {}\n","module.exports = \"<div>\\n  <tabset *ngIf=\\\"hasGrafana\\\">\\n    <tab i18n-heading\\n         heading=\\\"Health\\\">\\n      <cd-health></cd-health>\\n    </tab>\\n    <tab i18n-heading\\n         heading=\\\"Statistics\\\">\\n    </tab>\\n  </tabset>\\n  <cd-health *ngIf=\\\"!hasGrafana\\\"></cd-health>\\n</div>\\n\"","module.exports = \"div {\\n  padding-top: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cd-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  hasGrafana = false; // TODO: Temporary var, remove when grafana is implemented\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"chart-container\\\">\\n  <canvas baseChart\\n          #chartCanvas\\n          [datasets]=\\\"chart.dataset\\\"\\n          [chartType]=\\\"chart.chartType\\\"\\n          [options]=\\\"chart.options\\\"\\n          [labels]=\\\"chart.labels\\\"\\n          [colors]=\\\"chart.colors\\\"\\n          width=\\\"120\\\"\\n          height=\\\"120\\\"></canvas>\\n  <div class=\\\"chartjs-tooltip\\\"\\n       #chartTooltip>\\n    <table></table>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  position: absolute;\\n  margin: auto;\\n  cursor: pointer;\\n  overflow: visible; }\\n\\ncanvas {\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.chartjs-tooltip {\\n  opacity: 0;\\n  position: absolute;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: white;\\n  border-radius: 3px;\\n  transition: all 0.1s ease;\\n  pointer-events: none;\\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !important;\\n  -webkit-transform: translate(-50%, 0);\\n  transform: translate(-50%, 0); }\\n\\n.chartjs-tooltip.transform-left {\\n    -webkit-transform: translate(-10%, 0);\\n            transform: translate(-10%, 0); }\\n\\n.chartjs-tooltip.transform-left::after {\\n      left: 10%; }\\n\\n.chartjs-tooltip.transform-right {\\n    -webkit-transform: translate(-90%, 0);\\n            transform: translate(-90%, 0); }\\n\\n.chartjs-tooltip.transform-right::after {\\n      left: 90%; }\\n\\n.chartjs-tooltip::after {\\n  content: ' ';\\n  position: absolute;\\n  top: 100%;\\n  /* At the bottom of the tooltip */\\n  left: 50%;\\n  margin-left: -5px;\\n  border-width: 5px;\\n  border-style: solid;\\n  border-color: black transparent transparent transparent; }\\n\\n::ng-deep .chartjs-tooltip-key {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 10px; }\\n\"","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\n\nimport * as Chart from 'chart.js';\n\nimport { ChartTooltip } from '../../../shared/models/chart-tooltip';\nimport { DimlessBinaryPipe } from '../../../shared/pipes/dimless-binary.pipe';\n\n@Component({\n  selector: 'cd-health-pie',\n  templateUrl: './health-pie.component.html',\n  styleUrls: ['./health-pie.component.scss']\n})\nexport class HealthPieComponent implements OnChanges, OnInit {\n  @ViewChild('chartCanvas') chartCanvasRef: ElementRef;\n  @ViewChild('chartTooltip') chartTooltipRef: ElementRef;\n\n  @Input() data: any;\n  @Input() tooltipFn: any;\n  @Output() prepareFn = new EventEmitter();\n\n  chart: any = {\n    chartType: 'doughnut',\n    dataset: [\n      {\n        label: null,\n        borderWidth: 0\n      }\n    ],\n    options: {\n      responsive: true,\n      legend: { display: false },\n      animation: { duration: 0 },\n\n      tooltips: {\n        enabled: false\n      }\n    },\n    colors: [\n      {\n        borderColor: 'transparent'\n      }\n    ]\n  };\n\n  constructor(private dimlessBinary: DimlessBinaryPipe) {}\n\n  ngOnInit() {\n    // An extension to Chart.js to enable rendering some\n    // text in the middle of a doughnut\n    Chart.pluginService.register({\n      beforeDraw: function(chart) {\n        if (!chart.options.center_text) {\n          return;\n        }\n\n        const width = chart.chart.width,\n          height = chart.chart.height,\n          ctx = chart.chart.ctx;\n\n        ctx.restore();\n        const fontSize = (height / 114).toFixed(2);\n        ctx.font = fontSize + 'em sans-serif';\n        ctx.textBaseline = 'middle';\n\n        const text = chart.options.center_text,\n          textX = Math.round((width - ctx.measureText(text).width) / 2),\n          textY = height / 2;\n\n        ctx.fillText(text, textX, textY);\n        ctx.save();\n      }\n    });\n\n    const getStyleTop = (tooltip, positionY) => {\n      return positionY + tooltip.caretY - tooltip.height - 10 + 'px';\n    };\n\n    const getStyleLeft = (tooltip, positionX) => {\n      return positionX + tooltip.caretX + 'px';\n    };\n\n    const getBody = (body) => {\n      const bodySplit = body[0].split(': ');\n      bodySplit[1] = this.dimlessBinary.transform(bodySplit[1]);\n      return bodySplit.join(': ');\n    };\n\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvasRef,\n      this.chartTooltipRef,\n      getStyleLeft,\n      getStyleTop\n    );\n    chartTooltip.getBody = getBody;\n\n    this.chart.options.tooltips.custom = (tooltip) => {\n      chartTooltip.customTooltips(tooltip);\n    };\n\n    this.prepareFn.emit([this.chart, this.data]);\n  }\n\n  ngOnChanges() {\n    this.prepareFn.emit([this.chart, this.data]);\n  }\n}\n","module.exports = \"<div *ngIf=\\\"contentData\\\">\\n  <div class=\\\"row\\\">\\n    <cd-info-card title=\\\"Health\\\">\\n      <ng-container i18n>Overall status: </ng-container>\\n      <span [ngStyle]=\\\"contentData.health.status | healthColor\\\">{{ contentData.health.status }}</span>\\n      <ul>\\n        <li *ngFor=\\\"let check of contentData.health.checks\\\">\\n          <span [ngStyle]=\\\"check.severity | healthColor\\\">{{ check.type }}</span>: {{ check.summary.message }}\\n        </li>\\n      </ul>\\n    </cd-info-card>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <!--STATS -->\\n      <div class=\\\"row\\\">\\n        <cd-info-card title=\\\"MONITORS\\\"\\n                      imageClass=\\\"fa fa-database fa-fw\\\"\\n                      link=\\\"/monitor\\\"\\n                      contentClass=\\\"media-text\\\"\\n                      *ngIf=\\\"contentData.mon_status\\\">\\n          {{ contentData.mon_status | monSummary }}\\n        </cd-info-card>\\n\\n        <cd-info-card title=\\\"OSDs\\\"\\n                      imageClass=\\\"fa fa-hdd-o fa-fw\\\"\\n                      link=\\\"/osd\\\"\\n                      contentClass=\\\"media-text\\\"\\n                      *ngIf=\\\"contentData.osd_map\\\">\\n          {{ contentData.osd_map | osdSummary }}\\n        </cd-info-card>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <cd-info-card title=\\\"METADATA SERVERS\\\"\\n                      imageClass=\\\"fa fa-folder fa-fw\\\"\\n                      contentClass=\\\"media-text\\\"\\n                      *ngIf=\\\"contentData.fs_map\\\">\\n          {{ contentData.fs_map | mdsSummary }}\\n        </cd-info-card>\\n\\n        <cd-info-card title=\\\"MANAGER DAEMONS\\\"\\n                      imageClass=\\\"fa fa-cog fa-fw\\\"\\n                      contentClass=\\\"media-text\\\"\\n                      *ngIf=\\\"contentData.mgr_map\\\">\\n          {{ contentData.mgr_map | mgrSummary }}\\n        </cd-info-card>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <cd-info-card title=\\\"Usage\\\"\\n                  *ngIf=\\\"contentData.df?.stats?.total_objects\\\">\\n      <table class=\\\"ceph-chartbox\\\">\\n        <tr>\\n          <td>\\n            <span style=\\\"font-size: 45px;\\\">{{ contentData.df.stats.total_objects | dimless }}</span>\\n          </td>\\n          <td>\\n            <div class=\\\"center-block pie\\\">\\n              <cd-health-pie [data]=\\\"contentData\\\"\\n                             (prepareFn)=\\\"prepareRawUsage($event[0], $event[1])\\\"></cd-health-pie>\\n            </div>\\n          </td>\\n          <td>\\n            <div class=\\\"center-block pie\\\">\\n              <cd-health-pie [data]=\\\"contentData\\\"\\n                             (prepareFn)=\\\"preparePoolUsage($event[0], $event[1])\\\"></cd-health-pie>\\n            </div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td i18n>Objects</td>\\n          <td>\\n            <ng-container i18n>Raw capacity</ng-container>\\n            <br>\\n            <ng-container i18n=\\\"disk used\\\">({{ contentData.df.stats.total_used_bytes | dimlessBinary }} used)</ng-container>\\n          </td>\\n          <td i18n>Usage by pool</td>\\n        </tr>\\n      </table>\\n    </cd-info-card>\\n\\n    <cd-info-card title=\\\"Pools\\\"\\n                  *ngIf=\\\"contentData.pools\\\">\\n      <table class=\\\"table table-condensed\\\">\\n        <thead>\\n        <tr>\\n          <th i18n>Name</th>\\n          <th i18n>PG status</th>\\n          <th i18n>Usage</th>\\n          <th colspan=\\\"2\\\"\\n              i18n>Read</th>\\n          <th colspan=\\\"2\\\"\\n              i18n>Write</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let pool of contentData.pools\\\">\\n          <td>{{ pool.pool_name }}</td>\\n          <td [ngStyle]=\\\"pool.pg_status | pgStatusStyle\\\">\\n            {{ pool.pg_status | pgStatus }}\\n          </td>\\n          <td>\\n            <cd-usage-bar [totalBytes]=\\\"pool.stats.bytes_used.latest +  pool.stats.max_avail.latest\\\" [usedBytes]=\\\"pool.stats.bytes_used.latest\\\"></cd-usage-bar>\\n          </td>\\n          <td>\\n            {{ pool.stats.rd_bytes.rate | dimless }}\\n          </td>\\n          <td>\\n            {{ pool.stats.rd.rate | dimless }} ops\\n          </td>\\n          <td>\\n            {{ pool.stats.wr_bytes.rate | dimless }}\\n          </td>\\n          <td>\\n            {{ pool.stats.wr.rate | dimless }} ops\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </cd-info-card>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <!-- LOGS -->\\n      <div class=\\\"well\\\"\\n           *ngIf=\\\"contentData.clog || contentData.audit_log\\\">\\n        <fieldset>\\n          <legend i18n>Logs</legend>\\n\\n          <tabset>\\n            <tab heading=\\\"Cluster log\\\"\\n                 class=\\\"text-monospace\\\"\\n                 *ngIf=\\\"contentData.clog\\\"\\n                 i18n-heading>\\n              <span *ngFor=\\\"let line of contentData.clog\\\">\\n                {{ line.stamp }}&nbsp;{{ line.priority }}&nbsp;\\n                <span [ngStyle]=\\\"line | logColor\\\">\\n                  {{ line.message }}\\n                  <br>\\n                </span>\\n              </span>\\n            </tab>\\n            <tab heading=\\\"Audit log\\\"\\n                 class=\\\"text-monospace\\\"\\n                 *ngIf=\\\"contentData.audit_log\\\"\\n                 i18n-heading>\\n              <span *ngFor=\\\"let line of contentData.audit_log\\\">\\n                {{ line.stamp }}&nbsp;{{ line.priority }}&nbsp;\\n                <span [ngStyle]=\\\"line | logColor\\\">\\n                  <span style=\\\"font-weight: bold;\\\">\\n                    {{ line.message }}\\n                  </span>\\n                  <br>\\n                </span>\\n              </span>\\n            </tab>\\n          </tabset>\\n        </fieldset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"table.ceph-chartbox {\\n  width: 100%; }\\n  table.ceph-chartbox td {\\n    text-align: center;\\n    font-weight: bold; }\\n  .center-block {\\n  width: 120px; }\\n  .pie {\\n  height: 120px;\\n  width: 120px; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { DashboardService } from '../../../shared/api/dashboard.service';\n\n@Component({\n  selector: 'cd-health',\n  templateUrl: './health.component.html',\n  styleUrls: ['./health.component.scss']\n})\nexport class HealthComponent implements OnInit, OnDestroy {\n  contentData: any;\n  interval: number;\n\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit() {\n    this.getInfo();\n    this.interval = window.setInterval(() => {\n      this.getInfo();\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  getInfo() {\n    this.dashboardService.getHealth().subscribe((data: any) => {\n      this.contentData = data;\n    });\n  }\n\n  prepareRawUsage(chart, data) {\n    let rawUsageChartColor;\n\n    const rawUsageText =\n      Math.round(100 * (data.df.stats.total_used_bytes / data.df.stats.total_bytes)) + '%';\n\n    if (data.df.stats.total_used_bytes / data.df.stats.total_bytes >= data.osd_map.full_ratio) {\n      rawUsageChartColor = '#ff0000';\n    } else if (\n      data.df.stats.total_used_bytes / data.df.stats.total_bytes >=\n      data.osd_map.backfillfull_ratio\n    ) {\n      rawUsageChartColor = '#ff6600';\n    } else if (\n      data.df.stats.total_used_bytes / data.df.stats.total_bytes >=\n      data.osd_map.nearfull_ratio\n    ) {\n      rawUsageChartColor = '#ffc200';\n    } else {\n      rawUsageChartColor = '#00bb00';\n    }\n\n    chart.dataset[0].data = [data.df.stats.total_used_bytes, data.df.stats.total_avail_bytes];\n    chart.options.center_text = rawUsageText;\n    chart.colors = [{ backgroundColor: [rawUsageChartColor, '#424d52'] }];\n    chart.labels = ['Raw Used', 'Raw Available'];\n  }\n\n  preparePoolUsage(chart, data) {\n    const colors = [\n      '#3366CC',\n      '#109618',\n      '#990099',\n      '#3B3EAC',\n      '#0099C6',\n      '#DD4477',\n      '#66AA00',\n      '#B82E2E',\n      '#316395',\n      '#994499',\n      '#22AA99',\n      '#AAAA11',\n      '#6633CC',\n      '#E67300',\n      '#8B0707',\n      '#329262',\n      '#5574A6',\n      '#FF9900',\n      '#DC3912',\n      '#3B3EAC'\n    ];\n\n    const poolLabels = [];\n    const poolData = [];\n\n    _.each(data.df.pools, (pool, i) => {\n      poolLabels.push(pool['name']);\n      poolData.push(pool['stats']['bytes_used']);\n    });\n\n    chart.dataset[0].data = poolData;\n    chart.colors = [{ backgroundColor: colors }];\n    chart.labels = poolLabels;\n  }\n}\n","module.exports = \"<div [ngClass]=\\\"cardClass\\\">\\n  <div class=\\\"well\\\">\\n    <div class=\\\"media\\\">\\n      <div *ngIf=\\\"imageClass\\\" class=\\\"media-left\\\">\\n        <i [ngClass]=\\\"imageClass\\\"></i>\\n      </div>\\n      <div class=\\\"media-body\\\">\\n        <span class=\\\"media-heading\\\" i18n>\\n          <a *ngIf=\\\"link; else noLinkTitle\\\" [routerLink]=\\\"link\\\">{{ title }}</a>\\n          <ng-template #noLinkTitle>\\n            {{ title }}\\n            <hr *ngIf=\\\"!imageClass\\\" class=\\\"underline\\\" />\\n          </ng-template>\\n        </span>\\n        <span [ngClass]=\\\"contentClass\\\">\\n          <ng-content></ng-content>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".media {\\n  display: block;\\n  min-height: 60px;\\n  width: 100%; }\\n  .media .media-left {\\n    border-top-left-radius: 2px;\\n    border-top-right-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border-bottom-left-radius: 2px;\\n    display: block;\\n    float: left;\\n    height: 60px;\\n    width: 60px;\\n    text-align: center;\\n    font-size: 40px;\\n    line-height: 60px;\\n    padding-right: 0; }\\n  .media .media-left .fa {\\n      font-size: 45px; }\\n  .media .media-body {\\n    padding: 5px 10px;\\n    margin-left: 60px; }\\n  .media .media-body .media-heading {\\n      display: block;\\n      font-size: 20px;\\n      white-space: nowrap;\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n  .media .media-body .media-heading .underline {\\n        border-bottom: 1px solid #e5e5e5;\\n        margin-top: 0px;\\n        margin-bottom: 18px;\\n        padding: 0px; }\\n  .media .media-body .media-text {\\n      display: block;\\n      font-weight: bold;\\n      font-size: 18px; }\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cd-info-card',\n  templateUrl: './info-card.component.html',\n  styleUrls: ['./info-card.component.scss']\n})\nexport class InfoCardComponent {\n  @Input() title: string;\n  @Input() link: string;\n  @Input() cardClass = 'col-md-6';\n  @Input() imageClass: string;\n  @Input() contentClass: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'logColor'\n})\nexport class LogColorPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value.priority === '[INF]') {\n      return ''; // Inherit\n    } else if (value.priority === '[WRN]') {\n      return {\n        color: '#ffa500',\n        'font-weight': 'bold'\n      };\n    } else if (value.priority === '[ERR]') {\n      return { color: '#FF2222' };\n    } else {\n      return '';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'mdsSummary'\n})\nexport class MdsSummaryPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let standbys = 0;\n    let active = 0;\n    let standbyReplay = 0;\n    _.each(value.standbys, (s, i) => {\n      standbys += 1;\n    });\n\n    if (value.standbys && !value.filesystems) {\n      return standbys + ', no filesystems';\n    } else if (value.filesystems.length === 0) {\n      return 'no filesystems';\n    } else {\n      _.each(value.filesystems, (fs, i) => {\n        _.each(fs.mdsmap.info, (mds, j) => {\n          if (mds.state === 'up:standby-replay') {\n            standbyReplay += 1;\n          } else {\n            active += 1;\n          }\n        });\n      });\n\n      return active + ' active, ' + (standbys + standbyReplay) + ' standby';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'mgrSummary'\n})\nexport class MgrSummaryPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let result = 'active: ';\n    result += _.isUndefined(value.active_name) ? 'n/a' : value.active_name;\n\n    if (value.standbys.length) {\n      result += ', ' + value.standbys.length + ' standbys';\n    }\n\n    return result;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'monSummary'\n})\nexport class MonSummaryPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let result = value.monmap.mons.length.toString() + ' (quorum ';\n    result += value.quorum.join(', ');\n    result += ')';\n\n    return result;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'osdSummary'\n})\nexport class OsdSummaryPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n\n    let inCount = 0;\n    let upCount = 0;\n    _.each(value.osds, (osd, i) => {\n      if (osd.in) {\n        inCount++;\n      }\n      if (osd.up) {\n        upCount++;\n      }\n    });\n\n    return value.osds.length + ' (' + upCount + ' up, ' + inCount + ' in)';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'pgStatusStyle'\n})\nexport class PgStatusStylePipe implements PipeTransform {\n  transform(pgStatus: any, args?: any): any {\n    let warning = false;\n    let error = false;\n\n    _.each(pgStatus, (value, state) => {\n      if (\n        state.includes('inconsistent') ||\n        state.includes('incomplete') ||\n        !state.includes('active')\n      ) {\n        error = true;\n      }\n\n      if (\n        state !== 'active+clean' &&\n        state !== 'active+clean+scrubbing' &&\n        state !== 'active+clean+scrubbing+deep'\n      ) {\n        warning = true;\n      }\n    });\n\n    if (error) {\n      return { color: '#FF0000' };\n    }\n\n    if (warning) {\n      return { color: '#FFC200' };\n    }\n\n    return { color: '#00BB00' };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'pgStatus'\n})\nexport class PgStatusPipe implements PipeTransform {\n  transform(pgStatus: any, args?: any): any {\n    const strings = [];\n    _.each(pgStatus, (count, state) => {\n      strings.push(count + ' ' + state);\n    });\n\n    return strings.join(', ');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport {\n  PerformanceCounterComponent\n} from './performance-counter/performance-counter.component';\nimport {\n  TablePerformanceCounterComponent\n} from './table-performance-counter/table-performance-counter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ],\n  declarations: [\n    TablePerformanceCounterComponent,\n    PerformanceCounterComponent\n  ],\n  exports: [\n    TablePerformanceCounterComponent\n  ]\n})\nexport class PerformanceCounterModule { }\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\">Cluster</li>\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a [routerLink]=\\\"fromLink\\\">\\n        <span *ngIf=\\\"fromLink === '/monitor'\\\">Monitors</span>\\n        <span *ngIf=\\\"fromLink === '/hosts'\\\">Hosts</span>\\n      </a>\\n    </li>\\n    <li class=\\\"breadcrumb-item active\\\"\\n        i18n>Performance Counters</li>\\n  </ol>\\n</nav>\\n\\n<fieldset>\\n  <legend>{{ serviceType }}.{{ serviceId }}</legend>\\n  <cd-table-performance-counter [serviceType]=\\\"serviceType\\\"\\n                                [serviceId]=\\\"serviceId\\\">\\n  </cd-table-performance-counter>\\n</fieldset>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'cd-performance-counter',\n  templateUrl: './performance-counter.component.html',\n  styleUrls: ['./performance-counter.component.scss']\n})\nexport class PerformanceCounterComponent {\n\n  static defaultFromLink = '/hosts';\n\n  serviceId: string;\n  serviceType: string;\n  fromLink: string;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.queryParams.subscribe(\n      (params: { fromLink: string }) => {\n        this.fromLink = params.fromLink || PerformanceCounterComponent.defaultFromLink;\n      }\n    );\n    this.route.params.subscribe(\n      (params: { type: string; id: string }) => {\n        this.serviceId = params.id;\n        this.serviceType = params.type;\n      }\n    );\n  }\n\n}\n","module.exports = \"<cd-table [data]=\\\"counters\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          [autoSave]=\\\"false\\\"\\n          (fetchData)=\\\"getCounters()\\\">\\n  <ng-template #valueTpl let-row=\\\"row\\\">\\n    {{ row.value | dimless }} {{ row.unit }}\\n  </ng-template>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport {\n  PerformanceCounterService\n} from '../../../shared/api/performance-counter.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\n\n/**\n * Display the specified performance counters in a datatable.\n */\n@Component({\n  selector: 'cd-table-performance-counter',\n  templateUrl: './table-performance-counter.component.html',\n  styleUrls: ['./table-performance-counter.component.scss']\n})\nexport class TablePerformanceCounterComponent implements OnInit {\n\n  columns: Array<CdTableColumn> = [];\n  counters: Array<object> = [];\n\n  @ViewChild('valueTpl') public valueTpl: TemplateRef<any>;\n\n  /**\n   * The service type, e.g. 'rgw', 'mds', 'mon', 'osd', ...\n   */\n  @Input() serviceType: string;\n\n  /**\n   * The service identifier.\n   */\n  @Input() serviceId: string;\n\n  constructor(private performanceCounterService: PerformanceCounterService) { }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        name: 'Name',\n        prop: 'name',\n        flexGrow: 1\n      },\n      {\n        name: 'Description',\n        prop: 'description',\n        flexGrow: 1\n      },\n      {\n        name: 'Value',\n        cellTemplate: this.valueTpl,\n        flexGrow: 1\n      }\n    ];\n  }\n\n  getCounters() {\n    this.performanceCounterService.get(this.serviceType, this.serviceId)\n      .subscribe((resp: object[]) => {\n        this.counters = resp;\n      });\n  }\n}\n","export enum PoolFormMode {\n    createing = 'createing',\n  }\n  ","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/pool\\\">Pools</a></li>\\n    <li class=\\\"breadcrumb-item active\\\" i18n>Add</li>\\n  </ol>\\n</nav>\\n\\n<div class=\\\"col-sm-12 col-lg-6\\\">\\n  <form name=\\\"poolForm\\\" class=\\\"form-horizontal\\\" #formDir=\\\"ngForm\\\" [formGroup]=\\\"poolForm\\\" novalidate>\\n    <div class=\\\"panel panel-default\\\">\\n\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">\\n          <span i18n>Add</span> Pool\\n        </h3>\\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n\\n        <!-- Name -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': poolForm.showError('name', formDir)}\\\">\\n          <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"name\\\">Name\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Name...\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\" autofocus>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"poolForm.showError('name', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Pool Type -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': poolForm.showError('type', formDir)}\\\">\\n          <label class=\\\"control-label col-sm-3\\\" for=\\\"type\\\">Type\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <select id=\\\"type\\\" name=\\\"type\\\" class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n              <option *ngIf=\\\"poolTypes.length > 0\\\" [ngValue]=\\\"null\\\">-- Select a type --</option>\\n              <option *ngFor=\\\"let type of poolTypes\\\" [value]=\\\"type\\\">{{ type }}</option>\\n            </select>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"poolForm.showError('type', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- PG num -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': poolForm.showError('pg_num', formDir)}\\\">\\n          <label i18n class=\\\"control-label col-sm-3\\\" for=\\\"pg_num\\\">PGs\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"pg_num\\\" name=\\\"pg_num\\\" class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"pg_num\\\" ì18n-placeholder placeholder=\\\"e.g., 64\\\">\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"poolForm.showError('pg_num', formDir, 'required')\\\">\\n              This field is required.\\n            </span>\\n            <span i18n class=\\\"help-block\\\" *ngIf=\\\"poolForm.showError('pg_num', formDir, 'invalidNm')\\\">\\n              You have to input a correct number of Placement Groups.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Advanced -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <a i18n class=\\\"pull-right margin-right-md\\\" (click)=\\\"advancedEnabled = true\\\" *ngIf=\\\"!advancedEnabled\\\">\\n              Advanced...\\n            </a>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"advancedEnabled\\\">\\n\\n          <h2 i18n class=\\\"page-header\\\">Advanced</h2>\\n\\n          <span i18n>template</span>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button [form]=\\\"formDir\\\" type=\\\"button\\\" (submitAction)=\\\"submit()\\\">\\n            <span i18n>Create</span> Pool\\n          </cd-submit-button>\\n          <button i18n type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" routerLink=\\\"/pool\\\">\\n            Back\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs/Observable';\n\nimport { PoolService } from '../../../shared/api/pool.service';\nimport { TaskWrapperService } from '../../../shared/services/task-wrapper.service';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { PoolFormMode } from './pool-form-mode.enum';\n@Component({\n  selector: 'cd-pool-form',\n  templateUrl: './pool-form.component.html',\n  styleUrls: ['./pool-form.component.scss']\n})\nexport class PoolFormComponent implements OnInit {\n\n  poolForm: CdFormGroup;\n  poolTypes: String[] = [\"replicated\"];\n  public poolFormMode = PoolFormMode;\n  mode: PoolFormMode;\n\n  constructor(\n    private router: Router,\n    private taskWrapper: TaskWrapperService,\n    private poolService: PoolService,\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    if (this.router.url.startsWith('/pool/add')) {\n      this.mode = this.poolFormMode.createing;\n    }\n  }\n\n  createForm() {\n    this.poolForm = new CdFormGroup(\n      {\n        name: new FormControl('', {\n          validators: [Validators.required]\n        }),\n        type: new FormControl(null, {\n          validators: [Validators.required],\n        }),\n        pg_num: new FormControl(0),\n      },\n      this.validatePoolForm());\n  }\n\n\n  validatePoolForm(): ValidatorFn {\n    return (formGroup: CdFormGroup) => {\n      // PGs\n      const pgsControl = formGroup.get('pg_num');\n      let pgsControlErrors = null;\n      if (pgsControl.value === null) {\n        pgsControlErrors = { required: true };\n      } else {\n        if (pgsControl.value > 600 || pgsControl.value < 125) {\n          pgsControlErrors = { invalidNm: true };\n        }\n\n      }\n      pgsControl.setErrors(pgsControlErrors);\n      return null;\n    };\n  }\n\n\n  submit() {\n    const request = {\n      pool: this.poolForm.getValue('name'),\n      pool_type: this.poolForm.getValue('type'),\n      pg_num: this.poolForm.getValue('pg_num'),\n    };\n    let action: Observable<any>;\n    action = this.taskWrapper.wrapTaskAroundCall({\n      task: new FinishedTask('pool/add', {\n        pool: request.pool,\n        pool_type: request.pool_type,\n        pg_num: request.pg_num,\n      }),\n      call: this.poolService.create(request)\n    });\n    action.subscribe(\n      undefined,\n      () => this.poolForm.setErrors({ cdSubmitButton: true }),\n      () => this.router.navigate(['/pool'])\n    );\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item active\\\">Pools</li>\\n  </ol>\\n</nav>\\n<cd-table [data]=\\\"pools\\\" (fetchData)=\\\"getPoolList()\\\" [columns]=\\\"columns\\\" selectionType=\\\"single\\\" (updateSelection)=\\\"updateSelection($event)\\\">\\n  <div class=\\\"table-actions\\\">\\n    <div class=\\\"btn-group\\\" dropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" *ngIf=\\\"permission.create\\\" routerLink=\\\"/pool/add\\\">\\n        <i class=\\\"fa fa-fw fa-plus\\\"></i><span i18n>Add</span>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" *ngIf=\\\"permission.delete && !permission.create\\\" (click)=\\\"deletePoolModal()\\\" []>\\n        <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n        <span i18n>Delete</span>\\n      </button>\\n      <button type=\\\"button\\\" dropdownToggle class=\\\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\\\" *ngIf=\\\"permission.create || permission.update\\\">\\n        <span class=\\\"caret\\\"></span>\\n        <span class=\\\"sr-only\\\"></span>\\n      </button>\\n      <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n        <li role=\\\"menuitem\\\" *ngIf=\\\"permission.create\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/pool/add\\\">\\n            <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n            <span i18n>Add</span>\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\" *ngIf=\\\"permission.delete\\\" [ngClass]=\\\"{'disabled': !selection.hasSingleSelection  || selection.first().executing}\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"deletePoolModal()\\\">\\n            <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n            <span i18n>Delete</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <tabset cdTableDetail *ngIf=\\\"selection.hasSingleSelection\\\">\\n    <tab i18n-heading heading=\\\"Details\\\">\\n      <cd-table-key-value [data]=\\\"selection.first()\\\" [autoReload]=\\\"false\\\">\\n      </cd-table-key-value>\\n    </tab>\\n  </tabset>\\n</cd-table>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\n\nimport { PoolService } from '../../../shared/api/pool.service';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\nimport { TaskWrapperService } from '../../../shared/services/task-wrapper.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { Permission } from '../../../shared/models/permissions';\nimport { DeletionModalComponent } from '../../../shared/components/deletion-modal/deletion-modal.component';\nimport { ExecutingTask } from '../../../shared/models/executing-task';\nimport { FinishedTask } from '../../../shared/models/finished-task';\n\n@Component({\n  selector: 'cd-pool-list',\n  templateUrl: './pool-list.component.html',\n  styleUrls: ['./pool-list.component.scss']\n})\nexport class PoolListComponent {\n  pools = [];\n  columns: CdTableColumn[];\n  selection = new CdTableSelection();\n  permission: Permission;\n  modalRef: BsModalRef;\n  executingTasks: ExecutingTask[] = [];\n\n  constructor(\n    private poolService: PoolService,\n    private authStorageService: AuthStorageService,\n    private modalService: BsModalService,\n    private taskWrapper: TaskWrapperService,\n  ) {\n    this.columns = [\n      {\n        prop: 'pool_name',\n        name: 'Name',\n        flexGrow: 3\n      },\n      {\n        prop: 'type',\n        name: 'Type',\n        flexGrow: 2\n      },\n      {\n        prop: 'application_metadata',\n        name: 'Applications',\n        flexGrow: 3\n      },\n      {\n        prop: 'pg_placement_num',\n        name: 'Placement Groups',\n        flexGrow: 1,\n        cellClass: 'text-right'\n      },\n      {\n        prop: 'size',\n        name: 'Replica Size',\n        flexGrow: 1,\n        cellClass: 'text-right'\n      },\n      {\n        prop: 'last_change',\n        name: 'Last Change',\n        flexGrow: 1,\n        cellClass: 'text-right'\n      },\n      {\n        prop: 'erasure_code_profile',\n        name: 'Erasure Coded Profile',\n        flexGrow: 2\n      },\n      {\n        prop: 'crush_rule',\n        name: 'Crush Ruleset',\n        flexGrow: 2\n      }\n    ];\n    this.permission = this.authStorageService.getPermissions().pool;\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  getPoolList() {\n    this.poolService.getList().subscribe((pools: any[]) => {\n      this.pools = pools;\n    });\n  }\n\n  deletePoolModal() {\n    console.log(this.selection);\n    const poolName = this.selection.first().pool_name;\n    this.modalRef = this.modalService.show(DeletionModalComponent);\n    this.modalRef.content.setUp({\n      metaType: 'POOL',\n      pattern: `${poolName}`,\n      modalRef: this.modalRef,\n      deletionObserver: () =>\n        this.taskWrapper.wrapTaskAroundCall({\n          task: new FinishedTask('pool/delete', { pool_name: poolName }),\n          tasks: this.executingTasks,\n          call: this.poolService.delete(poolName)\n        }),\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BsDropdownModule, ModalModule, TabsModule, TooltipModule } from 'ngx-bootstrap';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\n\nimport { ServicesModule } from '../../shared/services/services.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PoolListComponent } from './pool-list/pool-list.component';\nimport { PoolFormComponent } from './pool-form/pool-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),\n    SharedModule,\n    ServicesModule\n  ],\n  exports: [\n    PoolListComponent\n  ],\n  declarations: [\n    PoolListComponent,\n    PoolFormComponent\n  ]\n})\nexport class PoolModule { }\n","export class RgwUserSubuser {\n  id: string;\n  permissions: string;\n  generate_secret?: boolean;\n  secret_key?: string;\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Object Gateway</li>\\n  </ol>\\n</nav>\\n<cd-info-panel>\\n  {{ message }}\\n  <ng-container i18n>\\n    Please consult the <a href=\\\"http://docs.ceph.com/docs/mimic/mgr/dashboard/#enabling-the-object-gateway-management-frontend\\\" target=\\\"_blank\\\">documentation</a> on how to configure and enable the Object Gateway management functionality.\\n  </ng-container>\\n</cd-info-panel>\\n\"","module.exports = \".alert-row-icon {\\n  vertical-align: top;\\n  padding-right: 15px; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'cd-rgw-501',\n  templateUrl: './rgw-501.component.html',\n  styleUrls: ['./rgw-501.component.scss']\n})\nexport class Rgw501Component implements OnInit, OnDestroy {\n  message = 'The Object Gateway service is not configured.';\n  routeParamsSubscribe: any;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.routeParamsSubscribe = this.route.params.subscribe((params: { message: string }) => {\n      this.message = params.message;\n    });\n  }\n\n  ngOnDestroy() {\n    this.routeParamsSubscribe.unsubscribe();\n  }\n}\n","module.exports = \"<tabset *ngIf=\\\"selection.hasSingleSelection\\\">\\n  <tab i18n-heading heading=\\\"Details\\\">\\n    <div *ngIf=\\\"bucket\\\">\\n      <table class=\\\"table table-striped table-bordered\\\">\\n        <tbody>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Name</td>\\n            <td class=\\\"col-sm-3\\\">{{ bucket.bucket }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">ID</td>\\n            <td>{{ bucket.id }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Owner</td>\\n            <td>{{ bucket.owner }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Index type</td>\\n            <td>{{ bucket.index_type }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Placement rule</td>\\n            <td>{{ bucket.placement_rule }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Marker</td>\\n            <td>{{ bucket.marker }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Maximum marker</td>\\n            <td>{{ bucket.max_marker }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Version</td>\\n            <td>{{ bucket.ver }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Master version</td>\\n            <td>{{ bucket.master_ver }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Modification time</td>\\n            <td>{{ bucket.mtime }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Zonegroup</td>\\n            <td>{{ bucket.zonegroup }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <!-- Bucket quota -->\\n      <div *ngIf=\\\"bucket.bucket_quota\\\">\\n        <legend i18n>Bucket quota</legend>\\n        <table class=\\\"table table-striped table-bordered\\\">\\n          <tbody>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Enabled</td>\\n              <td class=\\\"col-sm-3\\\">{{ bucket.bucket_quota.enabled ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum size</td>\\n              <td *ngIf=\\\"bucket.bucket_quota.max_size <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"bucket.bucket_quota.max_size > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ bucket.bucket_quota.max_size | dimless }}\\n              </td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum objects</td>\\n              <td *ngIf=\\\"bucket.bucket_quota.max_objects <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"bucket.bucket_quota.max_objects > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ bucket.bucket_quota.max_objects }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-rgw-bucket-details',\n  templateUrl: './rgw-bucket-details.component.html',\n  styleUrls: ['./rgw-bucket-details.component.scss']\n})\nexport class RgwBucketDetailsComponent implements OnChanges {\n  bucket: any;\n\n  @Input() selection: CdTableSelection;\n\n  constructor() {}\n\n  ngOnChanges() {\n    if (this.selection.hasSelection) {\n      this.bucket = this.selection.first();\n    }\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\"\\n        i18n>Object Gateway</li>\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a routerLink=\\\"/rgw/bucket\\\"\\n         i18n>Buckets</a>\\n    </li>\\n    <li class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\"\\n        i18n>\\n      {editing, select, 1 {Edit} other {Add}}\\n    </li>\\n  </ol>\\n</nav>\\n\\n<cd-loading-panel *ngIf=\\\"editing && loading && !error\\\"\\n                  i18n>\\n  Loading bucket data...\\n</cd-loading-panel>\\n<cd-error-panel *ngIf=\\\"editing && error\\\"\\n                (backAction)=\\\"goToListView()\\\"\\n                i18n>\\n  The bucket data could not be loaded.\\n</cd-error-panel>\\n\\n<div class=\\\"col-sm-12 col-lg-6\\\"\\n     *ngIf=\\\"!loading && !error\\\">\\n  <form name=\\\"bucketForm\\\"\\n        class=\\\"form-horizontal\\\"\\n        #frm=\\\"ngForm\\\"\\n        [formGroup]=\\\"bucketForm\\\"\\n        novalidate>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\"\\n            i18n>\\n          {editing, select, 1 {Edit} other {Add}} bucket\\n        </h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n\\n        <!-- Id -->\\n        <div class=\\\"form-group\\\"\\n             *ngIf=\\\"editing\\\">\\n          <label i18n\\n                 class=\\\"col-sm-3 control-label\\\"\\n                 for=\\\"id\\\">Id</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"id\\\"\\n                   name=\\\"id\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   formControlName=\\\"id\\\"\\n                   readonly>\\n          </div>\\n        </div>\\n\\n        <!-- Name -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': bucketForm.showError('bucket', frm)}\\\">\\n          <label i18n\\n                 class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"bucket\\\">Name\\n            <span class=\\\"required\\\"\\n                  *ngIf=\\\"!editing\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"bucket\\\"\\n                   name=\\\"bucket\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   i18n-placeholder\\n                   placeholder=\\\"Name...\\\"\\n                   formControlName=\\\"bucket\\\"\\n                   [readonly]=\\\"editing\\\"\\n                   autofocus>\\n            <span i18n\\n                  class=\\\"help-block\\\"\\n                  *ngIf=\\\"bucketForm.showError('bucket', frm, 'required')\\\">\\n              This field is required.\\n            </span>\\n            <span i18n\\n                  class=\\\"help-block\\\"\\n                  *ngIf=\\\"bucketForm.showError('bucket', frm, 'bucketNameInvalid')\\\">\\n              The value is not valid.\\n            </span>\\n            <span i18n\\n                  class=\\\"help-block\\\"\\n                  *ngIf=\\\"bucketForm.showError('bucket', frm, 'bucketNameExists')\\\">\\n              The chosen name is already in use.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Owner -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': bucketForm.showError('owner', frm)}\\\">\\n          <label i18n\\n                 class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"owner\\\">Owner\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <select id=\\\"owner\\\"\\n                    name=\\\"owner\\\"\\n                    class=\\\"form-control\\\"\\n                    formControlName=\\\"owner\\\">\\n              <option i18n\\n                      *ngIf=\\\"owners === null\\\"\\n                      [ngValue]=\\\"null\\\">Loading...\\n              </option>\\n              <option i18n\\n                      *ngIf=\\\"owners !== null\\\"\\n                      [ngValue]=\\\"null\\\">-- Select a user --\\n              </option>\\n              <option *ngFor=\\\"let owner of owners\\\"\\n                      [value]=\\\"owner\\\">{{ owner }}</option>\\n            </select>\\n            <span i18n\\n                  class=\\\"help-block\\\"\\n                  *ngIf=\\\"bucketForm.showError('owner', frm, 'required')\\\">\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button type=\\\"button\\\"\\n                            (submitAction)=\\\"submit()\\\"\\n                            [form]=\\\"bucketForm\\\"\\n                            i18n>\\n            {editing, select, 1 {Update} other {Add}}\\n          </cd-submit-button>\\n          <button i18n\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-default\\\"\\n                  routerLink=\\\"/rgw/bucket\\\">\\n            Back\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport * as _ from 'lodash';\n\nimport { RgwBucketService } from '../../../shared/api/rgw-bucket.service';\nimport { RgwUserService } from '../../../shared/api/rgw-user.service';\nimport { CdFormBuilder } from '../../../shared/forms/cd-form-builder';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\n\n@Component({\n  selector: 'cd-rgw-bucket-form',\n  templateUrl: './rgw-bucket-form.component.html',\n  styleUrls: ['./rgw-bucket-form.component.scss']\n})\nexport class RgwBucketFormComponent implements OnInit {\n  bucketForm: CdFormGroup;\n  editing = false;\n  error = false;\n  loading = false;\n  owners = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: CdFormBuilder,\n    private rgwBucketService: RgwBucketService,\n    private rgwUserService: RgwUserService\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.bucketForm = this.formBuilder.group({\n      id: [null],\n      bucket: [null, [Validators.required], [this.bucketNameValidator()]],\n      owner: [null, [Validators.required]]\n    });\n  }\n\n  ngOnInit() {\n    // Get the list of possible owners.\n    this.rgwUserService.enumerate().subscribe((resp: string[]) => {\n      this.owners = resp.sort();\n    });\n\n    // Process route parameters.\n    this.route.params.subscribe(\n      (params: { bucket: string }) => {\n        if (!params.hasOwnProperty('bucket')) {\n          return;\n        }\n        params.bucket = decodeURIComponent(params.bucket);\n        this.loading = true;\n        // Load the bucket data in 'edit' mode.\n        this.editing = true;\n        this.rgwBucketService.get(params.bucket).subscribe((resp: object) => {\n          this.loading = false;\n          // Get the default values.\n          const defaults = _.clone(this.bucketForm.value);\n          // Extract the values displayed in the form.\n          let value = _.pick(resp, _.keys(this.bucketForm.value));\n          // Append default values.\n          value = _.merge(defaults, value);\n          // Update the form.\n          this.bucketForm.setValue(value);\n        });\n      },\n      (error) => {\n        this.error = error;\n      }\n    );\n  }\n\n  goToListView() {\n    this.router.navigate(['/rgw/bucket']);\n  }\n\n  submit() {\n    // Exit immediately if the form isn't dirty.\n    if (this.bucketForm.pristine) {\n      this.goToListView();\n    }\n    const bucketCtl = this.bucketForm.get('bucket');\n    const ownerCtl = this.bucketForm.get('owner');\n    if (this.editing) {\n      // Edit\n      const idCtl = this.bucketForm.get('id');\n      this.rgwBucketService.update(bucketCtl.value, idCtl.value, ownerCtl.value).subscribe(\n        () => {\n          this.goToListView();\n        },\n        () => {\n          // Reset the 'Submit' button.\n          this.bucketForm.setErrors({ cdSubmitButton: true });\n        }\n      );\n    } else {\n      // Add\n      this.rgwBucketService.create(bucketCtl.value, ownerCtl.value).subscribe(\n        () => {\n          this.goToListView();\n        },\n        () => {\n          // Reset the 'Submit' button.\n          this.bucketForm.setErrors({ cdSubmitButton: true });\n        }\n      );\n    }\n  }\n\n  bucketNameValidator(): AsyncValidatorFn {\n    const rgwBucketService = this.rgwBucketService;\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      return new Promise((resolve) => {\n        // Exit immediately if user has not interacted with the control yet\n        // or the control value is empty.\n        if (control.pristine || control.value === '') {\n          resolve(null);\n          return;\n        }\n        // Validate the bucket name.\n        const nameRe = /^[0-9A-Za-z][\\w-\\.]{2,254}$/;\n        if (!nameRe.test(control.value)) {\n          resolve({ bucketNameInvalid: true });\n          return;\n        }\n        // Does any bucket with the given name already exist?\n        rgwBucketService.exists(control.value).subscribe((resp: boolean) => {\n          if (!resp) {\n            resolve(null);\n          } else {\n            resolve({ bucketNameExists: true });\n          }\n        });\n      });\n    };\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Object Gateway</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Buckets</li>\\n  </ol>\\n</nav>\\n<cd-table #table\\n          [autoReload]=\\\"false\\\"\\n          [data]=\\\"buckets\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          selectionType=\\\"multi\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\"\\n          identifier=\\\"bucket\\\"\\n          (fetchData)=\\\"getBucketList()\\\">\\n  <div class=\\\"table-actions\\\">\\n    <div class=\\\"btn-group\\\"\\n         dropdown>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.create && (\\n                       permission.update && permission.delete && !selection.hasSelection ||\\n                       !permission.update && !permission.delete ||\\n                       !permission.update && permission.delete && !selection.hasMultiSelection ||\\n                       permission.update && !selection.hasSingleSelection && !permission.delete)\\\"\\n              routerLink=\\\"/rgw/bucket/add\\\">\\n        <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n        <ng-container i18n>Add</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\"\\n              *ngIf=\\\"permission.update && (!permission.create && !selection.hasMultiSelection || selection.hasSingleSelection)\\\"\\n              routerLink=\\\"/rgw/bucket/edit/{{ selection.first()?.bucket | encodeUri }}\\\">\\n        <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n        <ng-container i18n>Edit</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\"\\n              *ngIf=\\\"permission.delete && (!permission.update && !permission.create || selection.hasMultiSelection)\\\"\\n              (click)=\\\"deleteAction()\\\">\\n        <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n        <ng-container i18n>Delete</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\\\"\\n              *ngIf=\\\"((permission.create?1:0) + (permission.update?1:0) + (permission.delete?1:0)) > 1\\\"\\n              dropdownToggle>\\n        <span class=\\\"caret\\\"></span>\\n        <span class=\\\"sr-only\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\"\\n          *dropdownMenu\\n          role=\\\"menu\\\">\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rgw/bucket/add\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n            Add\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rgw/bucket/edit/{{ selection.first()?.bucket | encodeUri }}\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n            Edit\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.delete\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"deleteAction()\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n            Delete\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <cd-rgw-bucket-details cdTableDetail\\n                         [selection]=\\\"selection\\\">\\n  </cd-rgw-bucket-details>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, ViewChild } from '@angular/core';\n\nimport { BsModalService } from 'ngx-bootstrap';\nimport { forkJoin as observableForkJoin, Observable, Subscriber } from 'rxjs';\n\nimport { RgwBucketService } from '../../../shared/api/rgw-bucket.service';\nimport { DeletionModalComponent } from '../../../shared/components/deletion-modal/deletion-modal.component';\nimport { TableComponent } from '../../../shared/datatable/table/table.component';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { Permission } from '../../../shared/models/permissions';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-rgw-bucket-list',\n  templateUrl: './rgw-bucket-list.component.html',\n  styleUrls: ['./rgw-bucket-list.component.scss']\n})\nexport class RgwBucketListComponent {\n  @ViewChild(TableComponent) table: TableComponent;\n\n  permission: Permission;\n  columns: CdTableColumn[] = [];\n  buckets: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rgwBucketService: RgwBucketService,\n    private bsModalService: BsModalService\n  ) {\n    this.permission = this.authStorageService.getPermissions().rgw;\n    this.columns = [\n      {\n        name: 'Name',\n        prop: 'bucket',\n        flexGrow: 1\n      },\n      {\n        name: 'Owner',\n        prop: 'owner',\n        flexGrow: 1\n      }\n    ];\n  }\n\n  getBucketList() {\n    this.rgwBucketService.list().subscribe(\n      (resp: object[]) => {\n        this.buckets = resp;\n      },\n      () => {\n        // Force datatable to hide the loading indicator in\n        // case of an error.\n        this.buckets = [];\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteAction() {\n    const modalRef = this.bsModalService.show(DeletionModalComponent);\n    modalRef.content.setUp({\n      metaType: this.selection.hasSingleSelection ? 'bucket' : 'buckets',\n      deletionObserver: (): Observable<any> => {\n        return new Observable((observer: Subscriber<any>) => {\n          // Delete all selected data table rows.\n          observableForkJoin(\n            this.selection.selected.map((bucket: any) => {\n              return this.rgwBucketService.delete(bucket.bucket);\n            })\n          ).subscribe(\n            null,\n            (error) => {\n              // Forward the error to the observer.\n              observer.error(error);\n              // Reload the data table content because some deletions might\n              // have been executed successfully in the meanwhile.\n              this.table.refreshBtn();\n            },\n            () => {\n              // Notify the observer that we are done.\n              observer.complete();\n              // Reload the data table content.\n              this.table.refreshBtn();\n            }\n          );\n        });\n      },\n      modalRef: modalRef\n    });\n  }\n}\n","module.exports = \"<tabset *ngIf=\\\"selection.hasSingleSelection\\\">\\n  <tab i18n-heading\\n       heading=\\\"Details\\\">\\n    <cd-table-key-value [data]=\\\"metadata\\\"\\n                        (fetchData)=\\\"getMetaData()\\\">\\n    </cd-table-key-value>\\n  </tab>\\n  <tab i18n-heading\\n       heading=\\\"Performance Counters\\\">\\n    <cd-table-performance-counter serviceType=\\\"rgw\\\"\\n                                  [serviceId]=\\\"serviceId\\\">\\n    </cd-table-performance-counter>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { RgwDaemonService } from '../../../shared/api/rgw-daemon.service';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\n\n@Component({\n  selector: 'cd-rgw-daemon-details',\n  templateUrl: './rgw-daemon-details.component.html',\n  styleUrls: ['./rgw-daemon-details.component.scss']\n})\nexport class RgwDaemonDetailsComponent implements OnChanges {\n  metadata: any;\n  serviceId = '';\n\n  @Input() selection: CdTableSelection;\n\n  constructor(private rgwDaemonService: RgwDaemonService) {}\n\n  ngOnChanges() {\n    // Get the service id of the first selected row.\n    if (this.selection.hasSelection) {\n      this.serviceId = this.selection.first().id;\n    }\n  }\n\n  getMetaData() {\n    if (_.isEmpty(this.serviceId)) {\n      return;\n    }\n    this.rgwDaemonService.get(this.serviceId).subscribe((resp) => {\n      this.metadata = resp['rgw_metadata'];\n    });\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Object Gateway</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Daemons</li>\\n  </ol>\\n</nav>\\n\\n<cd-table [data]=\\\"daemons\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          selectionType=\\\"single\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\"\\n          (fetchData)=\\\"getDaemonList()\\\">\\n  <cd-rgw-daemon-details cdTableDetail\\n                         [selection]=\\\"selection\\\">\\n  </cd-rgw-daemon-details>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { RgwDaemonService } from '../../../shared/api/rgw-daemon.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { CephShortVersionPipe } from '../../../shared/pipes/ceph-short-version.pipe';\n\n@Component({\n  selector: 'cd-rgw-daemon-list',\n  templateUrl: './rgw-daemon-list.component.html',\n  styleUrls: ['./rgw-daemon-list.component.scss']\n})\nexport class RgwDaemonListComponent {\n  columns: CdTableColumn[] = [];\n  daemons: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n\n  constructor(\n    private rgwDaemonService: RgwDaemonService,\n    cephShortVersionPipe: CephShortVersionPipe\n  ) {\n    this.columns = [\n      {\n        name: 'ID',\n        prop: 'id',\n        flexGrow: 2\n      },\n      {\n        name: 'Hostname',\n        prop: 'server_hostname',\n        flexGrow: 2\n      },\n      {\n        name: 'Version',\n        prop: 'version',\n        flexGrow: 1,\n        pipe: cephShortVersionPipe\n      }\n    ];\n  }\n\n  getDaemonList() {\n    this.rgwDaemonService.list().subscribe(\n      (resp: object[]) => {\n        this.daemons = resp;\n      },\n      () => {\n        // Force datatable to hide the loading indicator in\n        // case of an error.\n        this.daemons = [];\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\"\\n      i18n>Capability\\n  </h4>\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form class=\\\"form-horizontal\\\"\\n      #frm=\\\"ngForm\\\"\\n      [formGroup]=\\\"formGroup\\\"\\n      novalidate>\\n  <div class=\\\"modal-body\\\">\\n\\n    <!-- Type -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('type', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"type\\\"\\n             i18n>Type\\n        <span class=\\\"required\\\"\\n              *ngIf=\\\"!editing\\\">\\n        </span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"type\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               *ngIf=\\\"editing\\\"\\n               [readonly]=\\\"true\\\"\\n               formControlName=\\\"type\\\">\\n        <select id=\\\"type\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"type\\\"\\n                *ngIf=\\\"!editing\\\"\\n                autofocus>\\n          <option i18n\\n                  *ngIf=\\\"types !== null\\\"\\n                  [ngValue]=\\\"null\\\">-- Select a type --\\n          </option>\\n          <option *ngFor=\\\"let type of types\\\"\\n                  [value]=\\\"type\\\">{{ type }}</option>\\n        </select>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('type', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n    <!-- Permission -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('perm', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"perm\\\"\\n             i18n>Permission\\n        <span class=\\\"required\\\"></span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <select id=\\\"perm\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"perm\\\">\\n          <option i18n\\n                  [ngValue]=\\\"null\\\">-- Select a permission --\\n          </option>\\n          <option *ngFor=\\\"let perm of ['read', 'write', '*']\\\"\\n                  [value]=\\\"perm\\\">\\n            {{ perm }}\\n          </option>\\n        </select>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('perm', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <cd-submit-button (submitAction)=\\\"onSubmit()\\\"\\n                      [form]=\\\"formGroup\\\"\\n                      i18n>\\n      {editing, select, 1 {Update} other {Add}}\\n    </cd-submit-button>\\n    <button class=\\\"btn btn-sm btn-default\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"bsModalRef.hide()\\\"\\n            i18n>Close\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport * as _ from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { CdFormBuilder } from '../../../shared/forms/cd-form-builder';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { RgwUserCapability } from '../models/rgw-user-capability';\n\n@Component({\n  selector: 'cd-rgw-user-capability-modal',\n  templateUrl: './rgw-user-capability-modal.component.html',\n  styleUrls: ['./rgw-user-capability-modal.component.scss']\n})\nexport class RgwUserCapabilityModalComponent {\n  /**\n   * The event that is triggered when the 'Add' or 'Update' button\n   * has been pressed.\n   */\n  @Output() submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  editing = true;\n  types: string[] = [];\n\n  constructor(private formBuilder: CdFormBuilder, public bsModalRef: BsModalRef) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      type: [null, [Validators.required]],\n      perm: [null, [Validators.required]]\n    });\n  }\n\n  /**\n   * Set the 'editing' flag. If set to TRUE, the modal dialog is in 'Edit' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setEditing(editing: boolean = true) {\n    this.editing = editing;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(type: string, perm: string) {\n    this.formGroup.setValue({\n      type: type,\n      perm: perm\n    });\n  }\n\n  /**\n   * Set the current capabilities of the user.\n   */\n  setCapabilities(capabilities: RgwUserCapability[]) {\n    // Parse the configured capabilities to get a list of types that\n    // should be displayed.\n    const usedTypes = [];\n    capabilities.forEach((capability) => {\n      usedTypes.push(capability.type);\n    });\n    this.types = [];\n    ['users', 'buckets', 'metadata', 'usage', 'zone'].forEach((type) => {\n      if (_.indexOf(usedTypes, type) === -1) {\n        this.types.push(type);\n      }\n    });\n  }\n\n  onSubmit() {\n    const capability: RgwUserCapability = this.formGroup.value;\n    this.submitAction.emit(capability);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"<tabset *ngIf=\\\"selection.hasSingleSelection\\\">\\n  <tab i18n-heading heading=\\\"Details\\\">\\n    <div *ngIf=\\\"user\\\">\\n      <table class=\\\"table table-striped table-bordered\\\">\\n        <tbody>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Username</td>\\n            <td class=\\\"col-sm-3\\\">{{ user.user_id }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Full name</td>\\n            <td class=\\\"col-sm-3\\\">{{ user.display_name }}</td>\\n          </tr>\\n          <tr *ngIf=\\\"user.email.length\\\">\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Email address</td>\\n            <td class=\\\"col-sm-3\\\">{{ user.email }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Suspended</td>\\n            <td class=\\\"col-sm-3\\\">{{ user.suspended ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n          </tr>\\n          <tr>\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Maximum buckets</td>\\n            <td class=\\\"col-sm-3\\\">{{ user.max_buckets }}</td>\\n          </tr>\\n          <tr *ngIf=\\\"user.subusers && user.subusers.length\\\">\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Subusers</td>\\n            <td class=\\\"col-sm-3\\\">\\n              <div *ngFor=\\\"let subuser of user.subusers\\\">\\n                {{ subuser.id }} ({{ subuser.permissions }})\\n              </div>\\n            </td>\\n          </tr>\\n          <tr *ngIf=\\\"user.caps && user.caps.length\\\">\\n            <td i18n\\n                class=\\\"bold col-sm-1\\\">Capabilities</td>\\n            <td class=\\\"col-sm-3\\\">\\n              <div *ngFor=\\\"let cap of user.caps\\\">\\n                {{ cap.type }} ({{ cap.perm }})\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <!-- User quota -->\\n      <div *ngIf=\\\"user.user_quota\\\">\\n        <legend i18n>User quota</legend>\\n        <table class=\\\"table table-striped table-bordered\\\">\\n          <tbody>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Enabled</td>\\n              <td class=\\\"col-sm-3\\\">{{ user.user_quota.enabled ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum size</td>\\n              <td *ngIf=\\\"user.user_quota.max_size <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"user.user_quota.max_size > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ user.user_quota.max_size | dimlessBinary }}\\n              </td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum objects</td>\\n              <td *ngIf=\\\"user.user_quota.max_objects <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"user.user_quota.max_objects > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ user.user_quota.max_objects }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <!-- Bucket quota -->\\n      <div *ngIf=\\\"user.bucket_quota\\\">\\n        <legend i18n>Bucket quota</legend>\\n        <table class=\\\"table table-striped table-bordered\\\">\\n          <tbody>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Enabled</td>\\n              <td class=\\\"col-sm-3\\\">{{ user.bucket_quota.enabled ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum size</td>\\n              <td *ngIf=\\\"user.bucket_quota.max_size <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"user.bucket_quota.max_size > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ user.bucket_quota.max_size | dimlessBinary }}\\n              </td>\\n            </tr>\\n            <tr>\\n              <td i18n\\n                  class=\\\"bold col-sm-1\\\">Maximum objects</td>\\n              <td *ngIf=\\\"user.bucket_quota.max_objects <= -1\\\"\\n                  i18n\\n                  class=\\\"col-sm-3\\\">Unlimited</td>\\n              <td *ngIf=\\\"user.bucket_quota.max_objects > -1\\\"\\n                  class=\\\"col-sm-3\\\">\\n                {{ user.bucket_quota.max_objects }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </tab>\\n\\n  <tab i18n-heading heading=\\\"Keys\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <cd-table [data]=\\\"keys\\\"\\n                [columns]=\\\"keysColumns\\\"\\n                columnMode=\\\"flex\\\"\\n                selectionType=\\\"multi\\\"\\n                forceIdentifier=\\\"true\\\"\\n                (updateSelection)=\\\"updateKeysSelection($event)\\\">\\n        <div class=\\\"table-actions\\\">\\n          <div class=\\\"btn-group\\\" dropdown>\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-sm btn-primary\\\"\\n                    [disabled]=\\\"!keysSelection.hasSingleSelection\\\"\\n                    (click)=\\\"showKeyModal()\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n              <ng-container i18n>Show</ng-container>\\n            </button>\\n          </div>\\n        </div>\\n      </cd-table>\\n    </form>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { BsModalService } from 'ngx-bootstrap';\n\nimport { RgwUserService } from '../../../shared/api/rgw-user.service';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\nimport { RgwUserSwiftKey } from '../models/rgw-user-swift-key';\nimport { RgwUserS3KeyModalComponent } from '../rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from '../rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@Component({\n  selector: 'cd-rgw-user-details',\n  templateUrl: './rgw-user-details.component.html',\n  styleUrls: ['./rgw-user-details.component.scss']\n})\nexport class RgwUserDetailsComponent implements OnChanges, OnInit {\n  @ViewChild('accessKeyTpl') public accessKeyTpl: TemplateRef<any>;\n  @ViewChild('secretKeyTpl') public secretKeyTpl: TemplateRef<any>;\n\n  @Input() selection: CdTableSelection;\n\n  // Details tab\n  user: any;\n\n  // Keys tab\n  keys: any = [];\n  keysColumns: CdTableColumn[] = [];\n  keysSelection: CdTableSelection = new CdTableSelection();\n\n  constructor(private rgwUserService: RgwUserService, private bsModalService: BsModalService) {}\n\n  ngOnInit() {\n    this.keysColumns = [\n      {\n        name: 'Username',\n        prop: 'username',\n        flexGrow: 1\n      },\n      {\n        name: 'Type',\n        prop: 'type',\n        flexGrow: 1\n      }\n    ];\n  }\n\n  ngOnChanges() {\n    if (this.selection.hasSelection) {\n      this.user = this.selection.first();\n\n      // Sort subusers and capabilities.\n      this.user.subusers = _.sortBy(this.user.subusers, 'id');\n      this.user.caps = _.sortBy(this.user.caps, 'type');\n\n      // Load the user/bucket quota of the selected user.\n      if (this.user.tenant === '') {\n        this.rgwUserService.getQuota(this.user.user_id).subscribe((resp: object) => {\n          _.extend(this.user, resp);\n        });\n      }\n\n      // Process the keys.\n      this.keys = [];\n      this.user.keys.forEach((key: RgwUserS3Key) => {\n        this.keys.push({\n          id: this.keys.length + 1, // Create an unique identifier\n          type: 'S3',\n          username: key.user,\n          ref: key\n        });\n      });\n      this.user.swift_keys.forEach((key: RgwUserSwiftKey) => {\n        this.keys.push({\n          id: this.keys.length + 1, // Create an unique identifier\n          type: 'Swift',\n          username: key.user,\n          ref: key\n        });\n      });\n      this.keys = _.sortBy(this.keys, 'user');\n    }\n  }\n\n  updateKeysSelection(selection: CdTableSelection) {\n    this.keysSelection = selection;\n  }\n\n  showKeyModal() {\n    const key = this.keysSelection.first();\n    const modalRef = this.bsModalService.show(\n      key.type === 'S3' ? RgwUserS3KeyModalComponent : RgwUserSwiftKeyModalComponent\n    );\n    switch (key.type) {\n      case 'S3':\n        modalRef.content.setViewing();\n        modalRef.content.setValues(key.ref.user, key.ref.access_key, key.ref.secret_key);\n        break;\n      case 'Swift':\n        modalRef.content.setValues(key.ref.user, key.ref.secret_key);\n        break;\n    }\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li class=\\\"breadcrumb-item\\\"\\n        i18n>Object Gateway</li>\\n    <li class=\\\"breadcrumb-item\\\">\\n      <a routerLink=\\\"/rgw/user\\\"\\n         i18n>Users</a>\\n    </li>\\n    <li class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\"\\n        i18n>\\n      {editing, select, 1 {Edit} other {Add}}\\n    </li>\\n  </ol>\\n</nav>\\n\\n<cd-loading-panel *ngIf=\\\"editing && loading && !error\\\"\\n                  i18n>\\n  Loading user data...\\n</cd-loading-panel>\\n<cd-error-panel *ngIf=\\\"editing && error\\\"\\n                (backAction)=\\\"goToListView()\\\"\\n                i18n>\\n  The user data could not be loaded.\\n</cd-error-panel>\\n\\n<div class=\\\"col-sm-12 col-lg-6\\\"\\n     *ngIf=\\\"!loading && !error\\\">\\n  <form class=\\\"form-horizontal\\\"\\n        #frm=\\\"ngForm\\\"\\n        [formGroup]=\\\"userForm\\\"\\n        novalidate>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">\\n          {editing, select, 1 {Edit} other {Add}} user\\n        </h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n\\n        <!-- Username -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': userForm.showError('user_id', frm)}\\\">\\n          <label class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"user_id\\\"\\n                 i18n>Username\\n            <span class=\\\"required\\\"\\n                  *ngIf=\\\"!editing\\\">\\n            </span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"user_id\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   formControlName=\\\"user_id\\\"\\n                   [readonly]=\\\"editing\\\"\\n                   autofocus>\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('user_id', frm, 'required')\\\"\\n                  i18n>\\n              This field is required.\\n            </span>\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('user_id', frm, 'userIdExists')\\\"\\n                  i18n>\\n              The chosen user ID is already in use.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Full name -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': userForm.showError('display_name', frm)}\\\">\\n          <label class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"display_name\\\"\\n                 i18n>Full name\\n            <span class=\\\"required\\\"\\n                  *ngIf=\\\"!editing\\\">\\n            </span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"display_name\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   formControlName=\\\"display_name\\\">\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('display_name', frm, 'required')\\\"\\n                  i18n>\\n              This field is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Email address -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': userForm.showError('email', frm)}\\\">\\n          <label class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"email\\\"\\n                 i18n>Email address\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"email\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   formControlName=\\\"email\\\">\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('email', frm, 'email')\\\"\\n                  i18n>\\n              This is not a valid email address.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Max. buckets -->\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': userForm.showError('max_buckets', frm)}\\\">\\n          <label class=\\\"control-label col-sm-3\\\"\\n                 for=\\\"max_buckets\\\"\\n                 i18n>Max. buckets\\n            <span class=\\\"required\\\"></span>\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <input id=\\\"max_buckets\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"number\\\"\\n                   formControlName=\\\"max_buckets\\\">\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('max_buckets', frm, 'required')\\\"\\n                  i18n>\\n              This field is required.\\n            </span>\\n            <span class=\\\"help-block\\\"\\n                  *ngIf=\\\"userForm.showError('max_buckets', frm, 'min')\\\"\\n                  i18n>\\n              The entered value must be >= 0.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- Suspended -->\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n            <div class=\\\"checkbox checkbox-primary\\\">\\n              <input id=\\\"suspended\\\"\\n                     type=\\\"checkbox\\\"\\n                     formControlName=\\\"suspended\\\">\\n              <label for=\\\"suspended\\\"\\n                     i18n>Suspended\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- S3 key -->\\n        <fieldset *ngIf=\\\"!editing\\\">\\n          <legend i18n>S3 key</legend>\\n\\n          <!-- Auto-generate key -->\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"generate_key\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"generate_key\\\">\\n                <label for=\\\"generate_key\\\"\\n                       i18n>Auto-generate key\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Access key -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('access_key', frm)}\\\"\\n               *ngIf=\\\"!editing && !userForm.getValue('generate_key')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"access_key\\\"\\n                   i18n>Access key\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <div class=\\\"input-group\\\">\\n                <input id=\\\"access_key\\\"\\n                       class=\\\"form-control\\\"\\n                       type=\\\"password\\\"\\n                       formControlName=\\\"access_key\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default\\\"\\n                          cdPasswordButton=\\\"access_key\\\">\\n                  </button>\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default\\\"\\n                          cdCopy2ClipboardButton=\\\"access_key\\\">\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('access_key', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Secret key -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('secret_key', frm)}\\\"\\n               *ngIf=\\\"!editing && !userForm.getValue('generate_key')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"secret_key\\\"\\n                   i18n>Secret key\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <div class=\\\"input-group\\\">\\n                <input id=\\\"secret_key\\\"\\n                       class=\\\"form-control\\\"\\n                       type=\\\"password\\\"\\n                       formControlName=\\\"secret_key\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default\\\"\\n                          cdPasswordButton=\\\"secret_key\\\">\\n                  </button>\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default\\\"\\n                          cdCopy2ClipboardButton=\\\"secret_key\\\">\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('secret_key', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n            </div>\\n          </div>\\n        </fieldset>\\n\\n        <!-- Subusers -->\\n        <fieldset *ngIf=\\\"editing\\\">\\n          <legend i18n>Subusers</legend>\\n\\n          <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n            <span *ngIf=\\\"subusers.length === 0\\\"\\n                  class=\\\"form-control no-border\\\">\\n              <span class=\\\"text-muted\\\"\\n                    i18n>\\n                There are no subusers.\\n              </span>\\n            </span>\\n\\n            <span *ngFor=\\\"let subuser of subusers; let i=index;\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">\\n                  <i class=\\\"icon-prepend fa fa-user\\\"></i>\\n                </span>\\n                <input type=\\\"text\\\"\\n                       class=\\\"form-control\\\"\\n                       value=\\\"{{ subuser.id }}\\\"\\n                       readonly>\\n                <span class=\\\"input-group-addon\\\"\\n                      style=\\\"border-left: 0; border-right: 0;\\\">\\n                  <i class=\\\"icon-prepend fa fa-share-alt\\\"></i>\\n                </span>\\n                <input type=\\\"text\\\"\\n                       class=\\\"form-control\\\"\\n                       value=\\\"{{ ('full-control' === subuser.permissions) ? 'full' : subuser.permissions }}\\\"\\n                       readonly>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_showSubuserButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Edit\\\"\\n                          (click)=\\\"showSubuserModal(i)\\\">\\n                    <i class=\\\"fa fa-cogs\\\"></i>\\n                  </button>\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_deleteSubuserButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Delete\\\"\\n                          (click)=\\\"deleteSubuser(i)\\\">\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"></span>\\n            </span>\\n\\n            <span class=\\\"form-control no-border\\\">\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-sm btn-default btn-label pull-right tc_addSubuserButton\\\"\\n                      (click)=\\\"showSubuserModal()\\\">\\n                <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n                <ng-container i18n>Add subuser</ng-container>\\n              </button>\\n            </span>\\n          </div>\\n        </fieldset>\\n\\n        <!-- Keys -->\\n        <fieldset *ngIf=\\\"editing\\\">\\n          <legend i18n>Keys</legend>\\n\\n          <!-- S3 keys -->\\n          <label class=\\\"col-sm-3 control-label\\\"\\n                 i18n>S3\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <span *ngIf=\\\"s3Keys.length === 0\\\"\\n                  class=\\\"form-control no-border\\\">\\n              <span class=\\\"text-muted\\\"\\n                    i18n>\\n                There are no keys.\\n              </span>\\n            </span>\\n\\n            <span *ngFor=\\\"let key of s3Keys; let i=index;\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">\\n                  <i class=\\\"icon-prepend fa fa-key\\\"></i>\\n                </span>\\n                <input type=\\\"text\\\"\\n                       class=\\\"form-control\\\"\\n                       value=\\\"{{ key.user }}\\\"\\n                       readonly>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_showS3KeyButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Show\\\"\\n                          (click)=\\\"showS3KeyModal(i)\\\">\\n                    <i class=\\\"fa fa-eye\\\"></i>\\n                  </button>\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_deleteS3KeyButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Delete\\\"\\n                          (click)=\\\"deleteS3Key(i)\\\">\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"></span>\\n            </span>\\n\\n            <span class=\\\"form-control no-border\\\">\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-sm btn-default btn-label pull-right tc_addS3KeyButton\\\"\\n                      (click)=\\\"showS3KeyModal()\\\">\\n                <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n                <ng-container i18n>Add S3 key</ng-container>\\n              </button>\\n            </span>\\n            <hr>\\n          </div>\\n\\n          <!-- Swift keys -->\\n          <label class=\\\"col-sm-3 control-label\\\"\\n                 i18n>Swift\\n          </label>\\n          <div class=\\\"col-sm-9\\\">\\n            <span *ngIf=\\\"swiftKeys.length === 0\\\"\\n                  class=\\\"form-control no-border\\\">\\n              <span class=\\\"text-muted\\\"\\n                    i18n>\\n                There are no keys.\\n              </span>\\n            </span>\\n\\n            <span *ngFor=\\\"let key of swiftKeys; let i=index;\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">\\n                  <i class=\\\"icon-prepend fa fa-key\\\"></i>\\n                </span>\\n                <input type=\\\"text\\\"\\n                       class=\\\"form-control\\\"\\n                       value=\\\"{{ key.user }}\\\"\\n                       readonly>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_showSwiftKeyButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Show\\\"\\n                          (click)=\\\"showSwiftKeyModal(i)\\\">\\n                    <i class=\\\"fa fa-eye\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"></span>\\n            </span>\\n          </div>\\n        </fieldset>\\n\\n        <!-- Capabilities -->\\n        <fieldset *ngIf=\\\"editing\\\">\\n          <legend i18n>Capabilities</legend>\\n\\n          <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n            <span *ngIf=\\\"capabilities.length === 0\\\"\\n                  class=\\\"form-control no-border\\\">\\n              <span class=\\\"text-muted\\\"\\n                    i18n>\\n                There are no capabilities.\\n              </span>\\n            </span>\\n\\n            <span *ngFor=\\\"let cap of capabilities; let i=index;\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-addon\\\">\\n                  <i class=\\\"icon-prepend fa fa-share-alt\\\"></i>\\n                </span>\\n                <input type=\\\"text\\\"\\n                       class=\\\"form-control\\\"\\n                       value=\\\"{{ cap.type }}:{{ cap.perm }}\\\"\\n                       readonly>\\n                <span class=\\\"input-group-btn\\\">\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_editCapButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Edit\\\"\\n                          (click)=\\\"showCapabilityModal(i)\\\">\\n                    <i class=\\\"fa fa-cogs\\\"></i>\\n                  </button>\\n                  <button type=\\\"button\\\"\\n                          class=\\\"btn btn-default tc_deleteCapButton\\\"\\n                          i18n-tooltip\\n                          tooltip=\\\"Delete\\\"\\n                          (click)=\\\"deleteCapability(i)\\\">\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <span class=\\\"help-block\\\"></span>\\n            </span>\\n\\n            <span class=\\\"form-control no-border\\\">\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-sm btn-default btn-label pull-right tc_addCapButton\\\"\\n                      (click)=\\\"showCapabilityModal()\\\">\\n                <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n                <ng-container i18n>Add capability</ng-container>\\n              </button>\\n            </span>\\n          </div>\\n        </fieldset>\\n\\n        <!-- User quota -->\\n        <fieldset>\\n          <legend i18n>User quota</legend>\\n\\n          <!-- Enabled -->\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"user_quota_enabled\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"user_quota_enabled\\\">\\n                <label for=\\\"user_quota_enabled\\\"\\n                       i18n>Enabled\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Unlimited size -->\\n          <div class=\\\"form-group\\\"\\n               *ngIf=\\\"userForm.controls.user_quota_enabled.value\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"user_quota_max_size_unlimited\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"user_quota_max_size_unlimited\\\">\\n                <label for=\\\"user_quota_max_size_unlimited\\\"\\n                       i18n>Unlimited size\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Maximum size -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('user_quota_max_size', frm)}\\\"\\n               *ngIf=\\\"!userForm.getValue('user_quota_max_size_unlimited')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"user_quota_max_size\\\"\\n                   i18n>Max. size\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input id=\\\"user_quota_max_size\\\"\\n                     class=\\\"form-control\\\"\\n                     type=\\\"text\\\"\\n                     formControlName=\\\"user_quota_max_size\\\">\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('user_quota_max_size', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('user_quota_max_size', frm, 'quotaMaxSize')\\\"\\n                    i18n>\\n                The value is not valid.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Unlimited objects -->\\n          <div class=\\\"form-group\\\"\\n               *ngIf=\\\"userForm.controls.user_quota_enabled.value\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"user_quota_max_objects_unlimited\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"user_quota_max_objects_unlimited\\\">\\n                <label for=\\\"user_quota_max_objects_unlimited\\\"\\n                       i18n>Unlimited objects\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Maximum objects -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('user_quota_max_objects', frm)}\\\"\\n               *ngIf=\\\"!userForm.getValue('user_quota_max_objects_unlimited')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"user_quota_max_objects\\\"\\n                   i18n>Max. objects\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input id=\\\"user_quota_max_objects\\\"\\n                     class=\\\"form-control\\\"\\n                     type=\\\"number\\\"\\n                     formControlName=\\\"user_quota_max_objects\\\">\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('user_quota_max_objects', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('user_quota_max_objects', frm, 'min')\\\"\\n                    i18n>\\n              The entered value must be >= 0.\\n            </span>\\n            </div>\\n          </div>\\n        </fieldset>\\n\\n        <!-- Bucket quota -->\\n        <fieldset>\\n          <legend i18n>Bucket quota</legend>\\n\\n          <!-- Enabled -->\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"bucket_quota_enabled\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"bucket_quota_enabled\\\">\\n                <label for=\\\"bucket_quota_enabled\\\"\\n                       i18n>Enabled\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Unlimited size -->\\n          <div class=\\\"form-group\\\"\\n               *ngIf=\\\"userForm.controls.bucket_quota_enabled.value\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"bucket_quota_max_size_unlimited\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"bucket_quota_max_size_unlimited\\\">\\n                <label for=\\\"bucket_quota_max_size_unlimited\\\"\\n                       i18n>Unlimited size\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Maximum size -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('bucket_quota_max_size', frm)}\\\"\\n               *ngIf=\\\"!userForm.getValue('bucket_quota_max_size_unlimited')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"bucket_quota_max_size\\\"\\n                   i18n>Max. size\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input id=\\\"bucket_quota_max_size\\\"\\n                     class=\\\"form-control\\\"\\n                     type=\\\"text\\\"\\n                     formControlName=\\\"bucket_quota_max_size\\\">\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('bucket_quota_max_size', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('bucket_quota_max_size', frm, 'quotaMaxSize')\\\"\\n                    i18n>\\n                The value is not valid.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Unlimited objects -->\\n          <div class=\\\"form-group\\\"\\n               *ngIf=\\\"userForm.controls.bucket_quota_enabled.value\\\">\\n            <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n              <div class=\\\"checkbox checkbox-primary\\\">\\n                <input id=\\\"bucket_quota_max_objects_unlimited\\\"\\n                       type=\\\"checkbox\\\"\\n                       formControlName=\\\"bucket_quota_max_objects_unlimited\\\">\\n                <label for=\\\"bucket_quota_max_objects_unlimited\\\"\\n                       i18n>Unlimited objects\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- Maximum objects -->\\n          <div class=\\\"form-group\\\"\\n               [ngClass]=\\\"{'has-error': userForm.showError('bucket_quota_max_objects', frm)}\\\"\\n               *ngIf=\\\"!userForm.getValue('bucket_quota_max_objects_unlimited')\\\">\\n            <label class=\\\"control-label col-sm-3\\\"\\n                   for=\\\"bucket_quota_max_objects\\\"\\n                   i18n>Max. objects\\n              <span class=\\\"required\\\"></span>\\n            </label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input id=\\\"bucket_quota_max_objects\\\"\\n                     class=\\\"form-control\\\"\\n                     type=\\\"number\\\"\\n                     formControlName=\\\"bucket_quota_max_objects\\\">\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('bucket_quota_max_objects', frm, 'required')\\\"\\n                    i18n>\\n                This field is required.\\n              </span>\\n              <span class=\\\"help-block\\\"\\n                    *ngIf=\\\"userForm.showError('bucket_quota_max_objects', frm, 'min')\\\"\\n                    i18n>\\n              The entered value must be >= 0.\\n            </span>\\n            </div>\\n          </div>\\n        </fieldset>\\n      </div>\\n\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button type=\\\"button\\\"\\n                            (submitAction)=\\\"onSubmit()\\\"\\n                            [form]=\\\"userForm\\\"\\n                            i18n>\\n            {editing, select, 1 {Update} other {Add}}\\n          </cd-submit-button>\\n          <button class=\\\"btn btn-sm btn-default\\\"\\n                  type=\\\"button\\\"\\n                  routerLink=\\\"/rgw/user\\\"\\n                  i18n>\\n            Back\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { BsModalService } from 'ngx-bootstrap';\nimport { forkJoin as observableForkJoin, Observable } from 'rxjs';\n\nimport { RgwUserService } from '../../../shared/api/rgw-user.service';\nimport { CdFormBuilder } from '../../../shared/forms/cd-form-builder';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { CdValidators, isEmptyInputValue } from '../../../shared/forms/cd-validators';\nimport { FormatterService } from '../../../shared/services/formatter.service';\nimport { RgwUserCapability } from '../models/rgw-user-capability';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\nimport { RgwUserSubuser } from '../models/rgw-user-subuser';\nimport { RgwUserSwiftKey } from '../models/rgw-user-swift-key';\nimport { RgwUserCapabilityModalComponent } from '../rgw-user-capability-modal/rgw-user-capability-modal.component';\nimport { RgwUserS3KeyModalComponent } from '../rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSubuserModalComponent } from '../rgw-user-subuser-modal/rgw-user-subuser-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from '../rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@Component({\n  selector: 'cd-rgw-user-form',\n  templateUrl: './rgw-user-form.component.html',\n  styleUrls: ['./rgw-user-form.component.scss']\n})\nexport class RgwUserFormComponent implements OnInit {\n  userForm: CdFormGroup;\n  editing = false;\n  error = false;\n  loading = false;\n  submitObservables: Observable<Object>[] = [];\n\n  subusers: RgwUserSubuser[] = [];\n  s3Keys: RgwUserS3Key[] = [];\n  swiftKeys: RgwUserSwiftKey[] = [];\n  capabilities: RgwUserCapability[] = [];\n\n  constructor(\n    private formBuilder: CdFormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private rgwUserService: RgwUserService,\n    private bsModalService: BsModalService\n  ) {\n    this.createForm();\n    this.listenToChanges();\n  }\n\n  createForm() {\n    this.userForm = this.formBuilder.group({\n      // General\n      user_id: [null, [Validators.required], [this.userIdValidator()]],\n      display_name: [null, [Validators.required]],\n      email: [null, [CdValidators.email]],\n      max_buckets: [1000, [Validators.required, Validators.min(0)]],\n      suspended: [false],\n      // S3 key\n      generate_key: [true],\n      access_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      secret_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      // User quota\n      user_quota_enabled: [false],\n      user_quota_max_size_unlimited: [true],\n      user_quota_max_size: [\n        null,\n        [\n          CdValidators.requiredIf({\n            user_quota_enabled: true,\n            user_quota_max_size_unlimited: false\n          }),\n          this.quotaMaxSizeValidator\n        ]\n      ],\n      user_quota_max_objects_unlimited: [true],\n      user_quota_max_objects: [\n        null,\n        [\n          Validators.min(0),\n          CdValidators.requiredIf({\n            user_quota_enabled: true,\n            user_quota_max_objects_unlimited: false\n          })\n        ]\n      ],\n      // Bucket quota\n      bucket_quota_enabled: [false],\n      bucket_quota_max_size_unlimited: [true],\n      bucket_quota_max_size: [\n        null,\n        [\n          CdValidators.requiredIf({\n            bucket_quota_enabled: true,\n            bucket_quota_max_size_unlimited: false\n          }),\n          this.quotaMaxSizeValidator\n        ]\n      ],\n      bucket_quota_max_objects_unlimited: [true],\n      bucket_quota_max_objects: [\n        null,\n        [\n          Validators.min(0),\n          CdValidators.requiredIf({\n            bucket_quota_enabled: true,\n            bucket_quota_max_objects_unlimited: false\n          })\n        ]\n      ]\n    });\n  }\n\n  listenToChanges() {\n    // Reset the validation status of various controls, especially those that are using\n    // the 'requiredIf' validator. This is necessary because the controls itself are not\n    // validated again if the status of their prerequisites have been changed.\n    this.userForm.get('generate_key').valueChanges.subscribe(() => {\n      ['access_key', 'secret_key'].forEach((path) => {\n        this.userForm.get(path).updateValueAndValidity({ onlySelf: true });\n      });\n    });\n    this.userForm.get('user_quota_enabled').valueChanges.subscribe(() => {\n      ['user_quota_max_size', 'user_quota_max_objects'].forEach((path) => {\n        this.userForm.get(path).updateValueAndValidity({ onlySelf: true });\n      });\n    });\n    this.userForm.get('user_quota_max_size_unlimited').valueChanges.subscribe(() => {\n      this.userForm.get('user_quota_max_size').updateValueAndValidity({ onlySelf: true });\n    });\n    this.userForm.get('user_quota_max_objects_unlimited').valueChanges.subscribe(() => {\n      this.userForm.get('user_quota_max_objects').updateValueAndValidity({ onlySelf: true });\n    });\n    this.userForm.get('bucket_quota_enabled').valueChanges.subscribe(() => {\n      ['bucket_quota_max_size', 'bucket_quota_max_objects'].forEach((path) => {\n        this.userForm.get(path).updateValueAndValidity({ onlySelf: true });\n      });\n    });\n    this.userForm.get('bucket_quota_max_size_unlimited').valueChanges.subscribe(() => {\n      this.userForm.get('bucket_quota_max_size').updateValueAndValidity({ onlySelf: true });\n    });\n    this.userForm.get('bucket_quota_max_objects_unlimited').valueChanges.subscribe(() => {\n      this.userForm.get('bucket_quota_max_objects').updateValueAndValidity({ onlySelf: true });\n    });\n  }\n\n  ngOnInit() {\n    // Process route parameters.\n    this.route.params.subscribe((params: { uid: string }) => {\n      if (!params.hasOwnProperty('uid')) {\n        return;\n      }\n      this.loading = true;\n      // Load the user data in 'edit' mode.\n      this.editing = true;\n      // Load the user and quota information.\n      const observables = [];\n      observables.push(this.rgwUserService.get(params.uid));\n      observables.push(this.rgwUserService.getQuota(params.uid));\n      observableForkJoin(observables).subscribe(\n        (resp: any[]) => {\n          this.loading = false;\n          // Get the default values.\n          const defaults = _.clone(this.userForm.value);\n          // Extract the values displayed in the form.\n          let value = _.pick(resp[0], _.keys(this.userForm.value));\n          // Map the quota values.\n          ['user', 'bucket'].forEach((type) => {\n            const quota = resp[1][type + '_quota'];\n            value[type + '_quota_enabled'] = quota.enabled;\n            if (quota.max_size < 0) {\n              value[type + '_quota_max_size_unlimited'] = true;\n              value[type + '_quota_max_size'] = null;\n            } else {\n              value[type + '_quota_max_size_unlimited'] = false;\n              value[type + '_quota_max_size'] = quota.max_size;\n            }\n            if (quota.max_objects < 0) {\n              value[type + '_quota_max_objects_unlimited'] = true;\n              value[type + '_quota_max_objects'] = null;\n            } else {\n              value[type + '_quota_max_objects_unlimited'] = false;\n              value[type + '_quota_max_objects'] = quota.max_objects;\n            }\n          });\n          // Merge with default values.\n          value = _.merge(defaults, value);\n          // Update the form.\n          this.userForm.setValue(value);\n\n          // Get the sub users.\n          this.subusers = resp[0].subusers;\n\n          // Get the keys.\n          this.s3Keys = resp[0].keys;\n          this.swiftKeys = resp[0].swift_keys;\n\n          // Process the capabilities.\n          const mapPerm = { 'read, write': '*' };\n          resp[0].caps.forEach((cap) => {\n            if (cap.perm in mapPerm) {\n              cap.perm = mapPerm[cap.perm];\n            }\n          });\n          this.capabilities = resp[0].caps;\n        },\n        (error) => {\n          this.error = error;\n        }\n      );\n    });\n  }\n\n  goToListView() {\n    this.router.navigate(['/rgw/user']);\n  }\n\n  onSubmit() {\n    // Exit immediately if the form isn't dirty.\n    if (this.userForm.pristine) {\n      this.goToListView();\n    }\n    const uid = this.userForm.getValue('user_id');\n    if (this.editing) {\n      // Edit\n      if (this._isGeneralDirty()) {\n        const args = this._getUpdateArgs();\n        this.submitObservables.push(this.rgwUserService.update(uid, args));\n      }\n    } else {\n      // Add\n      const args = this._getCreateArgs();\n      this.submitObservables.push(this.rgwUserService.create(args));\n    }\n    // Check if user quota has been modified.\n    if (this._isUserQuotaDirty()) {\n      const userQuotaArgs = this._getUserQuotaArgs();\n      this.submitObservables.push(this.rgwUserService.updateQuota(uid, userQuotaArgs));\n    }\n    // Check if bucket quota has been modified.\n    if (this._isBucketQuotaDirty()) {\n      const bucketQuotaArgs = this._getBucketQuotaArgs();\n      this.submitObservables.push(this.rgwUserService.updateQuota(uid, bucketQuotaArgs));\n    }\n    // Finally execute all observables.\n    observableForkJoin(this.submitObservables).subscribe(\n      () => {\n        this.goToListView();\n      },\n      () => {\n        // Reset the 'Submit' button.\n        this.userForm.setErrors({ cdSubmitButton: true });\n      }\n    );\n  }\n\n  /**\n   * Validate the quota maximum size, e.g. 1096, 1K, 30M. Only integer numbers are valid,\n   * something like 1.9M is not recognized as valid.\n   */\n  quotaMaxSizeValidator(control: AbstractControl): ValidationErrors | null {\n    if (isEmptyInputValue(control.value)) {\n      return null;\n    }\n    const m = RegExp('^(\\\\d+)\\\\s*(B|K(B|iB)?|M(B|iB)?|G(B|iB)?|T(B|iB)?)?$', 'i').exec(\n      control.value\n    );\n    if (m === null) {\n      return { quotaMaxSize: true };\n    }\n    const bytes = new FormatterService().toBytes(control.value);\n    return bytes < 1024 ? { quotaMaxSize: true } : null;\n  }\n\n  /**\n   * Validate the username.\n   */\n  userIdValidator(): AsyncValidatorFn {\n    const rgwUserService = this.rgwUserService;\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      return new Promise((resolve) => {\n        // Exit immediately if user has not interacted with the control yet\n        // or the control value is empty.\n        if (control.pristine || control.value === '') {\n          resolve(null);\n          return;\n        }\n        rgwUserService.exists(control.value).subscribe((resp: boolean) => {\n          if (!resp) {\n            resolve(null);\n          } else {\n            resolve({ userIdExists: true });\n          }\n        });\n      });\n    };\n  }\n\n  /**\n   * Add/Update a subuser.\n   */\n  setSubuser(subuser: RgwUserSubuser, index?: number) {\n    const mapPermissions = {\n      'full-control': 'full',\n      'read-write': 'readwrite'\n    };\n    const uid = this.userForm.getValue('user_id');\n    const args = {\n      subuser: subuser.id,\n      access:\n        subuser.permissions in mapPermissions\n          ? mapPermissions[subuser.permissions]\n          : subuser.permissions,\n      key_type: 'swift',\n      secret_key: subuser.secret_key,\n      generate_secret: subuser.generate_secret ? 'true' : 'false'\n    };\n    this.submitObservables.push(this.rgwUserService.createSubuser(uid, args));\n    if (_.isNumber(index)) {\n      // Modify\n      // Create an observable to modify the subuser when the form is submitted.\n      this.subusers[index] = subuser;\n    } else {\n      // Add\n      // Create an observable to add the subuser when the form is submitted.\n      this.subusers.push(subuser);\n      // Add a Swift key. If the secret key is auto-generated, then visualize\n      // this to the user by displaying a notification instead of the key.\n      this.swiftKeys.push({\n        user: subuser.id,\n        secret_key: subuser.generate_secret ? 'Apply your changes first...' : subuser.secret_key\n      });\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete a subuser.\n   * @param {number} index The subuser to delete.\n   */\n  deleteSubuser(index: number) {\n    const subuser = this.subusers[index];\n    // Create an observable to delete the subuser when the form is submitted.\n    this.submitObservables.push(\n      this.rgwUserService.deleteSubuser(this.userForm.getValue('user_id'), subuser.id)\n    );\n    // Remove the associated S3 keys.\n    this.s3Keys = this.s3Keys.filter((key) => {\n      return key.user !== subuser.id;\n    });\n    // Remove the associated Swift keys.\n    this.swiftKeys = this.swiftKeys.filter((key) => {\n      return key.user !== subuser.id;\n    });\n    // Remove the subuser to update the UI.\n    this.subusers.splice(index, 1);\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Add/Update a capability.\n   */\n  setCapability(cap: RgwUserCapability, index?: number) {\n    const uid = this.userForm.getValue('user_id');\n    if (_.isNumber(index)) {\n      // Modify\n      const oldCap = this.capabilities[index];\n      // Note, the RadosGW Admin OPS API does not support the modification of\n      // user capabilities. Because of that it is necessary to delete it and\n      // then to re-add the capability with its new value/permission.\n      this.submitObservables.push(\n        this.rgwUserService.deleteCapability(uid, oldCap.type, oldCap.perm)\n      );\n      this.submitObservables.push(this.rgwUserService.addCapability(uid, cap.type, cap.perm));\n      this.capabilities[index] = cap;\n    } else {\n      // Add\n      // Create an observable to add the capability when the form is submitted.\n      this.submitObservables.push(this.rgwUserService.addCapability(uid, cap.type, cap.perm));\n      this.capabilities.push(cap);\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete the given capability:\n   * - Delete it from the local array to update the UI\n   * - Create an observable that will be executed on form submit\n   * @param {number} index The capability to delete.\n   */\n  deleteCapability(index: number) {\n    const cap = this.capabilities[index];\n    // Create an observable to delete the capability when the form is submitted.\n    this.submitObservables.push(\n      this.rgwUserService.deleteCapability(this.userForm.getValue('user_id'), cap.type, cap.perm)\n    );\n    // Remove the capability to update the UI.\n    this.capabilities.splice(index, 1);\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Add/Update a S3 key.\n   */\n  setS3Key(key: RgwUserS3Key, index?: number) {\n    if (_.isNumber(index)) {\n      // Modify\n      // Nothing to do here at the moment.\n    } else {\n      // Add\n      // Split the key's user name into its user and subuser parts.\n      const userMatches = key.user.match(/([^:]+)(:(.+))?/);\n      // Create an observable to add the S3 key when the form is submitted.\n      const uid = userMatches[1];\n      const args = {\n        subuser: userMatches[2] ? userMatches[3] : '',\n        generate_key: key.generate_key ? 'true' : 'false',\n        access_key: key.access_key,\n        secret_key: key.secret_key\n      };\n      this.submitObservables.push(this.rgwUserService.addS3Key(uid, args));\n      // If the access and the secret key are auto-generated, then visualize\n      // this to the user by displaying a notification instead of the key.\n      this.s3Keys.push({\n        user: key.user,\n        access_key: key.generate_key ? 'Apply your changes first...' : key.access_key,\n        secret_key: key.generate_key ? 'Apply your changes first...' : key.secret_key\n      });\n    }\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Delete a S3 key.\n   * @param {number} index The S3 key to delete.\n   */\n  deleteS3Key(index: number) {\n    const key = this.s3Keys[index];\n    // Create an observable to delete the S3 key when the form is submitted.\n    this.submitObservables.push(\n      this.rgwUserService.deleteS3Key(this.userForm.getValue('user_id'), key.access_key)\n    );\n    // Remove the S3 key to update the UI.\n    this.s3Keys.splice(index, 1);\n    // Mark the form as dirty to be able to submit it.\n    this.userForm.markAsDirty();\n  }\n\n  /**\n   * Show the specified subuser in a modal dialog.\n   * @param {number | undefined} index The subuser to show.\n   */\n  showSubuserModal(index?: number) {\n    const uid = this.userForm.getValue('user_id');\n    const modalRef = this.bsModalService.show(RgwUserSubuserModalComponent);\n    if (_.isNumber(index)) {\n      // Edit\n      const subuser = this.subusers[index];\n      modalRef.content.setEditing();\n      modalRef.content.setValues(uid, subuser.id, subuser.permissions);\n    } else {\n      // Add\n      modalRef.content.setEditing(false);\n      modalRef.content.setValues(uid);\n      modalRef.content.setSubusers(this.subusers);\n    }\n    modalRef.content.submitAction.subscribe((subuser: RgwUserSubuser) => {\n      this.setSubuser(subuser, index);\n    });\n  }\n\n  /**\n   * Show the specified S3 key in a modal dialog.\n   * @param {number | undefined} index The S3 key to show.\n   */\n  showS3KeyModal(index?: number) {\n    const modalRef = this.bsModalService.show(RgwUserS3KeyModalComponent);\n    if (_.isNumber(index)) {\n      // View\n      const key = this.s3Keys[index];\n      modalRef.content.setViewing();\n      modalRef.content.setValues(key.user, key.access_key, key.secret_key);\n    } else {\n      // Add\n      const candidates = this._getS3KeyUserCandidates();\n      modalRef.content.setViewing(false);\n      modalRef.content.setUserCandidates(candidates);\n      modalRef.content.submitAction.subscribe((key: RgwUserS3Key) => {\n        this.setS3Key(key);\n      });\n    }\n  }\n\n  /**\n   * Show the specified Swift key in a modal dialog.\n   * @param {number} index The Swift key to show.\n   */\n  showSwiftKeyModal(index: number) {\n    const modalRef = this.bsModalService.show(RgwUserSwiftKeyModalComponent);\n    const key = this.swiftKeys[index];\n    modalRef.content.setValues(key.user, key.secret_key);\n  }\n\n  /**\n   * Show the specified capability in a modal dialog.\n   * @param {number | undefined} index The S3 key to show.\n   */\n  showCapabilityModal(index?: number) {\n    const modalRef = this.bsModalService.show(RgwUserCapabilityModalComponent);\n    if (_.isNumber(index)) {\n      // Edit\n      const cap = this.capabilities[index];\n      modalRef.content.setEditing();\n      modalRef.content.setValues(cap.type, cap.perm);\n    } else {\n      // Add\n      modalRef.content.setEditing(false);\n      modalRef.content.setCapabilities(this.capabilities);\n    }\n    modalRef.content.submitAction.subscribe((cap: RgwUserCapability) => {\n      this.setCapability(cap, index);\n    });\n  }\n\n  /**\n   * Check if the general user settings (display name, email, ...) have been modified.\n   * @return {Boolean} Returns TRUE if the general user settings have been modified.\n   */\n  private _isGeneralDirty(): boolean {\n    return ['display_name', 'email', 'max_buckets', 'suspended'].some((path) => {\n      return this.userForm.get(path).dirty;\n    });\n  }\n\n  /**\n   * Check if the user quota has been modified.\n   * @return {Boolean} Returns TRUE if the user quota has been modified.\n   */\n  private _isUserQuotaDirty(): boolean {\n    return [\n      'user_quota_enabled',\n      'user_quota_max_size_unlimited',\n      'user_quota_max_size',\n      'user_quota_max_objects_unlimited',\n      'user_quota_max_objects'\n    ].some((path) => {\n      return this.userForm.get(path).dirty;\n    });\n  }\n\n  /**\n   * Check if the bucket quota has been modified.\n   * @return {Boolean} Returns TRUE if the bucket quota has been modified.\n   */\n  private _isBucketQuotaDirty(): boolean {\n    return [\n      'bucket_quota_enabled',\n      'bucket_quota_max_size_unlimited',\n      'bucket_quota_max_size',\n      'bucket_quota_max_objects_unlimited',\n      'bucket_quota_max_objects'\n    ].some((path) => {\n      return this.userForm.get(path).dirty;\n    });\n  }\n\n  /**\n   * Helper function to get the arguments of the API request when a new\n   * user is created.\n   */\n  private _getCreateArgs() {\n    const result = {\n      uid: this.userForm.getValue('user_id'),\n      display_name: this.userForm.getValue('display_name'),\n      suspended: this.userForm.getValue('suspended'),\n      email: '',\n      max_buckets: this.userForm.getValue('max_buckets'),\n      generate_key: this.userForm.getValue('generate_key'),\n      access_key: '',\n      secret_key: ''\n    };\n    const email = this.userForm.getValue('email');\n    if (_.isString(email) && email.length > 0) {\n      _.merge(result, { email: email });\n    }\n    const generateKey = this.userForm.getValue('generate_key');\n    if (!generateKey) {\n      _.merge(result, {\n        generate_key: false,\n        access_key: this.userForm.getValue('access_key'),\n        secret_key: this.userForm.getValue('secret_key')\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the user\n   * configuration has been modified.\n   */\n  private _getUpdateArgs() {\n    const result = {};\n    const keys = ['display_name', 'email', 'max_buckets', 'suspended'];\n    for (const key of keys) {\n      result[key] = this.userForm.getValue(key);\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the user\n   * quota configuration has been modified.\n   */\n  private _getUserQuotaArgs(): object {\n    const result = {\n      quota_type: 'user',\n      enabled: this.userForm.getValue('user_quota_enabled'),\n      max_size_kb: -1,\n      max_objects: -1\n    };\n    if (!this.userForm.getValue('user_quota_max_size_unlimited')) {\n      // Convert the given value to bytes.\n      const bytes = new FormatterService().toBytes(this.userForm.getValue('user_quota_max_size'));\n      // Finally convert the value to KiB.\n      result['max_size_kb'] = (bytes / 1024).toFixed(0) as any;\n    }\n    if (!this.userForm.getValue('user_quota_max_objects_unlimited')) {\n      result['max_objects'] = this.userForm.getValue('user_quota_max_objects');\n    }\n    return result;\n  }\n\n  /**\n   * Helper function to get the arguments for the API request when the bucket\n   * quota configuration has been modified.\n   */\n  private _getBucketQuotaArgs(): object {\n    const result = {\n      quota_type: 'bucket',\n      enabled: this.userForm.getValue('bucket_quota_enabled'),\n      max_size_kb: -1,\n      max_objects: -1\n    };\n    if (!this.userForm.getValue('bucket_quota_max_size_unlimited')) {\n      // Convert the given value to bytes.\n      const bytes = new FormatterService().toBytes(this.userForm.getValue('bucket_quota_max_size'));\n      // Finally convert the value to KiB.\n      result['max_size_kb'] = (bytes / 1024).toFixed(0) as any;\n    }\n    if (!this.userForm.getValue('bucket_quota_max_objects_unlimited')) {\n      result['max_objects'] = this.userForm.getValue('bucket_quota_max_objects');\n    }\n    return result;\n  }\n\n  /**\n   * Helper method to get the user candidates for S3 keys.\n   * @returns {Array} Returns a list of user identifiers.\n   */\n  private _getS3KeyUserCandidates() {\n    let result = [];\n    // Add the current user id.\n    const user_id = this.userForm.getValue('user_id');\n    if (_.isString(user_id) && !_.isEmpty(user_id)) {\n      result.push(user_id);\n    }\n    // Append the subusers.\n    this.subusers.forEach((subUser) => {\n      result.push(subUser.id);\n    });\n    // Note that it's possible to create multiple S3 key pairs for a user,\n    // thus we append already configured users, too.\n    this.s3Keys.forEach((key) => {\n      result.push(key.user);\n    });\n    result = _.uniq(result);\n    return result;\n  }\n}\n","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\n  <ol class=\\\"breadcrumb\\\">\\n    <li i18n\\n        class=\\\"breadcrumb-item\\\">Object Gateway</li>\\n    <li i18n\\n        class=\\\"breadcrumb-item active\\\"\\n        aria-current=\\\"page\\\">Users</li>\\n  </ol>\\n</nav>\\n<cd-table #table\\n          [autoReload]=\\\"false\\\"\\n          [data]=\\\"users\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          selectionType=\\\"multi\\\"\\n          (updateSelection)=\\\"updateSelection($event)\\\"\\n          identifier=\\\"user_id\\\"\\n          (fetchData)=\\\"getUserList()\\\">\\n  <div class=\\\"table-actions\\\">\\n    <div class=\\\"btn-group\\\" dropdown>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              *ngIf=\\\"permission.create && (\\n                       permission.update && permission.delete && !selection.hasSelection ||\\n                       !permission.update && !permission.delete ||\\n                       !permission.update && permission.delete && !selection.hasMultiSelection ||\\n                       permission.update && !selection.hasSingleSelection && !permission.delete)\\\"\\n              routerLink=\\\"/rgw/user/add\\\">\\n        <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n        <ng-container i18n>Add</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\"\\n              *ngIf=\\\"permission.update && (!permission.create && !selection.hasMultiSelection || selection.hasSingleSelection)\\\"\\n              routerLink=\\\"/rgw/user/edit/{{ selection.first()?.user_id }}\\\">\\n        <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n        <ng-container i18n>Edit</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary\\\"\\n              [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\"\\n              *ngIf=\\\"permission.delete && (!permission.update && !permission.create || selection.hasMultiSelection)\\\"\\n              (click)=\\\"deleteAction()\\\">\\n        <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n        <ng-container i18n>Delete</ng-container>\\n      </button>\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\\\"\\n              *ngIf=\\\"((permission.create?1:0) + (permission.update?1:0) + (permission.delete?1:0)) > 1\\\"\\n              dropdownToggle>\\n        <span class=\\\"caret\\\"></span>\\n        <span class=\\\"sr-only\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\"\\n          *dropdownMenu\\n          role=\\\"menu\\\">\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.create\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rgw/user/add\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-plus\\\"></i>\\n            Add\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.update\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSingleSelection}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             routerLink=\\\"/rgw/user/edit/{{ selection.first()?.user_id }}\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-pencil\\\"></i>\\n            Edit\\n          </a>\\n        </li>\\n        <li role=\\\"menuitem\\\"\\n            *ngIf=\\\"permission.delete\\\"\\n            [ngClass]=\\\"{'disabled': !selection.hasSelection}\\\">\\n          <a class=\\\"dropdown-item\\\"\\n             (click)=\\\"deleteAction()\\\"\\n             i18n>\\n            <i class=\\\"fa fa-fw fa-trash-o\\\"></i>\\n            Delete\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <cd-rgw-user-details cdTableDetail\\n                       [selection]=\\\"selection\\\">\\n  </cd-rgw-user-details>\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, ViewChild } from '@angular/core';\n\nimport { BsModalService } from 'ngx-bootstrap';\nimport { forkJoin as observableForkJoin, Observable, Subscriber } from 'rxjs';\n\nimport { RgwUserService } from '../../../shared/api/rgw-user.service';\nimport { DeletionModalComponent } from '../../../shared/components/deletion-modal/deletion-modal.component';\nimport { TableComponent } from '../../../shared/datatable/table/table.component';\nimport { CellTemplate } from '../../../shared/enum/cell-template.enum';\nimport { CdTableColumn } from '../../../shared/models/cd-table-column';\nimport { CdTableSelection } from '../../../shared/models/cd-table-selection';\nimport { Permission } from '../../../shared/models/permissions';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-rgw-user-list',\n  templateUrl: './rgw-user-list.component.html',\n  styleUrls: ['./rgw-user-list.component.scss']\n})\nexport class RgwUserListComponent {\n  @ViewChild(TableComponent) table: TableComponent;\n\n  permission: Permission;\n  columns: CdTableColumn[] = [];\n  users: object[] = [];\n  selection: CdTableSelection = new CdTableSelection();\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private rgwUserService: RgwUserService,\n    private bsModalService: BsModalService\n  ) {\n    this.permission = this.authStorageService.getPermissions().rgw;\n    this.columns = [\n      {\n        name: 'Username',\n        prop: 'user_id',\n        flexGrow: 1\n      },\n      {\n        name: 'Full name',\n        prop: 'display_name',\n        flexGrow: 1\n      },\n      {\n        name: 'Email address',\n        prop: 'email',\n        flexGrow: 1\n      },\n      {\n        name: 'Suspended',\n        prop: 'suspended',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.checkIcon\n      },\n      {\n        name: 'Max. buckets',\n        prop: 'max_buckets',\n        flexGrow: 1\n      }\n    ];\n  }\n\n  getUserList() {\n    this.rgwUserService.list().subscribe(\n      (resp: object[]) => {\n        this.users = resp;\n      },\n      () => {\n        // Force datatable to hide the loading indicator in\n        // case of an error.\n        this.users = [];\n      }\n    );\n  }\n\n  updateSelection(selection: CdTableSelection) {\n    this.selection = selection;\n  }\n\n  deleteAction() {\n    const modalRef = this.bsModalService.show(DeletionModalComponent);\n    modalRef.content.setUp({\n      metaType: this.selection.hasSingleSelection ? 'user' : 'users',\n      deletionObserver: (): Observable<any> => {\n        return new Observable((observer: Subscriber<any>) => {\n          // Delete all selected data table rows.\n          observableForkJoin(\n            this.selection.selected.map((user: any) => {\n              return this.rgwUserService.delete(user.user_id);\n            })\n          ).subscribe(\n            null,\n            (error) => {\n              // Forward the error to the observer.\n              observer.error(error);\n              // Reload the data table content because some deletions might\n              // have been executed successfully in the meanwhile.\n              this.table.refreshBtn();\n            },\n            () => {\n              // Notify the observer that we are done.\n              observer.complete();\n              // Reload the data table content.\n              this.table.refreshBtn();\n            }\n          );\n        });\n      },\n      modalRef: modalRef\n    });\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\"\\n      i18n>S3 key\\n  </h4>\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form class=\\\"form-horizontal\\\"\\n      #frm=\\\"ngForm\\\"\\n      [formGroup]=\\\"formGroup\\\"\\n      novalidate>\\n  <div class=\\\"modal-body\\\">\\n\\n    <!-- Username -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('user', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"user\\\"\\n             i18n>Username\\n        <span class=\\\"required\\\"\\n              *ngIf=\\\"!viewing\\\">\\n        </span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"user\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               *ngIf=\\\"viewing\\\"\\n               [readonly]=\\\"true\\\"\\n               formControlName=\\\"user\\\">\\n        <select id=\\\"user\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"user\\\"\\n                *ngIf=\\\"!viewing\\\"\\n                autofocus>\\n          <option i18n\\n                  *ngIf=\\\"userCandidates !== null\\\"\\n                  [ngValue]=\\\"null\\\">-- Select a username --\\n          </option>\\n          <option *ngFor=\\\"let userCandidate of userCandidates\\\"\\n                  [value]=\\\"userCandidate\\\">{{ userCandidate }}</option>\\n        </select>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('user', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n    <!-- Auto-generate key -->\\n    <div class=\\\"form-group\\\"\\n         *ngIf=\\\"!viewing\\\">\\n      <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n        <div class=\\\"checkbox checkbox-primary\\\">\\n          <input id=\\\"generate_key\\\"\\n                 type=\\\"checkbox\\\"\\n                 formControlName=\\\"generate_key\\\">\\n          <label for=\\\"generate_key\\\"\\n                 i18n>Auto-generate key\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Access key -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('access_key', frm)}\\\"\\n         *ngIf=\\\"!formGroup.getValue('generate_key')\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"access_key\\\"\\n             i18n>Access key\\n        <span class=\\\"required\\\"\\n              *ngIf=\\\"!viewing\\\">\\n        </span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"access_key\\\"\\n                 class=\\\"form-control\\\"\\n                 type=\\\"password\\\"\\n                 [readonly]=\\\"viewing\\\"\\n                 formControlName=\\\"access_key\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdPasswordButton=\\\"access_key\\\">\\n            </button>\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdCopy2ClipboardButton=\\\"access_key\\\">\\n            </button>\\n          </span>\\n        </div>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('access_key', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n    <!-- Secret key -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('secret_key', frm)}\\\"\\n         *ngIf=\\\"!formGroup.getValue('generate_key')\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"secret_key\\\"\\n             i18n>Secret key\\n        <span class=\\\"required\\\"\\n              *ngIf=\\\"!viewing\\\">\\n        </span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"secret_key\\\"\\n                 class=\\\"form-control\\\"\\n                 type=\\\"password\\\"\\n                 [readonly]=\\\"viewing\\\"\\n                 formControlName=\\\"secret_key\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdPasswordButton=\\\"secret_key\\\">\\n            </button>\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdCopy2ClipboardButton=\\\"secret_key\\\">\\n            </button>\\n          </span>\\n        </div>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('secret_key', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <cd-submit-button *ngIf=\\\"!viewing\\\"\\n                      (submitAction)=\\\"onSubmit()\\\"\\n                      [form]=\\\"formGroup\\\"\\n                      i18n>Add\\n    </cd-submit-button>\\n    <button class=\\\"btn btn-sm btn-default\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"bsModalRef.hide()\\\"\\n            i18n>Close\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport * as _ from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { CdFormBuilder } from '../../../shared/forms/cd-form-builder';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { CdValidators } from '../../../shared/forms/cd-validators';\nimport { RgwUserS3Key } from '../models/rgw-user-s3-key';\n\n@Component({\n  selector: 'cd-rgw-user-s3-key-modal',\n  templateUrl: './rgw-user-s3-key-modal.component.html',\n  styleUrls: ['./rgw-user-s3-key-modal.component.scss']\n})\nexport class RgwUserS3KeyModalComponent {\n  /**\n   * The event that is triggered when the 'Add' button as been pressed.\n   */\n  @Output() submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  viewing = true;\n  userCandidates: string[] = [];\n\n  constructor(private formBuilder: CdFormBuilder, public bsModalRef: BsModalRef) {\n    this.createForm();\n    this.listenToChanges();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      user: [null, [Validators.required]],\n      generate_key: [true],\n      access_key: [null, [CdValidators.requiredIf({ generate_key: false })]],\n      secret_key: [null, [CdValidators.requiredIf({ generate_key: false })]]\n    });\n  }\n\n  listenToChanges() {\n    // Reset the validation status of various controls, especially those that are using\n    // the 'requiredIf' validator. This is necessary because the controls itself are not\n    // validated again if the status of their prerequisites have been changed.\n    this.formGroup.get('generate_key').valueChanges.subscribe(() => {\n      ['access_key', 'secret_key'].forEach((path) => {\n        this.formGroup.get(path).updateValueAndValidity({ onlySelf: true });\n      });\n    });\n  }\n\n  /**\n   * Set the 'viewing' flag. If set to TRUE, the modal dialog is in 'View' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setViewing(viewing: boolean = true) {\n    this.viewing = viewing;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(user: string, access_key: string, secret_key: string) {\n    this.formGroup.setValue({\n      user: user,\n      generate_key: _.isEmpty(access_key),\n      access_key: access_key,\n      secret_key: secret_key\n    });\n  }\n\n  /**\n   * Set the user candidates displayed in the 'Username' dropdown box.\n   */\n  setUserCandidates(candidates: string[]) {\n    this.userCandidates = candidates;\n  }\n\n  onSubmit() {\n    const key: RgwUserS3Key = this.formGroup.value;\n    this.submitAction.emit(key);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\"\\n      i18n>Subuser\\n  </h4>\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<form class=\\\"form-horizontal\\\"\\n      #frm=\\\"ngForm\\\"\\n      [formGroup]=\\\"formGroup\\\"\\n      novalidate>\\n  <div class=\\\"modal-body\\\">\\n\\n    <!-- Username -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('uid', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"uid\\\"\\n             i18n>Username\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"uid\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               formControlName=\\\"uid\\\"\\n               [readonly]=\\\"true\\\">\\n      </div>\\n    </div>\\n\\n    <!-- Subuser -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('subuid', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"subuid\\\"\\n             i18n>Subuser\\n        <span class=\\\"required\\\"\\n              *ngIf=\\\"!editing\\\">\\n        </span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"subuid\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               formControlName=\\\"subuid\\\"\\n               [readonly]=\\\"editing\\\"\\n               autofocus>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('subuid', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('subuid', frm, 'subuserIdExists')\\\"\\n              i18n>\\n          The chosen subuser ID is already in use.\\n        </span>\\n      </div>\\n    </div>\\n\\n    <!-- Permission -->\\n    <div class=\\\"form-group\\\"\\n         [ngClass]=\\\"{'has-error': formGroup.showError('perm', frm)}\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"perm\\\"\\n             i18n>Permission\\n        <span class=\\\"required\\\"></span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <select id=\\\"perm\\\"\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"perm\\\">\\n          <option i18n\\n                  [ngValue]=\\\"null\\\">\\n            -- Select a permission --\\n          </option>\\n          <option *ngFor=\\\"let perm of ['read', 'write']\\\"\\n                  [value]=\\\"perm\\\">\\n            {{ perm }}\\n          </option>\\n          <option i18n\\n                  value=\\\"read-write\\\">\\n            read, write\\n          </option>\\n          <option i18n\\n                  value=\\\"full-control\\\">\\n            full\\n          </option>\\n        </select>\\n        <span class=\\\"help-block\\\"\\n              *ngIf=\\\"formGroup.showError('perm', frm, 'required')\\\"\\n              i18n>\\n          This field is required.\\n        </span>\\n      </div>\\n    </div>\\n\\n    <!-- Swift key -->\\n    <fieldset *ngIf=\\\"!editing\\\">\\n      <legend i18n>Swift key</legend>\\n\\n      <!-- Auto-generate key -->\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-3 col-sm-9\\\">\\n          <div class=\\\"checkbox checkbox-primary\\\">\\n            <input id=\\\"generate_secret\\\"\\n                   type=\\\"checkbox\\\"\\n                   formControlName=\\\"generate_secret\\\">\\n            <label for=\\\"generate_secret\\\"\\n                   i18n>Auto-generate secret\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Secret key -->\\n      <div class=\\\"form-group\\\"\\n           [ngClass]=\\\"{'has-error': formGroup.showError('secret_key', frm)}\\\"\\n           *ngIf=\\\"!editing && !formGroup.getValue('generate_secret')\\\">\\n        <label class=\\\"control-label col-sm-3\\\"\\n               for=\\\"secret_key\\\"\\n               i18n>Secret key\\n          <span class=\\\"required\\\"></span>\\n        </label>\\n        <div class=\\\"col-sm-9\\\">\\n          <div class=\\\"input-group\\\">\\n            <input id=\\\"secret_key\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"password\\\"\\n                   formControlName=\\\"secret_key\\\">\\n            <span class=\\\"input-group-btn\\\">\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-default\\\"\\n                      cdPasswordButton=\\\"secret_key\\\">\\n              </button>\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-default\\\"\\n                      cdCopy2ClipboardButton=\\\"secret_key\\\">\\n              </button>\\n            </span>\\n          </div>\\n          <span class=\\\"help-block\\\"\\n                *ngIf=\\\"formGroup.showError('secret_key', frm, 'required')\\\"\\n                i18n>\\n            This field is required.\\n          </span>\\n        </div>\\n      </div>\\n\\n    </fieldset>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <cd-submit-button (submitAction)=\\\"onSubmit()\\\"\\n                      [form]=\\\"formGroup\\\"\\n                      i18n>\\n      {editing, select, 1 {Update} other {Add}}\\n    </cd-submit-button>\\n    <button class=\\\"btn btn-sm btn-default\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"bsModalRef.hide()\\\"\\n            i18n>Close\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, EventEmitter, Output } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\nimport * as _ from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { CdFormBuilder } from '../../../shared/forms/cd-form-builder';\nimport { CdFormGroup } from '../../../shared/forms/cd-form-group';\nimport { CdValidators, isEmptyInputValue } from '../../../shared/forms/cd-validators';\nimport { RgwUserSubuser } from '../models/rgw-user-subuser';\n\n@Component({\n  selector: 'cd-rgw-user-subuser-modal',\n  templateUrl: './rgw-user-subuser-modal.component.html',\n  styleUrls: ['./rgw-user-subuser-modal.component.scss']\n})\nexport class RgwUserSubuserModalComponent {\n  /**\n   * The event that is triggered when the 'Add' or 'Update' button\n   * has been pressed.\n   */\n  @Output() submitAction = new EventEmitter();\n\n  formGroup: CdFormGroup;\n  editing = true;\n  subusers: RgwUserSubuser[] = [];\n\n  constructor(private formBuilder: CdFormBuilder, public bsModalRef: BsModalRef) {\n    this.createForm();\n    this.listenToChanges();\n  }\n\n  createForm() {\n    this.formGroup = this.formBuilder.group({\n      uid: [null],\n      subuid: [null, [Validators.required, this.subuserValidator()]],\n      perm: [null, [Validators.required]],\n      // Swift key\n      generate_secret: [true],\n      secret_key: [null, [CdValidators.requiredIf({ generate_secret: false })]]\n    });\n  }\n\n  listenToChanges() {\n    // Reset the validation status of various controls, especially those that are using\n    // the 'requiredIf' validator. This is necessary because the controls itself are not\n    // validated again if the status of their prerequisites have been changed.\n    this.formGroup.get('generate_secret').valueChanges.subscribe(() => {\n      ['secret_key'].forEach((path) => {\n        this.formGroup.get(path).updateValueAndValidity({ onlySelf: true });\n      });\n    });\n  }\n\n  /**\n   * Validates whether the subuser already exists.\n   */\n  subuserValidator(): ValidatorFn {\n    const self = this;\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (self.editing) {\n        return null;\n      }\n      if (isEmptyInputValue(control.value)) {\n        return null;\n      }\n      const found = self.subusers.some((subuser) => {\n        return _.isEqual(self.getSubuserName(subuser.id), control.value);\n      });\n      return found ? { subuserIdExists: true } : null;\n    };\n  }\n\n  /**\n   * Get the subuser name.\n   * Examples:\n   *   'johndoe' => 'johndoe'\n   *   'janedoe:xyz' => 'xyz'\n   * @param {string} value The value to process.\n   * @returns {string} Returns the user ID.\n   */\n  private getSubuserName(value: string) {\n    if (_.isEmpty(value)) {\n      return value;\n    }\n    const matches = value.match(/([^:]+)(:(.+))?/);\n    return _.isUndefined(matches[3]) ? matches[1] : matches[3];\n  }\n\n  /**\n   * Set the 'editing' flag. If set to TRUE, the modal dialog is in 'Edit' mode,\n   * otherwise in 'Add' mode. According to the mode the dialog and its controls\n   * behave different.\n   * @param {boolean} viewing\n   */\n  setEditing(editing: boolean = true) {\n    this.editing = editing;\n  }\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(uid: string, subuser: string = '', permissions: string = '') {\n    this.formGroup.setValue({\n      uid: uid,\n      subuid: this.getSubuserName(subuser),\n      perm: permissions,\n      generate_secret: true,\n      secret_key: null\n    });\n  }\n\n  /**\n   * Set the current capabilities of the user.\n   */\n  setSubusers(subusers: RgwUserSubuser[]) {\n    this.subusers = subusers;\n  }\n\n  onSubmit() {\n    // Get the values from the form and create an object that is sent\n    // by the triggered submit action event.\n    const values = this.formGroup.value;\n    const subuser = new RgwUserSubuser();\n    subuser.id = `${values.uid}:${values.subuid}`;\n    subuser.permissions = values.perm;\n    subuser.generate_secret = values.generate_secret;\n    subuser.secret_key = values.secret_key;\n    this.submitAction.emit(subuser);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\"\\n      i18n>Swift key\\n  </h4>\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form class=\\\"form-horizontal\\\"\\n        novalidate>\\n\\n    <!-- Username -->\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"user\\\"\\n             i18n>Username\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"user\\\"\\n               name=\\\"user\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               [readonly]=\\\"true\\\"\\n               [(ngModel)]=\\\"user\\\">\\n      </div>\\n    </div>\\n\\n    <!-- Secret key -->\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-3\\\"\\n             for=\\\"secret_key\\\"\\n             i18n>Secret key\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"secret_key\\\"\\n                 name=\\\"secret_key\\\"\\n                 class=\\\"form-control\\\"\\n                 type=\\\"password\\\"\\n                 [(ngModel)]=\\\"secret_key\\\"\\n                 [readonly]=\\\"true\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdPasswordButton=\\\"secret_key\\\">\\n            </button>\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    cdCopy2ClipboardButton=\\\"secret_key\\\">\\n            </button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-sm btn-default\\\"\\n          type=\\\"button\\\"\\n          (click)=\\\"bsModalRef.hide()\\\"\\n          i18n>Close\\n  </button>\\n</div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'cd-rgw-user-swift-key-modal',\n  templateUrl: './rgw-user-swift-key-modal.component.html',\n  styleUrls: ['./rgw-user-swift-key-modal.component.scss']\n})\nexport class RgwUserSwiftKeyModalComponent {\n  user: string;\n  secret_key: string;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  /**\n   * Set the values displayed in the dialog.\n   */\n  setValues(user: string, secret_key: string) {\n    this.user = user;\n    this.secret_key = secret_key;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  AlertModule,\n  BsDropdownModule,\n  ModalModule,\n  TabsModule,\n  TooltipModule\n} from 'ngx-bootstrap';\n\nimport { AppRoutingModule } from '../../app-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PerformanceCounterModule } from '../performance-counter/performance-counter.module';\nimport { Rgw501Component } from './rgw-501/rgw-501.component';\nimport { RgwBucketDetailsComponent } from './rgw-bucket-details/rgw-bucket-details.component';\nimport { RgwBucketFormComponent } from './rgw-bucket-form/rgw-bucket-form.component';\nimport { RgwBucketListComponent } from './rgw-bucket-list/rgw-bucket-list.component';\nimport { RgwDaemonDetailsComponent } from './rgw-daemon-details/rgw-daemon-details.component';\nimport { RgwDaemonListComponent } from './rgw-daemon-list/rgw-daemon-list.component';\nimport { RgwUserCapabilityModalComponent } from './rgw-user-capability-modal/rgw-user-capability-modal.component';\nimport { RgwUserDetailsComponent } from './rgw-user-details/rgw-user-details.component';\nimport { RgwUserFormComponent } from './rgw-user-form/rgw-user-form.component';\nimport { RgwUserListComponent } from './rgw-user-list/rgw-user-list.component';\nimport { RgwUserS3KeyModalComponent } from './rgw-user-s3-key-modal/rgw-user-s3-key-modal.component';\nimport { RgwUserSubuserModalComponent } from './rgw-user-subuser-modal/rgw-user-subuser-modal.component';\nimport { RgwUserSwiftKeyModalComponent } from './rgw-user-swift-key-modal/rgw-user-swift-key-modal.component';\n\n@NgModule({\n  entryComponents: [\n    RgwDaemonDetailsComponent,\n    RgwBucketDetailsComponent,\n    RgwUserDetailsComponent,\n    RgwUserSwiftKeyModalComponent,\n    RgwUserS3KeyModalComponent,\n    RgwUserCapabilityModalComponent,\n    RgwUserSubuserModalComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PerformanceCounterModule,\n    AlertModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    TooltipModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    Rgw501Component,\n    RgwDaemonListComponent,\n    RgwDaemonDetailsComponent,\n    RgwBucketFormComponent,\n    RgwBucketListComponent,\n    RgwBucketDetailsComponent,\n    RgwUserListComponent,\n    RgwUserDetailsComponent\n  ],\n  declarations: [\n    Rgw501Component,\n    RgwDaemonListComponent,\n    RgwDaemonDetailsComponent,\n    RgwBucketFormComponent,\n    RgwBucketListComponent,\n    RgwBucketDetailsComponent,\n    RgwUserListComponent,\n    RgwUserDetailsComponent,\n    RgwBucketFormComponent,\n    RgwUserFormComponent,\n    RgwUserSwiftKeyModalComponent,\n    RgwUserS3KeyModalComponent,\n    RgwUserCapabilityModalComponent,\n    RgwUserSubuserModalComponent\n  ]\n})\nexport class RgwModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [LoginComponent, LogoutComponent],\n  exports: [LogoutComponent]\n})\nexport class AuthModule { }\n","module.exports = \"<div class=\\\"login\\\">\\n  <div class=\\\"row full-height vertical-align\\\">\\n    <div class=\\\"col-sm-6 hidden-xs\\\">\\n      <img src=\\\"assets/Ceph_Logo_Stacked_RGB_White_120411_fa_256x256.png\\\"\\n           alt=\\\"Ceph\\\"\\n           class=\\\"pull-right\\\">\\n    </div>\\n    <div class=\\\"col-xs-10 col-sm-4 col-lg-3 col-xs-offset-1 col-sm-offset-0 col-md-offset-0 col-lg-offset-0\\\">\\n      <h1 i18n=\\\"The welcome message on the login page\\\">Welcome to Ceph!</h1>\\n      <form name=\\\"loginForm\\\"\\n            (ngSubmit)=\\\"login()\\\"\\n            #loginForm=\\\"ngForm\\\"\\n            novalidate>\\n\\n        <!-- Username -->\\n        <div class=\\\"form-group has-feedback\\\"\\n             [ngClass]=\\\"{'has-error': (loginForm.submitted || username.dirty) && username.invalid}\\\">\\n          <input name=\\\"username\\\"\\n                 [(ngModel)]=\\\"model.username\\\"\\n                 #username=\\\"ngModel\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"Enter your username...\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 autofocus>\\n          <div class=\\\"help-block\\\"\\n               *ngIf=\\\"(loginForm.submitted || username.dirty) && username.invalid\\\">Username is required</div>\\n        </div>\\n\\n        <!-- Password -->\\n        <div class=\\\"form-group has-feedback\\\"\\n             [ngClass]=\\\"{'has-error': (loginForm.submitted || password.dirty) && password.invalid}\\\">\\n          <div class=\\\"input-group\\\">\\n            <input id=\\\"password\\\"\\n                   name=\\\"password\\\"\\n                   [(ngModel)]=\\\"model.password\\\"\\n                   #password=\\\"ngModel\\\"\\n                   type=\\\"password\\\"\\n                   placeholder=\\\"Enter your password...\\\"\\n                   class=\\\"form-control\\\"\\n                   required>\\n            <span class=\\\"input-group-btn\\\">\\n              <button type=\\\"button\\\"\\n                      class=\\\"btn btn-default btn-password\\\"\\n                      cdPasswordButton=\\\"password\\\">\\n              </button>\\n            </span>\\n          </div>\\n          <div class=\\\"help-block\\\"\\n               *ngIf=\\\"(loginForm.submitted || password.dirty) && password.invalid\\\">Password is required\\n          </div>\\n        </div>\\n\\n        <!-- Stay signed in -->\\n        <div class=\\\"checkbox checkbox-primary\\\">\\n          <input id=\\\"stay_signed_in\\\"\\n                 name=\\\"stay_signed_in\\\"\\n                 type=\\\"checkbox\\\"\\n                 [(ngModel)]=\\\"model.stay_signed_in\\\">\\n          <label for=\\\"stay_signed_in\\\"\\n                 i18n=\\\"A checkbox on the login page to do not expire session on browser close\\\">\\n            Keep me logged in\\n          </label>\\n        </div>\\n\\n        <input type=\\\"submit\\\"\\n               class=\\\"btn btn-openattic btn-block\\\"\\n               [disabled]=\\\"loginForm.invalid\\\"\\n               value=\\\"Login\\\">\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".login {\\n  height: 100%; }\\n  .login .row {\\n    color: #ececec;\\n    background-color: #474544; }\\n  .login h1 {\\n    margin-top: 0;\\n    margin-bottom: 30px; }\\n  .login .btn-password,\\n  .login .form-control {\\n    color: #ececec;\\n    background-color: #555555; }\\n  .login .btn-password:focus {\\n    outline-color: #66afe9; }\\n  .login .checkbox-primary input[type=\\\"checkbox\\\"]:checked + label::before,\\n  .login .checkbox-primary input[type=\\\"radio\\\"]:checked + label::before {\\n    background-color: #288cea;\\n    border-color: #288cea; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../../shared/api/auth.service';\nimport { Credentials } from '../../../shared/models/credentials';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\n\n@Component({\n  selector: 'cd-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  model = new Credentials();\n\n  constructor(\n    private authService: AuthService,\n    private authStorageService: AuthStorageService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    if (this.authStorageService.isLoggedIn()) {\n      this.router.navigate(['']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model).then(() => {\n      this.router.navigate(['']);\n    });\n  }\n}\n","module.exports = \"<a i18n-title\\n   title=\\\"Sign Out\\\"\\n   (click)=\\\"logout()\\\">\\n   <i class=\\\"fa fa-sign-out fa-fw\\\"></i>\\n</a>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../../shared/api/auth.service';\n\n@Component({\n  selector: 'cd-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout().then(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AuthModule } from './auth/auth.module';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { NavigationModule } from './navigation/navigation.module';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule, AuthModule],\n  exports: [NavigationModule],\n  declarations: [NotFoundComponent, ForbiddenComponent]\n})\nexport class CoreModule {}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <h1 i18n>Forbidden</h1>\\n\\n    <i class=\\\"fa fa-lock text-danger\\\"></i>\\n\\n    <h2 i18n>Sorry, you are not allowed to see what you were looking for.</h2>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"h1 {\\n  font-size: -webkit-xxx-large;\\n  font-family: monospace; }\\n\\nh2 {\\n  font-size: xx-large;\\n  font-family: monospace; }\\n\\ni {\\n  font-size: 200px; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent {\n  constructor() {}\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <h1>ceph</h1>\\n  <div class=\\\"product-versions\\\">\\n    <strong>Ceph version</strong>\\n    {{ versionNumber }}\\n    <br>\\n    {{ versionHash }}\\n    <br>\\n    {{ versionName }}\\n  </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <div class=\\\"text-right\\\">\\n    <img src=\\\"assets/Ceph_Logo_Stacked_RGB_120411_fa_348x348.png\\\"\\n         class=\\\"ceph-logo\\\"\\n         alt=\\\"Ceph\\\">\\n  </div>\\n</div>\\n\"","module.exports = \".product-versions {\\n  margin-top: 30px; }\\n\\n.product-versions strong {\\n  margin-right: 10px; }\\n\\n.modal-header {\\n  border-bottom: none; }\\n\\n.modal-body {\\n  padding-left: 80px;\\n  padding-right: 80px; }\\n\\n.modal-footer {\\n  border-top: none; }\\n\\nh1 {\\n  font-size: 4em; }\\n\\n.ceph-logo {\\n  width: 25%; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Subscription } from 'rxjs';\n\nimport { SummaryService } from '../../../shared/services/summary.service';\n\n@Component({\n  selector: 'cd-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit, OnDestroy {\n  versionNumber: string;\n  versionHash: string;\n  versionName: string;\n  subs: Subscription;\n\n  constructor(public modalRef: BsModalRef, private summaryService: SummaryService) {}\n\n  ngOnInit() {\n    this.subs = this.summaryService.summaryData$.subscribe((summary: any) => {\n      if (!summary) {\n        return;\n      }\n      const version = summary.version.replace('ceph version ', '').split(' ');\n      this.versionNumber = version[0];\n      this.versionHash = version[1];\n      this.versionName = version.slice(2, version.length).join(' ');\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n}\n","module.exports = \"<div dropdown>\\r\\n  <a dropdownToggle class=\\\"dropdown-toggle\\\" aria-controls=\\\"dropdown-basic\\\" title=\\\"administration\\\">\\r\\n    <i class=\\\"fa fa-user\\\"></i>\\r\\n    <span class=\\\"caret\\\"></span>\\r\\n  </a>\\r\\n  <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu dropdown-menu-right\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\r\\n    <li><a i18n class=\\\"dropdown-item\\\" href=\\\"dashboard\\\">Sign in as <strong>{{username}}</strong></a></li>\\r\\n    <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n    <li>\\r\\n      <a i18n-title title=\\\"Sign Out\\\" (click)=\\\"logout()\\\" class=\\\"dropdown-item\\\">\\r\\n        <i class=\\\"fa fa-sign-out fa-fw\\\"></i>Login out\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\"","module.exports = \".logout_dropdown_menu {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../../shared/api/auth.service';\n@Component({\n  selector: 'cd-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent implements OnInit {\n\n  username: string;\n  constructor(private router: Router, private authService: AuthService) {\n    this.username = localStorage.getItem('dashboard_username');\n    if (this.username == null) {\n      return;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout().then(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n}\n","module.exports = \"<div dropdown>\\n  <a dropdownToggle\\n     class=\\\"dropdown-toggle\\\"\\n     data-toggle=\\\"dropdown\\\"\\n     i18n-title\\n     title=\\\"Help\\\">\\n    <i class=\\\"fa fa-question-circle-o\\\"></i>\\n    <span class=\\\"caret\\\"></span>\\n  </a>\\n  <ul *dropdownMenu\\n      class=\\\"dropdown-menu dropdown-menu-right\\\">\\n    <li>\\n      <a i18n\\n         class=\\\"dropdown-item\\\"\\n         [ngClass]=\\\"{'disabled': !docsUrl}\\\"\\n         href=\\\"{{ docsUrl }}\\\"\\n         target=\\\"_blank\\\">Documentation\\n      </a>\\n    </li>\\n    <li>\\n      <a i18n\\n         class=\\\"dropdown-item\\\"\\n         href=\\\"/docs\\\"\\n         target=\\\"_blank\\\">API\\n      </a>\\n    </li>\\n    <li>\\n      <a i18n\\n         class=\\\"dropdown-item\\\"\\n         (click)=\\\"openAboutModal()\\\">About\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\n\nimport { CephReleaseNamePipe } from '../../../shared/pipes/ceph-release-name.pipe';\nimport { SummaryService } from '../../../shared/services/summary.service';\nimport { AboutComponent } from '../about/about.component';\n\n@Component({\n  selector: 'cd-dashboard-help',\n  templateUrl: './dashboard-help.component.html',\n  styleUrls: ['./dashboard-help.component.scss']\n})\nexport class DashboardHelpComponent implements OnInit {\n  docsUrl: string;\n  modalRef: BsModalRef;\n\n  constructor(\n    private summaryService: SummaryService,\n    private cephReleaseNamePipe: CephReleaseNamePipe,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    const subs = this.summaryService.summaryData$.subscribe((summary: any) => {\n      if (!summary) {\n        return;\n      }\n      const releaseName = this.cephReleaseNamePipe.transform(summary.version);\n      this.docsUrl = `http://docs.ceph.com/docs/${releaseName}/mgr/dashboard/`;\n      subs.unsubscribe();\n    });\n  }\n\n  openAboutModal() {\n    this.modalRef = this.modalService.show(AboutComponent);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { BsDropdownModule, CollapseModule, PopoverModule, TooltipModule } from 'ngx-bootstrap';\n\nimport { AppRoutingModule } from '../../app-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { AboutComponent } from './about/about.component';\nimport { DashboardHelpComponent } from './dashboard-help/dashboard-help.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { TaskManagerComponent } from './task-manager/task-manager.component';\nimport { AdministrationComponent } from './administration/administration.component';\n\n@NgModule({\n  entryComponents: [AboutComponent],\n  imports: [\n    CommonModule,\n    AuthModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    PopoverModule.forRoot(),\n    TooltipModule.forRoot(),\n    AppRoutingModule,\n    SharedModule,\n    RouterModule\n  ],\n  declarations: [\n    AboutComponent,\n    NavigationComponent,\n    NotificationsComponent,\n    TaskManagerComponent,\n    DashboardHelpComponent,\n    AdministrationComponent\n  ],\n  exports: [NavigationComponent]\n})\nexport class NavigationModule {}\n","module.exports = \"<nav class=\\\"navbar navbar-default navbar-openattic\\\">\\r\\n  <!-- Brand and toggle get grouped for better mobile display -->\\r\\n\\r\\n  <div class=\\\"navbar-header tc_logo_component\\\">\\r\\n    <a class=\\\"navbar-brand\\\"\\r\\n       href=\\\"#\\\">\\r\\n      <img src=\\\"assets/Ceph_Logo_Standard_RGB_White_120411_fa.png\\\"\\r\\n           alt=\\\"Ceph\\\">\\r\\n    </a>\\r\\n\\r\\n    <button type=\\\"button\\\"\\r\\n            class=\\\"navbar-toggle collapsed\\\"\\r\\n            (click)=\\\"isCollapsed = !isCollapsed\\\">\\r\\n      <span i18n\\r\\n            class=\\\"sr-only\\\">Toggle navigation\\r\\n      </span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n  <div class=\\\"collapse navbar-collapse\\\"\\r\\n       id=\\\"bs-example-navbar-collapse-1\\\"\\r\\n       [collapse]=\\\"isCollapsed\\\">\\r\\n    <ul class=\\\"nav navbar-nav navbar-primary\\\">\\r\\n\\r\\n      <!-- Dashboard -->\\r\\n      <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_menuitem_dashboard\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/dashboard\\\">\\r\\n          <i class=\\\"fa fa-heartbeat fa-fw\\\"\\r\\n             [ngStyle]=\\\"summaryData?.health_status | healthColor\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Cluster -->\\r\\n      <li dropdown\\r\\n          routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"dropdown tc_menuitem tc_menuitem_cluster\\\"\\r\\n          *ngIf=\\\"permissions.hosts.read || permissions.monitor.read || permissions.osd.read || permissions.configOpt.read\\\">\\r\\n        <a dropdownToggle\\r\\n           class=\\\"dropdown-toggle\\\"\\r\\n           data-toggle=\\\"dropdown\\\">\\r\\n          <ng-container i18n>Cluster</ng-container>\\r\\n          <span class=\\\"caret\\\"></span>\\r\\n        </a>\\r\\n        <ul *dropdownMenu\\r\\n            class=\\\"dropdown-menu\\\">\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_hosts\\\"\\r\\n              *ngIf=\\\"permissions.hosts.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/hosts\\\">Hosts\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_cluster_monitor\\\"\\r\\n              *ngIf=\\\"permissions.monitor.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/monitor/\\\"> Monitors\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_hosts\\\"\\r\\n              *ngIf=\\\"permissions.osd.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/osd\\\">OSDs\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_configuration\\\"\\r\\n              *ngIf=\\\"permissions.configOpt.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/configuration\\\">Configuration Doc.\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_crushmap\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/crushmap\\\">CRUSH map\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </li>\\r\\n\\r\\n      <!-- Pools -->\\r\\n      <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_menuitem_pool\\\"\\r\\n          *ngIf=\\\"permissions.pool.read\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/pool\\\">Pools\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <!-- Block -->\\r\\n      <li dropdown\\r\\n          routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"dropdown tc_menuitem tc_menuitem_block\\\"\\r\\n          *ngIf=\\\"permissions.rbdImage.read || permissions.rbdMirroring.read || permissions.iscsi.read\\\">\\r\\n        <a dropdownToggle\\r\\n           class=\\\"dropdown-toggle\\\"\\r\\n           data-toggle=\\\"dropdown\\\"\\r\\n           [ngStyle]=\\\"blockHealthColor()\\\">\\r\\n          <ng-container i18n>Block</ng-container>\\r\\n          <span class=\\\"caret\\\"></span>\\r\\n        </a>\\r\\n\\r\\n        <ul class=\\\"dropdown-menu\\\">\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              *ngIf=\\\"permissions.rbdImage.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/block/rbd\\\">Images</a>\\r\\n          </li>\\r\\n\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_block_mirroring\\\"\\r\\n              *ngIf=\\\"permissions.rbdMirroring.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/mirroring/\\\"> Mirroring\\r\\n              <small *ngIf=\\\"summaryData?.rbd_mirroring?.warnings !== 0\\\"\\r\\n                     class=\\\"label label-warning\\\">{{ summaryData?.rbd_mirroring?.warnings }}</small>\\r\\n              <small *ngIf=\\\"summaryData?.rbd_mirroring?.errors !== 0\\\"\\r\\n                     class=\\\"label label-danger\\\">{{ summaryData?.rbd_mirroring?.errors }}</small>\\r\\n            </a>\\r\\n          </li>\\r\\n\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              *ngIf=\\\"permissions.iscsi.read\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/block/iscsi\\\">iSCSI</a>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </li>\\r\\n\\r\\n      <!-- Filesystem -->\\r\\n      <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_menuitem_cephs\\\"\\r\\n          *ngIf=\\\"permissions.cephfs.read\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/cephfs\\\">Filesystems\\r\\n        </a>\\r\\n      </li>\\r\\n      <!--\\r\\n  <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_menuitem_ceph_osds\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/cephOsds\\\">OSDs\\r\\n        </a>\\r\\n      </li>\\r\\n      <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_menuitem_ceph_pools\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/cephPools\\\">Pools\\r\\n        </a>\\r\\n      </li>\\r\\n      -->\\r\\n\\r\\n      <!-- Object Gateway -->\\r\\n      <li dropdown\\r\\n          routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"dropdown tc_menuitem tc_menuitem_rgw\\\"\\r\\n          *ngIf=\\\"permissions.rgw.read\\\">\\r\\n        <a dropdownToggle\\r\\n           class=\\\"dropdown-toggle\\\"\\r\\n           data-toggle=\\\"dropdown\\\">\\r\\n          <ng-container i18n>Object Gateway</ng-container>\\r\\n          <span class=\\\"caret\\\"></span>\\r\\n        </a>\\r\\n        <ul *dropdownMenu\\r\\n            class=\\\"dropdown-menu\\\">\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_rgw_daemons\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/rgw/daemon\\\">Daemons\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_rgw_users\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/rgw/user\\\">Users\\r\\n            </a>\\r\\n          </li>\\r\\n          <li routerLinkActive=\\\"active\\\"\\r\\n              class=\\\"tc_submenuitem tc_submenuitem_rgw_buckets\\\">\\r\\n            <a i18n\\r\\n               class=\\\"dropdown-item\\\"\\r\\n               routerLink=\\\"/rgw/bucket\\\">Buckets\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </li>\\r\\n\\r\\n      <!--\\r\\n      <li routerLinkActive=\\\"active\\\"\\r\\n          class=\\\"tc_menuitem tc_submenuitem_settings\\\">\\r\\n        <a i18n\\r\\n           routerLink=\\\"/settings\\\">Settings\\r\\n        </a>\\r\\n      </li>\\r\\n      -->\\r\\n    </ul>\\r\\n    <!-- /.navbar-primary -->\\r\\n\\r\\n    <ul class=\\\"nav navbar-nav navbar-utility\\\">\\r\\n      <li>\\r\\n        <cd-task-manager class=\\\"oa-navbar\\\"></cd-task-manager>\\r\\n      </li>\\r\\n      <li>\\r\\n        <cd-notifications class=\\\"oa-navbar\\\"></cd-notifications>\\r\\n      </li>\\r\\n      <li>\\r\\n        <cd-dashboard-help class=\\\"oa-navbar\\\"></cd-dashboard-help>\\r\\n      </li>\\r\\n      <!-- <li class=\\\"tc_logout\\\">\\r\\n        <cd-logout class=\\\"oa-navbar\\\"></cd-logout>\\r\\n      </li> -->\\r\\n      <li><cd-administration class=\\\"oa-navbar\\\"></cd-administration></li>\\r\\n    </ul>\\r\\n    <!-- /.navbar-utility -->\\r\\n  </div>\\r\\n  <!-- /.navbar-collapse -->\\r\\n</nav>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { Permissions } from '../../../shared/models/permissions';\nimport { AuthStorageService } from '../../../shared/services/auth-storage.service';\nimport { SummaryService } from '../../../shared/services/summary.service';\n\n@Component({\n  selector: 'cd-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  permissions: Permissions;\n  summaryData: any;\n  isCollapsed = true;\n\n  constructor(\n    private authStorageService: AuthStorageService,\n    private summaryService: SummaryService\n  ) {\n    this.permissions = this.authStorageService.getPermissions();\n  }\n\n  ngOnInit() {\n    this.summaryService.summaryData$.subscribe((data: any) => {\n      if (!data) {\n        return;\n      }\n      this.summaryData = data;\n    });\n  }\n\n  blockHealthColor() {\n    if (this.summaryData && this.summaryData.rbd_mirroring) {\n      if (this.summaryData.rbd_mirroring.errors > 0) {\n        return { color: '#d9534f' };\n      } else if (this.summaryData.rbd_mirroring.warnings > 0) {\n        return { color: '#f0ad4e' };\n      }\n    }\n  }\n}\n","module.exports = \"<ng-template #popTemplate>\\n  <div *ngIf=\\\"notifications.length > 0\\\">\\n    <div class=\\\"separator\\\">\\n      Recent Notifications\\n\\n      <div *ngIf=\\\"notifications.length > 0\\\"\\n           class=\\\"pull-right\\\">\\n        <a (click)=\\\"removeAll()\\\"\\n           i18n>Remove all</a>\\n      </div>\\n    </div>\\n    <hr>\\n    <div *ngFor=\\\"let notification of notifications\\\">\\n      <table>\\n        <tr>\\n          <td rowspan=\\\"3\\\" class=\\\"icon-col text-center\\\">\\n            <span [ngClass]=\\\"['fa-stack fa-2x', notification.textClass()]\\\">\\n              <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n              <i [ngClass]=\\\"['fa fa-stack-1x fa-inverse', notification.iconClass()]\\\"></i>\\n            </span>\\n          </td>\\n          <td>\\n            <strong>{{ notification.title }}</strong>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            {{ notification.message }}\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <small class=\\\"date\\\">{{ notification.timestamp | cdDate }}</small>\\n          </td>\\n        </tr>\\n      </table>\\n      <hr>\\n    </div>\\n  </div>\\n  <!-- Empty -->\\n  <div *ngIf=\\\"notifications.length === 0\\\">\\n    <div class=\\\"message\\\">\\n      There are no notifications.\\n    </div>\\n  </div>\\n</ng-template>\\n<a [popover]=\\\"popTemplate\\\"\\n   placement=\\\"bottom\\\"\\n   container=\\\"body\\\"\\n   outsideClick=\\\"true\\\"\\n   i18n-title\\n   title=\\\"Recent Notifications\\\">\\n  <i class=\\\"fa fa-bell fa-fw\\\"></i>\\n</a>\\n\"","module.exports = \"::ng-deep .popover-content {\\n  padding: 0px 0px;\\n  height: auto;\\n  max-height: 70vh;\\n  overflow-x: hidden; }\\n\\n::ng-deep .popover {\\n  min-width: 276px !important; }\\n\\n.separator {\\n  padding: 5px 12px;\\n  color: #90949c;\\n  background-color: #f6f7f9;\\n  font-size: 12px; }\\n\\n.message {\\n  padding: 10px 16px;\\n  color: #474544;\\n  font-size: 12px; }\\n\\ntable {\\n  width: 252px;\\n  margin: 5px 12px 5px 5px;\\n  font-size: 12px;\\n  color: #474544; }\\n\\n.icon-col {\\n  width: 50px;\\n  font-size: 10px; }\\n\\n.date {\\n  color: #777777; }\\n\\nhr {\\n  margin-top: 0px;\\n  margin-bottom: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { NotificationType } from '../../../shared/enum/notification-type.enum';\nimport { CdNotification } from '../../../shared/models/cd-notification';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n  selector: 'cd-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n  notifications: CdNotification[];\n  notificationType = NotificationType;\n\n  constructor(private notificationService: NotificationService) {\n    this.notifications = [];\n  }\n\n  ngOnInit() {\n    this.notificationService.data$.subscribe((notifications: CdNotification[]) => {\n      this.notifications = _.orderBy(notifications, ['timestamp'], ['desc']);\n    });\n  }\n\n  removeAll () {\n    this.notificationService.removeAll();\n  }\n}\n","module.exports = \"<ng-template #popTemplate>\\n  <!-- Executing -->\\n  <div *ngIf=\\\"executingTasks.length > 0\\\">\\n    <div class=\\\"separator\\\">\\n      EXECUTING\\n    </div>\\n    <hr>\\n    <div *ngFor=\\\"let executingTask of executingTasks\\\">\\n      <table>\\n        <tr>\\n          <td rowspan=\\\"3\\\"  class=\\\"icon-col text-center\\\">\\n            <span class=\\\"fa-stack fa-2x text-info\\\">\\n              <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n              <i class=\\\"fa fa-stack-1x fa-inverse fa-spinner fa-spin\\\"></i>\\n            </span>\\n          </td>\\n          <td colspan=\\\"3\\\"><strong>{{ executingTask.description }}</strong></td>\\n        </tr>\\n        <tr>\\n          <td colspan=\\\"2\\\">\\n            <small class=\\\"date\\\">{{ executingTask.begin_time | cdDate }}</small>\\n          </td>\\n          <td class=\\\"text-right italic\\\" nowrap *ngIf=\\\"executingTask.progress\\\"><span>{{ executingTask.progress }} %</span></td>\\n        </tr>\\n      </table>\\n      <hr>\\n    </div>\\n  </div>\\n  <!-- Finished -->\\n  <div *ngIf=\\\"finishedTasks.length > 0\\\">\\n    <div class=\\\"separator\\\">\\n      FINISHED\\n    </div>\\n    <hr>\\n    <div *ngFor=\\\"let finishedTask of finishedTasks\\\">\\n      <table>\\n        <tr>\\n          <td rowspan=\\\"3\\\"  class=\\\"icon-col text-center\\\">\\n            <span *ngIf=\\\"!finishedTask.errorMessage\\\">\\n              <span class=\\\"fa-stack fa-2x text-success\\\">\\n                <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n                <i class=\\\"fa fa-stack-1x fa-inverse fa-check\\\"></i>\\n              </span>\\n            </span>\\n            <span *ngIf=\\\"finishedTask.errorMessage\\\">\\n              <span class=\\\"fa-stack fa-2x text-danger\\\">\\n                <i class=\\\"fa fa-circle fa-stack-2x\\\"></i>\\n                <i class=\\\"fa fa-stack-1x fa-inverse fa-exclamation-triangle\\\"></i>\\n              </span>\\n            </span>\\n          </td>\\n          <td colspan=\\\"2\\\">\\n            <strong>{{ finishedTask.description }}</strong>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td></td>\\n          <td>\\n            <span *ngIf=\\\"finishedTask.errorMessage\\\" class=\\\"text-danger\\\">\\n              {{ finishedTask.errorMessage }}\\n            </span>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td colspan=\\\"2\\\">\\n            <small class=\\\"date\\\">{{ finishedTask.end_time | cdDate }}</small>\\n          </td>\\n        </tr>\\n      </table>\\n      <hr>\\n    </div>\\n  </div>\\n  <!-- Empty -->\\n  <div *ngIf=\\\"executingTasks.length === 0 && finishedTasks.length === 0\\\">\\n    <div class=\\\"message\\\">\\n      There are no background tasks.\\n    </div>\\n  </div>\\n</ng-template>\\n<a [popover]=\\\"popTemplate\\\"\\n   placement=\\\"bottom\\\"\\n   container=\\\"body\\\"\\n   outsideClick=\\\"true\\\"\\n   i18n-title\\n   title=\\\"Background Tasks\\\">\\n  <i class=\\\"fa fa-fw\\\"\\n     [ngClass]=\\\"icon\\\"></i>\\n  <span *ngIf=\\\"executingTasks.length > 0\\\"> ({{ executingTasks.length }})</span>\\n</a>\\n\"","module.exports = \"::ng-deep .popover-content {\\n  padding: 0px 0px;\\n  height: auto;\\n  max-height: 70vh;\\n  overflow-x: hidden; }\\n\\n::ng-deep .popover {\\n  min-width: 276px !important; }\\n\\n.separator {\\n  padding: 5px 12px;\\n  color: #90949c;\\n  background-color: #f6f7f9;\\n  font-size: 12px; }\\n\\n.message {\\n  padding: 10px 16px;\\n  color: #474544;\\n  font-size: 12px; }\\n\\ntable {\\n  width: 252px;\\n  margin: 5px 12px 5px 5px;\\n  font-size: 12px;\\n  color: #474544; }\\n\\n.icon-col {\\n  width: 50px;\\n  font-size: 10px; }\\n\\n.date {\\n  color: #777777; }\\n\\nhr {\\n  margin-top: 0px;\\n  margin-bottom: 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { ExecutingTask } from '../../../shared/models/executing-task';\nimport { FinishedTask } from '../../../shared/models/finished-task';\nimport { SummaryService } from '../../../shared/services/summary.service';\nimport { TaskManagerMessageService } from '../../../shared/services/task-manager-message.service';\n\n@Component({\n  selector: 'cd-task-manager',\n  templateUrl: './task-manager.component.html',\n  styleUrls: ['./task-manager.component.scss']\n})\nexport class TaskManagerComponent implements OnInit {\n  executingTasks: ExecutingTask[] = [];\n  finishedTasks: FinishedTask[] = [];\n\n  icon = 'fa-hourglass-o';\n\n  constructor(\n    private summaryService: SummaryService,\n    private taskMessageManager: TaskManagerMessageService\n  ) {}\n\n  ngOnInit() {\n    this.summaryService.summaryData$.subscribe((data: any) => {\n      if (!data) {\n        return;\n      }\n      this._handleTasks(data.executing_tasks, data.finished_tasks);\n      this._setIcon(data.executing_tasks.length);\n    });\n  }\n\n  _handleTasks(executingTasks: ExecutingTask[], finishedTasks: FinishedTask[]) {\n    for (const excutingTask of executingTasks) {\n      excutingTask.description = this.taskMessageManager.getRunningMessage(excutingTask);\n    }\n    for (const finishedTask of finishedTasks) {\n      finishedTask.description = this.taskMessageManager.getDescription(finishedTask);\n      if (finishedTask.success === false) {\n        finishedTask.errorMessage = this.taskMessageManager.getErrorMessage(finishedTask);\n      }\n    }\n    this.executingTasks = executingTasks;\n    this.finishedTasks = finishedTasks;\n  }\n\n  _setIcon(executingTasks: number) {\n    const iconSuffix = ['o', 'start', 'half', 'end']; // TODO: Use all suffixes\n    const iconIndex = executingTasks > 0 ? 1 : 0;\n    this.icon = 'fa-hourglass-' + iconSuffix[iconIndex];\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <h1 i18n>Sorry, we could not find what you were looking for</h1>\\n\\n    <img class=\\\"img-responsive center-block img-rounded\\\"\\n         src=\\\"/assets/1280px-Mimic_Octopus2.jpg\\\">\\n    <span>\\n      \\\"<a href=\\\"https://www.flickr.com/photos/37707866@N00/4838953223\\\">Mimic Octopus</a>\\\" by prilfish is licensed under\\n      <a rel=\\\"nofollow\\\"\\n         class=\\\"external text\\\"\\n         href=\\\"https://creativecommons.org/licenses/by/2.0/\\\">CC BY 2.0</a>\\n    </span>\\n  </div>\\n</div>\\n\"","module.exports = \"h1 {\\n  font-size: -webkit-xxx-large; }\\n\\nh2 {\\n  font-size: xx-large; }\\n\\n* {\\n  font-family: monospace; }\\n\\nimg {\\n  width: 50vw; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class ApiModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Credentials } from '../models/credentials';\nimport { AuthStorageService } from '../services/auth-storage.service';\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class AuthService {\n  constructor(private authStorageService: AuthStorageService, private http: HttpClient) {}\n\n  login(credentials: Credentials) {\n    return this.http\n      .post('api/auth', credentials)\n      .toPromise()\n      .then((resp: Credentials) => {\n        console.log(resp.permissions);\n        this.authStorageService.set(resp.username, resp.permissions);\n      });\n  }\n\n  logout() {\n    return this.http\n      .delete('api/auth')\n      .toPromise()\n      .then(() => {\n        this.authStorageService.remove();\n      });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class CephfsService {\n  baseURL = 'api/cephfs';\n\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get(`${this.baseURL}`);\n  }\n\n  getCephfs(id) {\n    return this.http.get(`${this.baseURL}/${id}`);\n  }\n\n  getClients(id) {\n    return this.http.get(`${this.baseURL}/${id}/clients`);\n  }\n\n  getMdsCounters(id) {\n    return this.http.get(`${this.baseURL}/${id}/mds_counters`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class ConfigurationService {\n  constructor(private http: HttpClient) {}\n\n  getConfigData() {\n    return this.http.get('api/cluster_conf/');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class DashboardService {\n  constructor(private http: HttpClient) {}\n\n  getHealth() {\n    return this.http.get('api/dashboard/health');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class HostService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  list() {\n    return this.http.get('api/host').toPromise().then((resp: any) => {\n      return resp;\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class LoggingService {\n  constructor(private http: HttpClient) {}\n\n  jsError(url, message, stack) {\n    const request = {\n      url: url,\n      message: message,\n      stack: stack\n    };\n    return this.http.post('ui-api/logging/js-error', request);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class MonitorService {\n  constructor(private http: HttpClient) {}\n\n  getMonitor() {\n    return this.http.get('api/monitor');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\nimport { TabHeadingDirective } from 'ngx-bootstrap';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class OsdService {\n  private path = 'api/osd';\n\n  constructor(private http: HttpClient) { }\n\n  getList() {\n    return this.http.get(`${this.path}`);\n  }\n\n  getDetails(id: number) {\n    return this.http.get(`${this.path}/${id}`);\n  }\n\n  scrub(id, deep) {\n    return this.http.post(`${this.path}/${id}/scrub?deep=${deep}`, null);\n  }\n\n  getFlags() {\n    return this.http.get(`${this.path}/flags`);\n  }\n\n  updateFlags(flags: string[]) {\n    return this.http.put(`${this.path}/flags`, { flags: flags });\n  }\n\n  mark_in(id) {\n    return this.http.post(`${this.path}/${id}/mark_in`, {});\n  }\n  mark_out(id) {\n    return this.http.post(`${this.path}/${id}/mark_out`, {});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { of as observableOf } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class PerformanceCounterService {\n  private url = 'api/perf_counters';\n\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get(this.url);\n  }\n\n  get(service_type: string, service_id: string) {\n    const serviceType = service_type.replace('-', '_');\n    return this.http.get(`${this.url}/${serviceType}/${service_id}`).pipe(\n      mergeMap((resp) => {\n        return observableOf(resp['counters']);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { ApiModule } from './api.module';\n\n@cdEncode\n@Injectable({\n  providedIn: ApiModule\n})\nexport class PoolService {\n  constructor(private http: HttpClient) { }\n\n  getList() {\n    return this.http.get('api/pool');\n  }\n\n  list(attrs = []) {\n    const attrsStr = attrs.join(',');\n    return this.http\n      .get(`api/pool?attrs=${attrsStr}`)\n      .toPromise()\n      .then((resp: any) => {\n        return resp;\n      });\n  }\n\n  create(pool) {\n    return this.http.post('api/pool', pool, {observe: 'response'});\n  }\n\n  delete(poolName = \"\") {\n    return this.http.delete(`api/pool/${poolName}`, { observe: 'response' });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class RbdMirroringService {\n  constructor(private http: HttpClient) {}\n\n  get() {\n    return this.http.get('api/rbdmirror');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { ApiModule } from './api.module';\n\n@cdEncode\n@Injectable({\n  providedIn: ApiModule\n})\nexport class RbdService {\n  constructor(private http: HttpClient) {}\n\n  create(rbd) {\n    return this.http.post('api/block/image', rbd, { observe: 'response' });\n  }\n\n  delete(poolName, rbdName) {\n    return this.http.delete(`api/block/image/${poolName}/${rbdName}`, { observe: 'response' });\n  }\n\n  update(poolName, rbdName, rbd) {\n    return this.http.put(`api/block/image/${poolName}/${rbdName}`, rbd, { observe: 'response' });\n  }\n\n  get(poolName, rbdName) {\n    return this.http.get(`api/block/image/${poolName}/${rbdName}`);\n  }\n\n  list() {\n    return this.http.get('api/block/image');\n  }\n\n  copy(poolName, rbdName, rbd) {\n    return this.http.post(`api/block/image/${poolName}/${rbdName}/copy`, rbd, {\n      observe: 'response'\n    });\n  }\n\n  flatten(poolName, rbdName) {\n    return this.http.post(`api/block/image/${poolName}/${rbdName}/flatten`, null, {\n      observe: 'response'\n    });\n  }\n\n  defaultFeatures() {\n    return this.http.get('api/block/image/default_features');\n  }\n\n  createSnapshot(poolName, rbdName, snapshotName) {\n    const request = {\n      snapshot_name: snapshotName\n    };\n    return this.http.post(`api/block/image/${poolName}/${rbdName}/snap`, request, {\n      observe: 'response'\n    });\n  }\n\n  renameSnapshot(poolName, rbdName, snapshotName, newSnapshotName) {\n    const request = {\n      new_snap_name: newSnapshotName\n    };\n    return this.http.put(`api/block/image/${poolName}/${rbdName}/snap/${snapshotName}`, request, {\n      observe: 'response'\n    });\n  }\n\n  protectSnapshot(poolName, rbdName, snapshotName, isProtected) {\n    const request = {\n      is_protected: isProtected\n    };\n    return this.http.put(`api/block/image/${poolName}/${rbdName}/snap/${snapshotName}`, request, {\n      observe: 'response'\n    });\n  }\n\n  rollbackSnapshot(poolName, rbdName, snapshotName) {\n    return this.http.post(\n      `api/block/image/${poolName}/${rbdName}/snap/${snapshotName}/rollback`,\n      null,\n      { observe: 'response' }\n    );\n  }\n\n  cloneSnapshot(poolName, rbdName, snapshotName, request) {\n    return this.http.post(\n      `api/block/image/${poolName}/${rbdName}/snap/${snapshotName}/clone`,\n      request,\n      { observe: 'response' }\n    );\n  }\n\n  deleteSnapshot(poolName, rbdName, snapshotName) {\n    return this.http.delete(`api/block/image/${poolName}/${rbdName}/snap/${snapshotName}`, {\n      observe: 'response'\n    });\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { forkJoin as observableForkJoin, of as observableOf } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { ApiModule } from './api.module';\n\n@cdEncode\n@Injectable({\n  providedIn: ApiModule\n})\nexport class RgwBucketService {\n  private url = '/api/rgw/bucket';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get the list of buckets.\n   * @return {Observable<Object[]>}\n   */\n  list() {\n    return this.enumerate().pipe(\n      mergeMap((buckets: string[]) => {\n        if (buckets.length > 0) {\n          return observableForkJoin(\n            buckets.map((bucket: string) => {\n              return this.get(bucket);\n            })\n          );\n        }\n        return observableOf([]);\n      })\n    );\n  }\n\n  /**\n   * Get the list of bucket names.\n   * @return {Observable<string[]>}\n   */\n  enumerate() {\n    return this.http.get(this.url);\n  }\n\n  get(bucket: string) {\n    return this.http.get(`${this.url}/${bucket}`);\n  }\n\n  create(bucket: string, uid: string) {\n    let params = new HttpParams();\n    params = params.append('bucket', bucket);\n    params = params.append('uid', uid);\n    return this.http.post(this.url, null, { params: params });\n  }\n\n  update(bucket: string, bucketId: string, uid: string) {\n    let params = new HttpParams();\n    params = params.append('bucket_id', bucketId);\n    params = params.append('uid', uid);\n    return this.http.put(`${this.url}/${bucket}`, null, { params: params });\n  }\n\n  delete(bucket: string, purgeObjects = true) {\n    let params = new HttpParams();\n    params = params.append('purge_objects', purgeObjects ? 'true' : 'false');\n    return this.http.delete(`${this.url}/${bucket}`, { params: params });\n  }\n\n  /**\n   * Check if the specified bucket exists.\n   * @param {string} uid The bucket name to check.\n   * @return {Observable<boolean>}\n   */\n  exists(bucket: string) {\n    return this.enumerate().pipe(\n      mergeMap((resp: string[]) => {\n        const index = _.indexOf(resp, bucket);\n        return observableOf(-1 !== index);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { ApiModule } from './api.module';\n\n@cdEncode\n@Injectable({\n  providedIn: ApiModule\n})\nexport class RgwDaemonService {\n  private url = 'api/rgw/daemon';\n\n  constructor(private http: HttpClient) {}\n\n  list() {\n    return this.http.get(this.url);\n  }\n\n  get(id: string) {\n    return this.http.get(`${this.url}/${id}`);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { forkJoin as observableForkJoin, of as observableOf } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { cdEncode } from '../decorators/cd-encode';\nimport { ApiModule } from './api.module';\n\n@cdEncode\n@Injectable({\n  providedIn: ApiModule\n})\nexport class RgwUserService {\n  private url = '/api/rgw/user';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get the list of users.\n   * @return {Observable<Object[]>}\n   */\n  list() {\n    return this.enumerate().pipe(\n      mergeMap((uids: string[]) => {\n        if (uids.length > 0) {\n          return observableForkJoin(\n            uids.map((uid: string) => {\n              return this.get(uid);\n            })\n          );\n        }\n        return observableOf([]);\n      })\n    );\n  }\n\n  /**\n   * Get the list of usernames.\n   * @return {Observable<string[]>}\n   */\n  enumerate() {\n    return this.http.get(this.url);\n  }\n\n  get(uid: string) {\n    return this.http.get(`${this.url}/${uid}`);\n  }\n\n  getQuota(uid: string) {\n    return this.http.get(`${this.url}/${uid}/quota`);\n  }\n\n  create(args: object) {\n    let params = new HttpParams();\n    _.keys(args).forEach((key) => {\n      params = params.append(key, args[key]);\n    });\n    return this.http.post(this.url, null, { params: params });\n  }\n\n  update(uid: string, args: object) {\n    let params = new HttpParams();\n    _.keys(args).forEach((key) => {\n      params = params.append(key, args[key]);\n    });\n    return this.http.put(`${this.url}/${uid}`, null, { params: params });\n  }\n\n  updateQuota(uid: string, args: object) {\n    let params = new HttpParams();\n    _.keys(args).forEach((key) => {\n      params = params.append(key, args[key]);\n    });\n    return this.http.put(`${this.url}/${uid}/quota`, null, { params: params });\n  }\n\n  delete(uid: string) {\n    return this.http.delete(`${this.url}/${uid}`);\n  }\n\n  createSubuser(uid: string, args: object) {\n    let params = new HttpParams();\n    _.keys(args).forEach((key) => {\n      params = params.append(key, args[key]);\n    });\n    return this.http.post(`${this.url}/${uid}/subuser`, null, { params: params });\n  }\n\n  deleteSubuser(uid: string, subuser: string) {\n    return this.http.delete(`${this.url}/${uid}/subuser/${subuser}`);\n  }\n\n  addCapability(uid: string, type: string, perm: string) {\n    let params = new HttpParams();\n    params = params.append('type', type);\n    params = params.append('perm', perm);\n    return this.http.post(`${this.url}/${uid}/capability`, null, { params: params });\n  }\n\n  deleteCapability(uid: string, type: string, perm: string) {\n    let params = new HttpParams();\n    params = params.append('type', type);\n    params = params.append('perm', perm);\n    return this.http.delete(`${this.url}/${uid}/capability`, { params: params });\n  }\n\n  addS3Key(uid: string, args: object) {\n    let params = new HttpParams();\n    params = params.append('key_type', 's3');\n    _.keys(args).forEach((key) => {\n      params = params.append(key, args[key]);\n    });\n    return this.http.post(`${this.url}/${uid}/key`, null, { params: params });\n  }\n\n  deleteS3Key(uid: string, accessKey: string) {\n    let params = new HttpParams();\n    params = params.append('key_type', 's3');\n    params = params.append('access_key', accessKey);\n    return this.http.delete(`${this.url}/${uid}/key`, { params: params });\n  }\n\n  /**\n   * Check if the specified user ID exists.\n   * @param {string} uid The user ID to check.\n   * @return {Observable<boolean>}\n   */\n  exists(uid: string) {\n    return this.enumerate().pipe(\n      mergeMap((resp: string[]) => {\n        const index = _.indexOf(resp, uid);\n        return observableOf(-1 !== index);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ApiModule } from './api.module';\n\n@Injectable({\n  providedIn: ApiModule\n})\nexport class TcmuIscsiService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  tcmuiscsi() {\n    return this.http.get('api/tcmuiscsi').toPromise().then((resp: any) => {\n      return resp;\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { AlertModule, ModalModule, PopoverModule, TooltipModule } from 'ngx-bootstrap';\n\nimport { PipesModule } from '../pipes/pipes.module';\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component';\nimport { DeletionModalComponent } from './deletion-modal/deletion-modal.component';\nimport { ErrorPanelComponent } from './error-panel/error-panel.component';\nimport { HelperComponent } from './helper/helper.component';\nimport { InfoPanelComponent } from './info-panel/info-panel.component';\nimport { LoadingPanelComponent } from './loading-panel/loading-panel.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { SparklineComponent } from './sparkline/sparkline.component';\nimport { SubmitButtonComponent } from './submit-button/submit-button.component';\nimport { UsageBarComponent } from './usage-bar/usage-bar.component';\nimport { ViewCacheComponent } from './view-cache/view-cache.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AlertModule.forRoot(),\n    PopoverModule.forRoot(),\n    TooltipModule.forRoot(),\n    ChartsModule,\n    ReactiveFormsModule,\n    PipesModule,\n    ModalModule.forRoot()\n  ],\n  declarations: [\n    ViewCacheComponent,\n    SparklineComponent,\n    HelperComponent,\n    SubmitButtonComponent,\n    UsageBarComponent,\n    ErrorPanelComponent,\n    LoadingPanelComponent,\n    InfoPanelComponent,\n    ModalComponent,\n    DeletionModalComponent,\n    ConfirmationModalComponent\n  ],\n  providers: [],\n  exports: [\n    ViewCacheComponent,\n    SparklineComponent,\n    HelperComponent,\n    SubmitButtonComponent,\n    ErrorPanelComponent,\n    LoadingPanelComponent,\n    InfoPanelComponent,\n    UsageBarComponent,\n    ModalComponent\n  ],\n  entryComponents: [ModalComponent, DeletionModalComponent, ConfirmationModalComponent]\n})\nexport class ComponentsModule {}\n","module.exports = \"<cd-modal>\\n  <ng-container class=\\\"modal-title\\\">{{ titleText }}</ng-container>\\n  <ng-container class=\\\"modal-content\\\">\\n    <form name=\\\"confirmationForm\\\"\\n          class=\\\"form-horizontal\\\"\\n          #formDir=\\\"ngForm\\\"\\n          [formGroup]=\\\"confirmationForm\\\"\\n          novalidate>\\n      <div class=\\\"modal-body\\\">\\n        <ng-container *ngTemplateOutlet=\\\"bodyTpl; context: bodyContext\\\"></ng-container>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"button-group text-right\\\">\\n          <cd-submit-button i18n\\n                            [form]=\\\"confirmationForm\\\"\\n                            (submitAction)=\\\"submit()\\\">\\n            {{ buttonText }}\\n          </cd-submit-button>\\n          <button i18n\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-sm btn-default\\\"\\n                  (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n        </div>\\n      </div>\\n    </form>\\n  </ng-container>\\n</cd-modal>\\n\"","module.exports = \"\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'cd-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.scss']\n})\nexport class ConfirmationModalComponent implements OnInit {\n  bodyData: object;\n  bodyTpl: TemplateRef<any>;\n  buttonText: string;\n  onSubmit: Function;\n  titleText: string;\n\n  bodyContext: object;\n  confirmationForm: FormGroup;\n\n  constructor(public modalRef: BsModalRef) {\n    this.confirmationForm = new FormGroup({});\n  }\n\n  ngOnInit() {\n    this.bodyContext = {\n      $implicit: this.bodyData\n    };\n  }\n\n  submit() {\n    this.onSubmit();\n  }\n\n  stopLoadingSpinner() {\n    this.confirmationForm.setErrors({ cdSubmitButton: true });\n  }\n}\n","module.exports = \"<cd-modal #modal\\n          [modalRef]=\\\"modalRef\\\">\\n  <ng-container class=\\\"modal-title\\\">\\n    <ng-container *ngTemplateOutlet=\\\"deletionHeading\\\"></ng-container>\\n  </ng-container>\\n\\n  <ng-container class=\\\"modal-content\\\">\\n    <form name=\\\"deletionForm\\\"\\n          #formDir=\\\"ngForm\\\"\\n          [formGroup]=\\\"deletionForm\\\"\\n          novalidate>\\n      <div class=\\\"modal-body\\\">\\n        <ng-container *ngTemplateOutlet=\\\"description\\\"></ng-container>\\n        <p>\\n          <ng-container i18n>\\n            To confirm the deletion, enter\\n          </ng-container>\\n          <kbd>{{ pattern }}</kbd>\\n          <ng-container i18n>\\n            and click on\\n          </ng-container>\\n          <kbd>\\n            <ng-container *ngTemplateOutlet=\\\"deletionHeading\\\"></ng-container>\\n          </kbd>.\\n        </p>\\n        <div class=\\\"form-group\\\"\\n             [ngClass]=\\\"{'has-error': deletionForm.showError('confirmation', formDir)}\\\">\\n          <input type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 name=\\\"confirmation\\\"\\n                 id=\\\"confirmation\\\"\\n                 [placeholder]=\\\"pattern\\\"\\n                 [pattern]=\\\"pattern\\\"\\n                 autocomplete=\\\"off\\\"\\n                 (keyup)=\\\"updateConfirmation($event)\\\"\\n                 formControlName=\\\"confirmation\\\"\\n                 autofocus>\\n          <span class=\\\"help-block\\\"\\n                *ngIf=\\\"deletionForm.showError('confirmation', formDir, 'required')\\\"\\n                i18n>\\n          This field is required.\\n        </span>\\n          <span class=\\\"help-block\\\"\\n                *ngIf=\\\"deletionForm.showError('confirmation', formDir, 'pattern')\\\">\\n          '{{ confirmation.value }}'\\n          <span i18n>doesn't match</span>\\n          '{{ pattern }}'.\\n        </span>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <cd-submit-button #submitButton\\n                          [form]=\\\"deletionForm\\\"\\n                          (submitAction)=\\\"deletionCall()\\\">\\n          <ng-container *ngTemplateOutlet=\\\"deletionHeading\\\"></ng-container>\\n        </cd-submit-button>\\n        <button class=\\\"btn btn-link btn-sm\\\"\\n                (click)=\\\"hideModal()\\\"\\n                i18n>\\n          Cancel\\n        </button>\\n      </div>\\n    </form>\\n  </ng-container>\\n</cd-modal>\\n\\n<ng-template #deletionHeading>\\n  <ng-container i18n>\\n    Delete\\n  </ng-container>\\n  {{ metaType }}\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Observable } from 'rxjs';\n\nimport { CdFormGroup } from '../../forms/cd-form-group';\nimport { SubmitButtonComponent } from '../submit-button/submit-button.component';\n\n@Component({\n  selector: 'cd-deletion-modal',\n  templateUrl: './deletion-modal.component.html',\n  styleUrls: ['./deletion-modal.component.scss']\n})\nexport class DeletionModalComponent implements OnInit {\n  @ViewChild(SubmitButtonComponent) submitButton: SubmitButtonComponent;\n  description: TemplateRef<any>;\n  metaType: string;\n  pattern = 'yes';\n  deletionObserver: () => Observable<any>;\n  deletionMethod: Function;\n  modalRef: BsModalRef;\n\n  deletionForm: CdFormGroup;\n  confirmation: FormControl;\n\n  // Parameters are destructed here than assigned to specific types and marked as optional\n  setUp({\n    modalRef,\n    metaType,\n    deletionMethod,\n    pattern,\n    deletionObserver,\n    description\n  }: {\n    modalRef: BsModalRef;\n    metaType: string;\n    deletionMethod?: Function;\n    pattern?: string;\n    deletionObserver?: () => Observable<any>;\n    description?: TemplateRef<any>;\n  }) {\n    if (!modalRef) {\n      throw new Error('No modal reference');\n    } else if (!metaType) {\n      throw new Error('No meta type');\n    } else if (!(deletionMethod || deletionObserver)) {\n      throw new Error('No deletion method');\n    }\n    this.metaType = metaType;\n    this.modalRef = modalRef;\n    this.deletionMethod = deletionMethod;\n    this.pattern = pattern || this.pattern;\n    this.deletionObserver = deletionObserver;\n    this.description = description;\n  }\n\n  ngOnInit() {\n    this.confirmation = new FormControl('', {\n      validators: [Validators.required],\n      updateOn: 'blur'\n    });\n    this.deletionForm = new CdFormGroup({\n      confirmation: this.confirmation\n    });\n  }\n\n  updateConfirmation($e) {\n    if ($e.key !== 'Enter') {\n      return;\n    }\n    this.confirmation.setValue($e.target.value);\n    this.confirmation.markAsDirty();\n    this.confirmation.updateValueAndValidity();\n  }\n\n  deletionCall() {\n    if (this.deletionObserver) {\n      this.deletionObserver().subscribe(\n        undefined,\n        this.stopLoadingSpinner.bind(this),\n        this.hideModal.bind(this)\n      );\n    } else {\n      this.deletionMethod();\n    }\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n  stopLoadingSpinner() {\n    this.deletionForm.setErrors({ cdSubmitButton: true });\n  }\n}\n","module.exports = \"<alert type=\\\"danger\\\">\\n  <table>\\n    <tr>\\n      <td rowspan=\\\"2\\\" class=\\\"error-panel-alert-icon\\\">\\n        <i class=\\\"fa fa-3x fa-exclamation-triangle alert-danger\\\"\\n           aria-hidden=\\\"true\\\"></i>\\n      </td>\\n      <td class=\\\"error-panel-alert-title\\\">\\n        {{ title }}\\n      </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"error-panel-alert-text\\\">\\n        <ng-content></ng-content>\\n      </td>\\n    </tr>\\n  </table>\\n</alert>\\n\\n<div class=\\\"button-group text-right\\\"\\n     *ngIf=\\\"backAction.observers.length > 0\\\">\\n  <button class=\\\"btn btn-sm btn-default tc_backButton\\\"\\n          type=\\\"button\\\"\\n          (click)=\\\"backAction.emit()\\\"\\n          autofocus\\n          i18n>\\n    Back\\n  </button>\\n</div>\\n\"","module.exports = \".error-panel-alert-icon {\\n  vertical-align: top;\\n  padding-right: 15px; }\\n\\n.error-panel-alert-title {\\n  font-weight: bold; }\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'cd-error-panel',\n  templateUrl: './error-panel.component.html',\n  styleUrls: ['./error-panel.component.scss']\n})\nexport class ErrorPanelComponent {\n  /**\n   * The title to be displayed. Defaults to 'Error'.\n   * @type {string}\n   */\n  @Input() title = 'Error';\n\n  /**\n   * The event that is triggered when the 'Back' button is pressed.\n   * @type {EventEmitter<any>}\n   */\n  @Output() backAction = new EventEmitter();\n}\n","module.exports = \"<ng-template #popoverTpl>\\n  <div [innerHtml]=\\\"html\\\"></div>\\n  <ng-content></ng-content>\\n</ng-template>\\n<i class=\\\"fa fa-question-circle\\\"\\n   aria-hidden=\\\"true\\\"\\n   [popover]=\\\"popoverTpl\\\"\\n   placement=\\\"bottom\\\"\\n   container=\\\"body\\\"\\n   [outsideClick]=\\\"true\\\">\\n</i>\\n\"","module.exports = \"i {\\n  color: #288cea;\\n  cursor: pointer; }\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cd-helper',\n  templateUrl: './helper.component.html',\n  styleUrls: ['./helper.component.scss']\n})\nexport class HelperComponent {\n\n  @Input() html: any;\n\n  constructor() { }\n\n}\n","module.exports = \"<alert type=\\\"info\\\">\\n  <table>\\n    <tr>\\n      <td rowspan=\\\"2\\\" class=\\\"info-panel-alert-icon\\\">\\n        <i class=\\\"fa fa-3x fa-info-circle alert-info\\\"\\n           aria-hidden=\\\"true\\\"></i>\\n      </td>\\n      <td class=\\\"info-panel-alert-title\\\">\\n        {{ title }}\\n      </td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"info-panel-alert-text\\\">\\n        <ng-content></ng-content>\\n      </td>\\n    </tr>\\n  </table>\\n</alert>\\n\"","module.exports = \".info-panel-alert-icon {\\n  vertical-align: top;\\n  padding-right: 15px; }\\n\\n.info-panel-alert-title {\\n  font-weight: bold; }\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cd-info-panel',\n  templateUrl: './info-panel.component.html',\n  styleUrls: ['./info-panel.component.scss']\n})\nexport class InfoPanelComponent {\n  /**\n   * The title to be displayed. Defaults to 'Information'.\n   * @type {string}\n   */\n  @Input() title = 'Information';\n}\n","module.exports = \"<alert type=\\\"info\\\">\\n  <strong>\\n    <i class=\\\"fa fa-spinner fa-spin fa-fw\\\"\\n       aria-hidden=\\\"true\\\"></i>\\n  </strong>\\n  <ng-content></ng-content>\\n</alert>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cd-loading-panel',\n  templateUrl: './loading-panel.component.html',\n  styleUrls: ['./loading-panel.component.scss']\n})\nexport class LoadingPanelComponent {\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">\\n    <ng-content select=\\\".modal-title\\\"></ng-content>\\n  </h4>\\n  <button type=\\\"button\\\"\\n          class=\\\"close pull-right\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<ng-content select=\\\".modal-content\\\"></ng-content>\\n\"","module.exports = \".modal-header {\\n  border-bottom: 1px solid #cccccc;\\n  background-color: #f5f5f5;\\n  border-radius: 5px 5px 0 0; }\\n\\n.modal-footer {\\n  border-bottom: 1px solid #cccccc;\\n  background-color: #f5f5f5;\\n  border-radius: 0 0 5px 5px; }\\n\"","import { Component, Input } from '@angular/core';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'cd-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n  @Input() modalRef: BsModalRef;\n\n  constructor() {}\n}\n","module.exports = \"<div class=\\\"chart-container\\\"\\n     [ngStyle]=\\\"style\\\">\\n  <canvas baseChart #sparkCanvas\\n          [labels]=\\\"labels\\\"\\n          [datasets]=\\\"datasets\\\"\\n          [options]=\\\"options\\\"\\n          [colors]=\\\"colors\\\"\\n          [chartType]=\\\"'line'\\\">\\n  </canvas>\\n  <div class=\\\"chartjs-tooltip\\\" #sparkTooltip>\\n    <table></table>\\n  </div>\\n</div>\\n\"","module.exports = \".chart-container {\\n  position: absolute;\\n  margin: auto;\\n  cursor: pointer;\\n  overflow: visible; }\\n\\ncanvas {\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\n.chartjs-tooltip {\\n  opacity: 0;\\n  position: absolute;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: white;\\n  border-radius: 3px;\\n  transition: all 0.1s ease;\\n  pointer-events: none;\\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !important;\\n  -webkit-transform: translate(-50%, 0);\\n  transform: translate(-50%, 0); }\\n\\n.chartjs-tooltip.transform-left {\\n    -webkit-transform: translate(-10%, 0);\\n            transform: translate(-10%, 0); }\\n\\n.chartjs-tooltip.transform-left::after {\\n      left: 10%; }\\n\\n.chartjs-tooltip.transform-right {\\n    -webkit-transform: translate(-90%, 0);\\n            transform: translate(-90%, 0); }\\n\\n.chartjs-tooltip.transform-right::after {\\n      left: 90%; }\\n\\n.chartjs-tooltip::after {\\n  content: ' ';\\n  position: absolute;\\n  top: 100%;\\n  /* At the bottom of the tooltip */\\n  left: 50%;\\n  margin-left: -5px;\\n  border-width: 5px;\\n  border-style: solid;\\n  border-color: black transparent transparent transparent; }\\n\\n::ng-deep .chartjs-tooltip-key {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 10px; }\\n\\n.chart-container {\\n  position: static !important; }\\n\"","import { Component, ElementRef, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Input } from '@angular/core';\n\nimport { ChartTooltip } from '../../../shared/models/chart-tooltip';\n\n@Component({\n  selector: 'cd-sparkline',\n  templateUrl: './sparkline.component.html',\n  styleUrls: ['./sparkline.component.scss']\n})\nexport class SparklineComponent implements OnInit, OnChanges {\n  @ViewChild('sparkCanvas') chartCanvasRef: ElementRef;\n  @ViewChild('sparkTooltip') chartTooltipRef: ElementRef;\n\n  @Input() data: any;\n  @Input()\n  style = {\n    height: '30px',\n    width: '100px'\n  };\n\n  public colors: Array<any> = [\n    {\n      backgroundColor: 'rgba(40,140,234,0.2)',\n      borderColor: 'rgba(40,140,234,1)',\n      pointBackgroundColor: 'rgba(40,140,234,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(40,140,234,0.8)'\n    }\n  ];\n\n  options = {\n    animation: {\n      duration: 0\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    elements: {\n      line: {\n        borderWidth: 1\n      }\n    },\n    tooltips: {\n      enabled: false,\n      mode: 'index',\n      intersect: false,\n      custom: undefined\n    },\n    scales: {\n      yAxes: [\n        {\n          display: false\n        }\n      ],\n      xAxes: [\n        {\n          display: false\n        }\n      ]\n    }\n  };\n\n  public datasets: Array<any> = [\n    {\n      data: []\n    }\n  ];\n\n  public labels: Array<any> = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    const getStyleTop = (tooltip, positionY) => {\n      return (tooltip.caretY - tooltip.height - tooltip.yPadding - 5) + 'px';\n    };\n\n    const getStyleLeft = (tooltip, positionX) => {\n      return positionX + tooltip.caretX + 'px';\n    };\n\n    const chartTooltip = new ChartTooltip(\n      this.chartCanvasRef,\n      this.chartTooltipRef,\n      getStyleLeft,\n      getStyleTop\n    );\n\n    chartTooltip.customColors = {\n      backgroundColor: this.colors[0].pointBackgroundColor,\n      borderColor: this.colors[0].pointBorderColor\n    };\n\n    this.options.tooltips.custom = tooltip => {\n      chartTooltip.customTooltips(tooltip);\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.datasets[0].data = changes['data'].currentValue;\n    this.datasets = [...this.datasets];\n    this.labels = [...Array(changes['data'].currentValue.length)];\n  }\n}\n","module.exports = \"<button [type]=\\\"type\\\"\\n        class=\\\"btn btn-sm btn-primary tc_submitButton\\\"\\n        [disabled]=\\\"loading\\\"\\n        (click)=\\\"submit($event)\\\">\\n  <ng-content></ng-content>\\n  <span *ngIf=\\\"loading\\\">\\n    <i class=\\\"fa fa-spinner fa-spin fa-fw\\\"></i>\\n  </span>\\n</button>\\n\"","module.exports = \"\"","import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormGroup, FormGroupDirective, NgForm } from '@angular/forms';\n\nimport * as _ from 'lodash';\n\n/**\n * This component will render a submit button with the given label.\n *\n * The button will disabled itself and show a loading icon when the user clicks\n * it, usually initiating a request to the server, and it will stay in that\n * state until the request is finished.\n *\n * To indicate that the request failed, returning the button to the enable\n * state, you need to insert an error in the form with the 'cdSubmitButton' key.\n * p.e.: this.rbdForm.setErrors({'cdSubmitButton': true});\n *\n * It will also check if the form is valid, when clicking the button, and will\n * focus on the first invalid input.\n *\n * @export\n * @class SubmitButtonComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'cd-submit-button',\n  templateUrl: './submit-button.component.html',\n  styleUrls: ['./submit-button.component.scss']\n})\nexport class SubmitButtonComponent implements OnInit {\n  @Input() form: FormGroup | NgForm;\n  @Input() type = 'submit';\n  @Output() submitAction = new EventEmitter();\n\n  loading = false;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngOnInit() {\n    this.form.statusChanges.subscribe(() => {\n      if (_.has(this.form.errors, 'cdSubmitButton')) {\n        this.loading = false;\n        _.unset(this.form.errors, 'cdSubmitButton');\n         // Handle Reactive forms.\n        if (this.form instanceof AbstractControl) {\n          (<AbstractControl>this.form).updateValueAndValidity();\n        }\n      }\n    });\n  }\n\n  submit($event) {\n    this.focusButton();\n\n    // Special handling for Template driven forms.\n    if (this.form instanceof FormGroupDirective) {\n      (<FormGroupDirective>this.form).onSubmit($event);\n    }\n\n    if (this.form.invalid) {\n      this.focusInvalid();\n      return;\n    }\n\n    this.loading = true;\n    this.submitAction.emit();\n  }\n\n  focusButton() {\n    this.elRef.nativeElement.offsetParent.querySelector(\n      `button[type=\"${this.type}\"]`\n    ).focus();\n  }\n\n  focusInvalid() {\n    const target = this.elRef.nativeElement.offsetParent.querySelector(\n      'input.ng-invalid, select.ng-invalid'\n    );\n\n    if (target) {\n      target.focus();\n    }\n  }\n}\n","module.exports = \"<ng-template #usageTooltipTpl>\\n  <table>\\n    <tr>\\n      <td class=\\\"text-left\\\">Used:&nbsp;</td>\\n      <td class=\\\"text-right\\\"><strong> {{ usedBytes | dimlessBinary }}</strong></td>\\n    </tr>\\n    <tr>\\n      <td class=\\\"text-left\\\">Free:&nbsp;</td>\\n      <td class=\\\"'text-right\\\"><strong>{{ freeBytes | dimlessBinary }}</strong></td>\\n    </tr>\\n  </table>\\n</ng-template>\\n\\n<div class=\\\"progress oaprogress\\\"\\n     data-placement=\\\"left\\\"\\n     [tooltip]=\\\"usageTooltipTpl\\\">\\n  <div class=\\\"progress-bar progress-bar-info\\\"\\n       role=\\\"progressbar\\\"\\n       [style.width]=\\\"usedPercentage + '%'\\\">\\n    <span>{{ usedPercentage }}%</span>\\n  </div>\\n  <div class=\\\"progress-bar progress-bar-freespace\\\"\\n       role=\\\"progressbar\\\"\\n       [style.width]=\\\"freePercentage + '%'\\\">\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'cd-usage-bar',\n  templateUrl: './usage-bar.component.html',\n  styleUrls: ['./usage-bar.component.scss']\n})\nexport class UsageBarComponent implements OnChanges {\n  @Input() totalBytes: number;\n  @Input() usedBytes: number;\n\n  usedPercentage: number;\n  freePercentage: number;\n  freeBytes: number;\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.usedPercentage = Math.round(this.usedBytes / this.totalBytes * 100);\n    this.freePercentage = 100 - this.usedPercentage;\n    this.freeBytes = this.totalBytes - this.usedBytes;\n  }\n}\n","module.exports = \"<alert i18n\\n       type=\\\"info\\\"\\n       *ngIf=\\\"status === vcs.ValueNone\\\">\\n  Retrieving data<span *ngIf=\\\"statusFor\\\"> for <span [innerHtml]=\\\"statusFor\\\"></span></span>. Please wait...\\n</alert>\\n\\n<alert i18n\\n       type=\\\"warning\\\"\\n       *ngIf=\\\"status === vcs.ValueStale\\\">\\n  Displaying previously cached data<span *ngIf=\\\"statusFor\\\"> for <span [innerHtml]=\\\"statusFor\\\"></span></span>.\\n</alert>\\n\\n<alert i18n\\n       type=\\\"danger\\\"\\n       *ngIf=\\\"status === vcs.ValueException\\\">\\n  Could not load data<span *ngIf=\\\"statusFor\\\"> for <span [innerHtml]=\\\"statusFor\\\"></span></span>. Please check the cluster health.\\n</alert>\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\n\nimport { ViewCacheStatus } from '../../../shared/enum/view-cache-status.enum';\n\n@Component({\n  selector: 'cd-view-cache',\n  templateUrl: './view-cache.component.html',\n  styleUrls: ['./view-cache.component.scss']\n})\nexport class ViewCacheComponent implements OnInit {\n  @Input() status: ViewCacheStatus;\n  @Input() statusFor: string;\n  vcs = ViewCacheStatus;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { ComponentsModule } from '../components/components.module';\nimport { PipesModule } from '../pipes/pipes.module';\nimport { TableKeyValueComponent } from './table-key-value/table-key-value.component';\nimport { TableComponent } from './table/table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    FormsModule,\n    BsDropdownModule.forRoot(),\n    PipesModule,\n    ComponentsModule,\n    RouterModule\n  ],\n  declarations: [\n    TableComponent,\n    TableKeyValueComponent\n  ],\n  exports: [\n    TableComponent,\n    NgxDatatableModule,\n    TableKeyValueComponent\n  ]\n})\nexport class DataTableModule { }\n","module.exports = \"<cd-table [data]=\\\"tableData\\\"\\n          [columns]=\\\"columns\\\"\\n          columnMode=\\\"flex\\\"\\n          [toolHeader]=\\\"false\\\"\\n          [autoReload]=\\\"autoReload\\\"\\n          [autoSave]=\\\"false\\\"\\n          [header]=\\\"false\\\"\\n          [footer]=\\\"false\\\"\\n          [limit]=\\\"0\\\"\\n          (fetchData)=\\\"reloadData()\\\">\\n</cd-table>\\n\"","module.exports = \"\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { CellTemplate } from '../../enum/cell-template.enum';\nimport { CdTableColumn } from '../../models/cd-table-column';\n\n/**\n * Display the given data in a 2 column data table. The left column\n * shows the 'key' attribute, the right column the 'value' attribute.\n * The data table has the following characteristics:\n * - No header and footer is displayed\n * - The relation of the width for the columns 'key' and 'value' is 1:3\n * - The 'key' column is displayed in bold text\n */\n@Component({\n  selector: 'cd-table-key-value',\n  templateUrl: './table-key-value.component.html',\n  styleUrls: ['./table-key-value.component.scss']\n})\nexport class TableKeyValueComponent implements OnInit, OnChanges {\n  columns: Array<CdTableColumn> = [];\n\n  @Input() data: any;\n  @Input() autoReload: any = 5000;\n\n  @Input() renderObjects = false;\n  // Only used if objects are rendered\n  @Input() appendParentKey = true;\n\n  tableData: {\n    key: string;\n    value: any;\n  }[];\n\n  /**\n   * The function that will be called to update the input data.\n   */\n  @Output() fetchData = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'key',\n        flexGrow: 1,\n        cellTransformation: CellTemplate.bold\n      },\n      {\n        prop: 'value',\n        flexGrow: 3\n      }\n    ];\n    this.useData();\n  }\n\n  ngOnChanges(changes) {\n    this.useData();\n  }\n\n  useData() {\n    if (!this.data) {\n      return; // Wait for data\n    }\n    this.tableData = this._makePairs(this.data);\n  }\n\n  _makePairs(data: any) {\n    let temp = [];\n    if (!data) {\n      return; // Wait for data\n    } else if (_.isArray(data)) {\n      temp = this._makePairsFromArray(data);\n    } else if (_.isPlainObject(data)) {\n      temp = this._makePairsFromObject(data);\n    } else {\n      throw new Error('Wrong data format');\n    }\n    temp = temp.map((v) => this._convertValue(v)).filter((o) => o); // Filters out undefined\n    return this.renderObjects ? this._insertFlattenObjects(temp) : temp;\n  }\n\n  _makePairsFromArray(data: any[]) {\n    let temp = [];\n    const first = data[0];\n    if (_.isPlainObject(first)) {\n      if (_.has(first, 'key') && _.has(first, 'value')) {\n        temp = [...data];\n      } else {\n        throw new Error('Wrong object array format: {key: string, value: any}[]');\n      }\n    } else {\n      if (_.isArray(first)) {\n        if (first.length === 2) {\n          temp = data.map((a) => ({\n            key: a[0],\n            value: a[1]\n          }));\n        } else {\n          throw new Error('Wrong array format: [string, any][]');\n        }\n      }\n    }\n    return temp;\n  }\n\n  _makePairsFromObject(data: object) {\n    return Object.keys(data).map((k) => ({\n      key: k,\n      value: data[k]\n    }));\n  }\n\n  _insertFlattenObjects(temp: any[]) {\n    temp.forEach((v, i) => {\n      if (_.isPlainObject(v.value)) {\n        temp.splice(i, 1);\n        this._makePairs(v.value).forEach((item) => {\n          if (this.appendParentKey) {\n            item.key = v.key + ' ' + item.key;\n          }\n          temp.splice(i, 0, item);\n          i++;\n        });\n      }\n    });\n    return temp;\n  }\n\n  _convertValue(v: any) {\n    if (_.isArray(v.value)) {\n      v.value = v.value\n        .map((item) => (_.isPlainObject(item) ? JSON.stringify(item) : item))\n        .join(', ');\n    } else if (_.isPlainObject(v.value) && !this.renderObjects) {\n      return;\n    }\n    return v;\n  }\n\n  reloadData() {\n    // Forward event triggered by the 'cd-table' datatable.\n    this.fetchData.emit();\n  }\n}\n","module.exports = \"<div class=\\\"dataTables_wrapper\\\">\\n  <div class=\\\"dataTables_header clearfix\\\"\\n       *ngIf=\\\"toolHeader\\\">\\n    <!-- actions -->\\n    <div class=\\\"oadatatableactions\\\">\\n      <ng-content select=\\\".table-actions\\\"></ng-content>\\n    </div>\\n    <!-- end actions -->\\n\\n    <!-- search -->\\n    <div class=\\\"input-group\\\">\\n      <span class=\\\"input-group-addon\\\">\\n        <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n      </span>\\n      <input class=\\\"form-control\\\"\\n             type=\\\"text\\\"\\n             [(ngModel)]=\\\"search\\\"\\n             (keyup)='updateFilter($event)'>\\n      <span class=\\\"input-group-btn\\\">\\n        <button type=\\\"button\\\"\\n                class=\\\"btn btn-default clear-input tc_clearInputBtn\\\"\\n                (click)=\\\"updateFilter()\\\">\\n          <i class=\\\"icon-prepend fa fa-remove\\\"></i>\\n        </button>\\n      </span>\\n    </div>\\n    <!-- end search -->\\n\\n    <!-- pagination limit -->\\n    <div class=\\\"input-group dataTables_paginate\\\">\\n      <input class=\\\"form-control\\\"\\n             type=\\\"number\\\"\\n             min=\\\"1\\\"\\n             max=\\\"9999\\\"\\n             [value]=\\\"userConfig.limit\\\"\\n             (click)=\\\"setLimit($event)\\\"\\n             (keyup)=\\\"setLimit($event)\\\"\\n             (blur)=\\\"setLimit($event)\\\">\\n    </div>\\n    <!-- end pagination limit-->\\n\\n    <!-- show hide columns -->\\n    <div class=\\\"widget-toolbar\\\">\\n      <div dropdown\\n           class=\\\"dropdown tc_menuitem tc_menuitem_cluster\\\">\\n        <a dropdownToggle\\n           class=\\\"btn btn-sm btn-default dropdown-toggle tc_columnBtn\\\"\\n           data-toggle=\\\"dropdown\\\">\\n          <i class=\\\"fa fa-lg fa-table\\\"></i>\\n        </a>\\n        <ul *dropdownMenu\\n            class=\\\"dropdown-menu\\\">\\n          <li *ngFor=\\\"let column of columns\\\">\\n            <label>\\n              <input type=\\\"checkbox\\\"\\n                     (change)=\\\"toggleColumn($event)\\\"\\n                     [name]=\\\"column.prop\\\"\\n                     [checked]=\\\"!column.isHidden\\\">\\n              <span>{{ column.name }}</span>\\n            </label>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <!-- end show hide columns -->\\n\\n    <!-- refresh button -->\\n    <div class=\\\"widget-toolbar tc_refreshBtn\\\"\\n         *ngIf=\\\"fetchData.observers.length > 0\\\">\\n      <a (click)=\\\"refreshBtn()\\\">\\n        <i class=\\\"fa fa-lg fa-refresh\\\"\\n           [class.fa-spin]=\\\"updating || loadingIndicator\\\"></i>\\n      </a>\\n    </div>\\n    <!-- end refresh button -->\\n  </div>\\n  <ngx-datatable #table\\n                 class=\\\"bootstrap oadatatable\\\"\\n                 [cssClasses]=\\\"paginationClasses\\\"\\n                 [selectionType]=\\\"selectionType\\\"\\n                 [selected]=\\\"selection.selected\\\"\\n                 (select)=\\\"onSelect()\\\"\\n                 [sorts]=\\\"userConfig.sorts\\\"\\n                 (sort)=\\\"changeSorting($event)\\\"\\n                 [columns]=\\\"tableColumns\\\"\\n                 [columnMode]=\\\"columnMode\\\"\\n                 [rows]=\\\"rows\\\"\\n                 [rowClass]=\\\"getRowClass()\\\"\\n                 [headerHeight]=\\\"header ? 'auto' : 0\\\"\\n                 [footerHeight]=\\\"footer ? 'auto' : 0\\\"\\n                 [limit]=\\\"userConfig.limit > 0 ? userConfig.limit : undefined\\\"\\n                 [loadingIndicator]=\\\"loadingIndicator\\\"\\n                 [rowIdentity]=\\\"rowIdentity()\\\"\\n                 [rowHeight]=\\\"'auto'\\\">\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template\\n                   let-rowCount=\\\"rowCount\\\"\\n                   let-pageSize=\\\"pageSize\\\"\\n                   let-selectedCount=\\\"selectedCount\\\"\\n                   let-curPage=\\\"curPage\\\"\\n                   let-offset=\\\"offset\\\"\\n                   let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectionType\\\"\\n                i18n>{{ selectedCount }} selected / </span>\\n          <span *ngIf=\\\"rowCount != data?.length\\\"\\n                i18n>{{ rowCount }} found / </span>\\n          <span i18n>{{ data?.length || 0 }} total</span>\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"paginationClasses.pagerLeftArrow\\\"\\n                         [pagerRightArrowIcon]=\\\"paginationClasses.pagerRightArrow\\\"\\n                         [pagerPreviousIcon]=\\\"paginationClasses.pagerPrevious\\\"\\n                         [pagerNextIcon]=\\\"paginationClasses.pagerNext\\\"\\n                         [page]=\\\"curPage\\\"\\n                         [size]=\\\"pageSize\\\"\\n                         [count]=\\\"rowCount\\\"\\n                         [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n                         (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n  </ngx-datatable>\\n</div>\\n\\n<!-- Table Details -->\\n<ng-content select=\\\"[cdTableDetail]\\\"></ng-content>\\n\\n<!-- cell templates that can be accessed from outside -->\\n<ng-template #tableCellBoldTpl\\n             let-value=\\\"value\\\">\\n  <strong>{{ value }}</strong>\\n</ng-template>\\n\\n<ng-template #sparklineTpl\\n             let-value=\\\"value\\\">\\n  <cd-sparkline [data]=\\\"value\\\"></cd-sparkline>\\n</ng-template>\\n\\n<ng-template #routerLinkTpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  <a [routerLink]=\\\"[row.cdLink]\\\"\\n     [queryParams]=\\\"row.cdParams\\\">{{ value }}</a>\\n</ng-template>\\n\\n<ng-template #checkIconTpl\\n             let-value=\\\"value\\\">\\n  <i class=\\\"fa fa-check fa-fw\\\"\\n     [hidden]=\\\"!value\\\"></i>\\n</ng-template>\\n\\n\\n<ng-template #perSecondTpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  {{ value }} /s\\n</ng-template>\\n\\n<ng-template #executingTpl\\n             let-row=\\\"row\\\"\\n             let-value=\\\"value\\\">\\n  <i class=\\\"fa fa-spinner fa-spin fa-fw\\\"\\n     *ngIf=\\\"row.cdExecuting\\\"></i>\\n  {{ value }}\\n  <span *ngIf=\\\"row.cdExecuting\\\"\\n        class=\\\"text-muted italic\\\">({{ row.cdExecuting }}... )</span>\\n</ng-template>\\n\"","module.exports = \".dataTables_wrapper {\\n  margin-bottom: 25px; }\\n  .dataTables_wrapper .separator {\\n    height: 30px;\\n    border-left: 1px solid rgba(0, 0, 0, 0.09);\\n    padding-left: 5px;\\n    margin-left: 5px;\\n    display: inline-block;\\n    vertical-align: middle; }\\n  .dataTables_wrapper .widget-toolbar {\\n    display: inline-block;\\n    float: right;\\n    width: auto;\\n    height: 30px;\\n    line-height: 28px;\\n    position: relative;\\n    border-left: 1px solid rgba(0, 0, 0, 0.09);\\n    cursor: pointer;\\n    padding: 0 8px;\\n    text-align: center; }\\n  .dataTables_wrapper .dropdown-menu {\\n    white-space: nowrap; }\\n  .dataTables_wrapper .dropdown-menu > li {\\n      cursor: pointer; }\\n  .dataTables_wrapper .dropdown-menu > li > label {\\n        width: 100%;\\n        margin-bottom: 0;\\n        padding-left: 20px;\\n        padding-right: 20px;\\n        cursor: pointer; }\\n  .dataTables_wrapper .dropdown-menu > li > label:hover {\\n          background-color: #f5f5f5; }\\n  .dataTables_wrapper .dropdown-menu > li > label > input {\\n          cursor: pointer; }\\n  .dataTables_wrapper th.oadatatablecheckbox {\\n    width: 16px; }\\n  .dataTables_wrapper .dataTables_length > input {\\n    line-height: 25px;\\n    text-align: right; }\\n  .dataTables_header {\\n  background-color: #f6f6f6;\\n  border: 1px solid #d1d1d1;\\n  border-bottom: none;\\n  padding: 5px;\\n  position: relative; }\\n  .dataTables_header .oadatatableactions {\\n    display: inline-block; }\\n  .dataTables_header .form-group {\\n    padding-left: 8px; }\\n  .dataTables_header .input-group {\\n    float: right;\\n    border-left: 1px solid rgba(0, 0, 0, 0.09);\\n    padding-left: 8px;\\n    width: 40%;\\n    max-width: 350px; }\\n  .dataTables_header .input-group .form-control {\\n      height: 30px; }\\n  .dataTables_header .input-group .clear-input {\\n      height: 30px; }\\n  .dataTables_header .input-group .clear-input i {\\n        vertical-align: text-top; }\\n  .dataTables_header .input-group.dataTables_paginate {\\n    width: 8%;\\n    min-width: 85px;\\n    padding-right: 8px; }\\n  ::ng-deep .oadatatable {\\n  border: 1px solid #d1d1d1;\\n  margin-bottom: 0;\\n  max-width: none !important; }\\n  ::ng-deep .oadatatable .progress-linear {\\n    display: block;\\n    position: relative;\\n    width: 100%;\\n    height: 5px;\\n    padding: 0;\\n    margin: 0; }\\n  ::ng-deep .oadatatable .progress-linear .container {\\n      background-color: #afd9ee; }\\n  ::ng-deep .oadatatable .progress-linear .container .bar {\\n        left: 0;\\n        height: 100%;\\n        width: 100%;\\n        position: absolute;\\n        overflow: hidden;\\n        background-color: #afd9ee; }\\n  ::ng-deep .oadatatable .progress-linear .container .bar:before {\\n        display: block;\\n        position: absolute;\\n        content: \\\"\\\";\\n        left: -200px;\\n        width: 200px;\\n        height: 100%;\\n        background-color: #288cea;\\n        -webkit-animation: progress-loading 3s linear infinite;\\n                animation: progress-loading 3s linear infinite; }\\n  ::ng-deep .oadatatable .datatable-header {\\n    background-clip: padding-box;\\n    background-color: #f9f9f9;\\n    background-image: linear-gradient(to bottom, #fafafa 0, #ededed 100%);\\n    background-repeat: repeat-x;\\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffafafa', endColorstr='#ffededed', GradientType=0); }\\n  ::ng-deep .oadatatable .datatable-header .sort-asc, ::ng-deep .oadatatable .datatable-header .sort-desc {\\n      color: #288cea; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell {\\n      padding: 5px;\\n      border: none;\\n      border-left: 1px solid #d1d1d1;\\n      border-bottom: 1px solid #d1d1d1;\\n      text-align: left;\\n      font-weight: bold; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell .datatable-header-cell-label:after {\\n        font-family: ForkAwesome;\\n        font-weight: 400;\\n        height: 9px;\\n        left: 10px;\\n        line-height: 12px;\\n        position: relative;\\n        vertical-align: baseline;\\n        width: 12px; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-label:after {\\n        content: \\\" \\\\f0dc\\\"; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell.sortable.sort-active.sort-asc .datatable-header-cell-label:after {\\n        content: \\\" \\\\f160\\\"; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell.sortable.sort-active.sort-desc .datatable-header-cell-label:after {\\n        content: \\\" \\\\f161\\\"; }\\n  ::ng-deep .oadatatable .datatable-header .datatable-header-cell:first-child {\\n        border-left: none; }\\n  ::ng-deep .oadatatable .datatable-body .empty-row {\\n    background-color: #fff3cd;\\n    text-align: center;\\n    font-weight: bold;\\n    font-style: italic;\\n    padding-top: 5px;\\n    padding-bottom: 5px; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row.clickable:hover .datatable-row-group {\\n    background-color: #eee;\\n    transition-property: background;\\n    transition-duration: .3s;\\n    transition-timing-function: linear; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row.datatable-row-even {\\n    background-color: #ffffff; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row.datatable-row-odd {\\n    background-color: #f6f6f6; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row.active, ::ng-deep .oadatatable .datatable-body .datatable-body-row.active:hover {\\n    background-color: #d9edf7; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row .datatable-body-cell {\\n    padding: 5px;\\n    border: none;\\n    border-left: 1px solid #d1d1d1;\\n    border-bottom: 1px solid #d1d1d1; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row .datatable-body-cell:first-child {\\n      border-left: none; }\\n  ::ng-deep .oadatatable .datatable-body .datatable-body-row .datatable-body-cell .datatable-body-cell-label {\\n      display: block; }\\n  ::ng-deep .oadatatable .datatable-footer .selected-count, ::ng-deep .oadatatable .datatable-footer .page-count {\\n    font-style: italic;\\n    padding-left: 5px; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager {\\n    margin-right: 5px !important; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager li:not(:first-child) {\\n      /** Add space between buttons */\\n      margin-left: 3px; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager li > a, ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager li > span {\\n      border-radius: 3px; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager .pages > a, ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager .pages > span {\\n      display: inline-block;\\n      padding: 5px 10px;\\n      margin-bottom: 5px;\\n      border: none; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager .pages a:hover {\\n      background-color: #afd9ee; }\\n  ::ng-deep .oadatatable .datatable-footer .datatable-pager .pager .pages.active > a {\\n      background-color: #d9edf7; }\\n  @-webkit-keyframes progress-loading {\\n  from {\\n    left: -200px;\\n    width: 15%; }\\n  50% {\\n    width: 30%; }\\n  70% {\\n    width: 70%; }\\n  80% {\\n    left: 50%; }\\n  95% {\\n    left: 120%; }\\n  to {\\n    left: 100%; } }\\n  @keyframes progress-loading {\\n  from {\\n    left: -200px;\\n    width: 15%; }\\n  50% {\\n    width: 30%; }\\n  70% {\\n    width: 70%; }\\n  80% {\\n    left: 50%; }\\n  95% {\\n    left: 120%; }\\n  to {\\n    left: 100%; } }\\n\"","import {\n  AfterContentChecked,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport {\n  DatatableComponent,\n  SortDirection,\n  SortPropDir,\n  TableColumnProp\n} from '@swimlane/ngx-datatable';\nimport * as _ from 'lodash';\nimport { Observable, timer as observableTimer } from 'rxjs';\n\nimport { CellTemplate } from '../../enum/cell-template.enum';\nimport { CdTableColumn } from '../../models/cd-table-column';\nimport { CdTableSelection } from '../../models/cd-table-selection';\nimport { CdUserConfig } from '../../models/cd-user-config';\n\n@Component({\n  selector: 'cd-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements AfterContentChecked, OnInit, OnChanges, OnDestroy {\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  @ViewChild('tableCellBoldTpl') tableCellBoldTpl: TemplateRef<any>;\n  @ViewChild('sparklineTpl') sparklineTpl: TemplateRef<any>;\n  @ViewChild('routerLinkTpl') routerLinkTpl: TemplateRef<any>;\n  @ViewChild('checkIconTpl') checkIconTpl: TemplateRef<any>;\n  @ViewChild('perSecondTpl') perSecondTpl: TemplateRef<any>;\n  @ViewChild('executingTpl') executingTpl: TemplateRef<any>;\n\n  // This is the array with the items to be shown.\n  @Input() data: any[];\n  // Each item -> { prop: 'attribute name', name: 'display name' }\n  @Input() columns: CdTableColumn[];\n  // Each item -> { prop: 'attribute name', dir: 'asc'||'desc'}\n  @Input() sorts?: SortPropDir[];\n  // Method used for setting column widths.\n  @Input() columnMode? = 'flex';\n  // Display the tool header, including reload button, pagination and search fields?\n  @Input() toolHeader? = true;\n  // Display the table header?\n  @Input() header? = true;\n  // Display the table footer?\n  @Input() footer? = true;\n  // Page size to show. Set to 0 to show unlimited number of rows.\n  @Input() limit? = 10;\n\n  /**\n   * Auto reload time in ms - per default every 5s\n   * You can set it to 0, undefined or false to disable the auto reload feature in order to\n   * trigger 'fetchData' if the reload button is clicked.\n   */\n  @Input() autoReload: any = 5000;\n\n  // Which row property is unique for a row. If the identifier is not specified in any\n  // column, then the property name of the first column is used. Defaults to 'id'.\n  @Input() identifier = 'id';\n  // If 'true', then the specified identifier is used anyway, although it is not specified\n  // in any column. Defaults to 'false'.\n  @Input() forceIdentifier = false;\n  // Allows other components to specify which type of selection they want,\n  // e.g. 'single' or 'multi'.\n  @Input() selectionType: string = undefined;\n  // If `true` selected item details will be updated on table refresh\n  @Input() updateSelectionOnRefresh = true;\n\n  @Input() autoSave = true;\n\n  /**\n   * Should be a function to update the input data if undefined nothing will be triggered\n   *\n   * Sometimes it's useful to only define fetchData once.\n   * Example:\n   * Usage of multiple tables with data which is updated by the same function\n   * What happens:\n   * The function is triggered through one table and all tables will update\n   */\n  @Output() fetchData = new EventEmitter();\n\n  /**\n   * This should be defined if you need access to the selection object.\n   *\n   * Each time the table selection changes, this will be triggered and\n   * the new selection object will be sent.\n   *\n   * @memberof TableComponent\n   */\n  @Output() updateSelection = new EventEmitter();\n\n  /**\n   * Use this variable to access the selected row(s).\n   */\n  selection = new CdTableSelection();\n\n  tableColumns: CdTableColumn[];\n  cellTemplates: {\n    [key: string]: TemplateRef<any>;\n  } = {};\n  search = '';\n  rows = [];\n  loadingIndicator = true;\n  paginationClasses = {\n    pagerLeftArrow: 'i fa fa-angle-double-left',\n    pagerRightArrow: 'i fa fa-angle-double-right',\n    pagerPrevious: 'i fa fa-angle-left',\n    pagerNext: 'i fa fa-angle-right'\n  };\n  userConfig: CdUserConfig = {};\n  tableName: string;\n  localStorage = window.localStorage;\n  private saveSubscriber;\n  private reloadSubscriber;\n  private updating = false;\n\n  // Internal variable to check if it is necessary to recalculate the\n  // table columns after the browser window has been resized.\n  private currentWidth: number;\n\n  constructor(private ngZone: NgZone) {}\n\n  ngOnInit() {\n    this._addTemplates();\n    if (!this.sorts) {\n      // Check whether the specified identifier exists.\n      const exists = _.findIndex(this.columns, ['prop', this.identifier]) !== -1;\n      // Auto-build the sorting configuration. If the specified identifier doesn't exist,\n      // then use the property of the first column.\n      this.sorts = this.createSortingDefinition(\n        exists ? this.identifier : this.columns[0].prop + ''\n      );\n      // If the specified identifier doesn't exist and it is not forced to use it anyway,\n      // then use the property of the first column.\n      if (!exists && !this.forceIdentifier) {\n        this.identifier = this.columns[0].prop + '';\n      }\n    }\n    this.initUserConfig();\n    this.columns.forEach((c) => {\n      if (c.cellTransformation) {\n        c.cellTemplate = this.cellTemplates[c.cellTransformation];\n      }\n      if (!c.flexGrow) {\n        c.flexGrow = c.prop + '' === this.identifier ? 1 : 2;\n      }\n      if (!c.resizeable) {\n        c.resizeable = false;\n      }\n    });\n    this.filterHiddenColumns();\n    // Load the data table content every N ms or at least once.\n    // Force showing the loading indicator if there are subscribers to the fetchData\n    // event. This is necessary because it has been set to False in useData() when\n    // this method was triggered by ngOnChanges().\n    if (this.fetchData.observers.length > 0) {\n      this.loadingIndicator = true;\n    }\n    if (_.isInteger(this.autoReload) && this.autoReload > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.reloadSubscriber = observableTimer(0, this.autoReload).subscribe((x) => {\n          this.ngZone.run(() => {\n            return this.reloadData();\n          });\n        });\n      });\n    } else {\n      this.reloadData();\n    }\n  }\n\n  initUserConfig() {\n    if (this.autoSave) {\n      this.tableName = this._calculateUniqueTableName(this.columns);\n      this._loadUserConfig();\n      this._initUserConfigAutoSave();\n    }\n    if (!this.userConfig.limit) {\n      this.userConfig.limit = this.limit;\n    }\n    if (!this.userConfig.sorts) {\n      this.userConfig.sorts = this.sorts;\n    }\n    if (!this.userConfig.columns) {\n      this.updateUserColumns();\n    } else {\n      this.columns.forEach((c, i) => {\n        c.isHidden = this.userConfig.columns[i].isHidden;\n      });\n    }\n  }\n\n  _calculateUniqueTableName(columns) {\n    const stringToNumber = (s) => {\n      if (!_.isString(s)) {\n        return 0;\n      }\n      let result = 0;\n      for (let i = 0; i < s.length; i++) {\n        result += s.charCodeAt(i) * i;\n      }\n      return result;\n    };\n    return columns\n      .reduce(\n        (result, value, index) =>\n          (stringToNumber(value.prop) + stringToNumber(value.name)) * (index + 1) + result,\n        0\n      )\n      .toString();\n  }\n\n  _loadUserConfig() {\n    const loaded = this.localStorage.getItem(this.tableName);\n    if (loaded) {\n      this.userConfig = JSON.parse(loaded);\n    }\n  }\n\n  _initUserConfigAutoSave() {\n    const source = Observable.create(this._initUserConfigProxy.bind(this));\n    this.saveSubscriber = source.subscribe(this._saveUserConfig.bind(this));\n  }\n\n  _initUserConfigProxy(observer) {\n    this.userConfig = new Proxy(this.userConfig, {\n      set(config, prop, value) {\n        config[prop] = value;\n        observer.next(config);\n        return true;\n      }\n    });\n  }\n\n  _saveUserConfig(config) {\n    this.localStorage.setItem(this.tableName, JSON.stringify(config));\n  }\n\n  updateUserColumns() {\n    this.userConfig.columns = this.columns.map((c) => ({\n      prop: c.prop,\n      name: c.name,\n      isHidden: !!c.isHidden\n    }));\n  }\n\n  filterHiddenColumns() {\n    this.tableColumns = this.columns.filter((c) => !c.isHidden);\n  }\n\n  ngOnDestroy() {\n    if (this.reloadSubscriber) {\n      this.reloadSubscriber.unsubscribe();\n    }\n    if (this.saveSubscriber) {\n      this.saveSubscriber.unsubscribe();\n    }\n  }\n\n  ngAfterContentChecked() {\n    // If the data table is not visible, e.g. another tab is active, and the\n    // browser window gets resized, the table and its columns won't get resized\n    // automatically if the tab gets visible again.\n    // https://github.com/swimlane/ngx-datatable/issues/193\n    // https://github.com/swimlane/ngx-datatable/issues/193#issuecomment-329144543\n    if (this.table && this.table.element.clientWidth !== this.currentWidth) {\n      this.currentWidth = this.table.element.clientWidth;\n      this.table.recalculate();\n    }\n  }\n\n  _addTemplates() {\n    this.cellTemplates.bold = this.tableCellBoldTpl;\n    this.cellTemplates.checkIcon = this.checkIconTpl;\n    this.cellTemplates.sparkline = this.sparklineTpl;\n    this.cellTemplates.routerLink = this.routerLinkTpl;\n    this.cellTemplates.perSecond = this.perSecondTpl;\n    this.cellTemplates.executing = this.executingTpl;\n  }\n\n  ngOnChanges(changes) {\n    this.useData();\n  }\n\n  setLimit(e) {\n    const value = parseInt(e.target.value, 10);\n    if (value > 0) {\n      this.userConfig.limit = value;\n    }\n  }\n\n  reloadData() {\n    if (!this.updating) {\n      this.fetchData.emit();\n      this.updating = true;\n    }\n  }\n\n  refreshBtn() {\n    this.loadingIndicator = true;\n    this.reloadData();\n  }\n\n  rowIdentity() {\n    return (row) => {\n      const id = row[this.identifier];\n      if (_.isUndefined(id)) {\n        throw new Error(`Wrong identifier \"${this.identifier}\" -> \"${id}\"`);\n      }\n      return id;\n    };\n  }\n\n  useData() {\n    if (!this.data) {\n      return; // Wait for data\n    }\n    this.rows = [...this.data];\n    if (this.search.length > 0) {\n      this.updateFilter(true);\n    }\n    this.loadingIndicator = false;\n    this.updating = false;\n    if (this.updateSelectionOnRefresh) {\n      this.updateSelected();\n    }\n  }\n\n  /**\n   * After updating the data, we have to update the selected items\n   * because details may have changed,\n   * or some selected items may have been removed.\n   */\n  updateSelected() {\n    const newSelected = [];\n    this.selection.selected.forEach((selectedItem) => {\n      for (const row of this.data) {\n        if (selectedItem[this.identifier] === row[this.identifier]) {\n          newSelected.push(row);\n        }\n      }\n    });\n    this.selection.selected = newSelected;\n    this.onSelect();\n  }\n\n  onSelect() {\n    this.selection.update();\n    this.updateSelection.emit(_.clone(this.selection));\n  }\n\n  toggleColumn($event: any) {\n    const prop: TableColumnProp = $event.target.name;\n    const hide = !$event.target.checked;\n    if (hide && this.tableColumns.length === 1) {\n      $event.target.checked = true;\n      return;\n    }\n    _.find(this.columns, (c: CdTableColumn) => c.prop === prop).isHidden = hide;\n    this.updateColumns();\n  }\n\n  updateColumns() {\n    this.updateUserColumns();\n    this.filterHiddenColumns();\n    const sortProp = this.userConfig.sorts[0].prop;\n    if (!_.find(this.tableColumns, (c: CdTableColumn) => c.prop === sortProp)) {\n      this.userConfig.sorts = this.createSortingDefinition(this.tableColumns[0].prop);\n      this.table.onColumnSort({ sorts: this.userConfig.sorts });\n    }\n    this.table.recalculate();\n  }\n\n  createSortingDefinition(prop: TableColumnProp): SortPropDir[] {\n    return [\n      {\n        prop: prop,\n        dir: SortDirection.asc\n      }\n    ];\n  }\n\n  changeSorting({ sorts }) {\n    this.userConfig.sorts = sorts;\n  }\n\n  updateFilter(event?: any) {\n    if (!event) {\n      this.search = '';\n    }\n    let search = this.search.toLowerCase().replace(/,/g, '');\n    const columns = this.columns.filter((c) => c.cellTransformation !== CellTemplate.sparkline);\n    if (search.match(/['\"][^'\"]+['\"]/)) {\n      search = search.replace(/['\"][^'\"]+['\"]/g, (match: string) => {\n        return match.replace(/(['\"])([^'\"]+)(['\"])/g, '$2').replace(/ /g, '+');\n      });\n    }\n    // update the rows\n    this.rows = this.subSearch(this.data, search.split(' ').filter((s) => s.length > 0), columns);\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  subSearch(data: any[], currentSearch: string[], columns: CdTableColumn[]) {\n    if (currentSearch.length === 0 || data.length === 0) {\n      return data;\n    }\n    const searchTerms: string[] = currentSearch\n      .pop()\n      .replace('+', ' ')\n      .split(':');\n    const columnsClone = [...columns];\n    const dataClone = [...data];\n    const filterColumns = (columnName: string) =>\n      columnsClone.filter((c) => c.name.toLowerCase().indexOf(columnName) !== -1);\n    if (searchTerms.length === 2) {\n      columns = filterColumns(searchTerms[0]);\n    }\n    const searchTerm: string = _.last(searchTerms);\n    data = this.basicDataSearch(searchTerm, data, columns);\n    // Checks if user searches for column but he is still typing\n    if (data.length === 0 && searchTerms.length === 1 && filterColumns(searchTerm).length > 0) {\n      data = dataClone;\n    }\n    return this.subSearch(data, currentSearch, columnsClone);\n  }\n\n  basicDataSearch(searchTerm: string, data: any[], columns: CdTableColumn[]) {\n    if (searchTerm.length === 0) {\n      return data;\n    }\n    return data.filter((d) => {\n      return (\n        columns.filter((c) => {\n          let cellValue: any = _.get(d, c.prop);\n          if (!_.isUndefined(c.pipe)) {\n            cellValue = c.pipe.transform(cellValue);\n          }\n          if (_.isUndefined(cellValue)) {\n            return;\n          }\n          if (_.isArray(cellValue)) {\n            cellValue = cellValue.join(' ');\n          } else if (_.isNumber(cellValue) || _.isBoolean(cellValue)) {\n            cellValue = cellValue.toString();\n          }\n          return cellValue.toLowerCase().indexOf(searchTerm) !== -1;\n        }).length > 0\n      );\n    });\n  }\n\n  getRowClass() {\n    // Return the function used to populate a row's CSS classes.\n    return () => {\n      return {\n        clickable: !_.isUndefined(this.selectionType)\n      };\n    };\n  }\n}\n","import * as _ from 'lodash';\n\n/**\n * This decorator can be used in a class or method.\n * It will encode all the string parameters of all the methods of a class\n * or, if applied on a method, the specified method.\n *\n * @export\n * @param {Function} [target=null]\n * @returns {*}\n */\nexport function cdEncode(target: Function = null): any {\n  if (target) {\n    encodeClass(target);\n  } else {\n    return encodeMethod();\n  }\n}\n\nfunction encodeClass(target: Function) {\n  for (const propertyName of Object.keys(target.prototype)) {\n    const descriptor = Object.getOwnPropertyDescriptor(target.prototype, propertyName);\n    const isMethod = descriptor.value instanceof Function;\n    if (!isMethod) {\n      continue;\n    }\n\n    const originalMethod = descriptor.value;\n    descriptor.value = function(...args: any[]) {\n      args.forEach((arg, i, argsArray) => {\n        if (_.isString(arg)) {\n          argsArray[i] = encodeURIComponent(arg);\n        }\n      });\n\n      const result = originalMethod.apply(this, args);\n      return result;\n    };\n\n    Object.defineProperty(target.prototype, propertyName, descriptor);\n  }\n}\n\nfunction encodeMethod() {\n  return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    if (descriptor === undefined) {\n      descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n    }\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function() {\n      const args = [];\n\n      for (let i = 0; i < arguments.length; i++) {\n        if (_.isString(arguments[i])) {\n          args[i] = encodeURIComponent(arguments[i]);\n        } else {\n          args[i] = arguments[i];\n        }\n      }\n\n      const result = originalMethod.apply(this, args);\n      return result;\n    };\n  };\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[autofocus]' // tslint:disable-line\n})\nexport class AutofocusDirective implements OnInit {\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      if (this.elementRef && this.elementRef.nativeElement) {\n        this.elementRef.nativeElement.focus();\n      }\n    }, 0);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\n\nimport { ToastsManager } from 'ng2-toastr';\n\n@Directive({\n  selector: '[cdCopy2ClipboardButton]'\n})\nexport class Copy2ClipboardButtonDirective implements OnInit {\n\n  @Input('cdCopy2ClipboardButton') private cdCopy2ClipboardButton: string;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2,\n              private toastr: ToastsManager) {}\n\n  ngOnInit() {\n    const iElement = this.renderer.createElement('i');\n    this.renderer.addClass(iElement, 'icon-prepend');\n    this.renderer.addClass(iElement, 'fa');\n    this.renderer.addClass(iElement, 'fa-clipboard');\n    this.renderer.appendChild(this.elementRef.nativeElement, iElement);\n  }\n\n  private getInputElement() {\n    return document.getElementById(this.cdCopy2ClipboardButton) as HTMLInputElement;\n  }\n\n  @HostListener('click')\n  onClick() {\n    try {\n      // Create the input to hold our text.\n      const tmpInputElement = document.createElement('input');\n      tmpInputElement.value = this.getInputElement().value;\n      document.body.appendChild(tmpInputElement);\n      // Copy text to clipboard.\n      tmpInputElement.select();\n      document.execCommand('copy');\n      // Finally remove the element.\n      document.body.removeChild(tmpInputElement);\n\n      this.toastr.success('Copied text to the clipboard successfully.');\n    } catch (err) {\n      this.toastr.error('Failed to copy text to the clipboard.');\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport * as _ from 'lodash';\n\nimport { DimlessBinaryPipe } from '../pipes/dimless-binary.pipe';\nimport { FormatterService } from '../services/formatter.service';\n\n@Directive({\n  selector: '[cdDimlessBinary]'\n})\nexport class DimlessBinaryDirective implements OnInit {\n\n  @Output() ngModelChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Minimum size in bytes.\n   * If user enter a value lower than <minBytes>,\n   * the model will automatically be update to <minBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given minBytes=4096 (4KiB), if user type 1KiB, then model will be updated to 4KiB\n   */\n  @Input() minBytes: number;\n\n  /**\n   * Maximum size in bytes.\n   * If user enter a value greater than <maxBytes>,\n   * the model will automatically be update to <maxBytes>.\n   *\n   * If <roundPower> is used, this value should be a power of <roundPower>.\n   *\n   * Example:\n   *   Given maxBytes=3145728 (3MiB), if user type 4MiB, then model will be updated to 3MiB\n   */\n  @Input() maxBytes: number;\n\n  /**\n   * Value will be rounded up the nearest power of <roundPower>\n   *\n   * Example:\n   *   Given roundPower=2, if user type 7KiB, then model will be updated to 8KiB\n   *   Given roundPower=2, if user type 5KiB, then model will be updated to 4KiB\n   */\n  @Input() roundPower: number;\n\n  /**\n   * Default unit that should be used when user do not type a unit.\n   * By default, \"MiB\" will be used.\n   *\n   * Example:\n   *   Given defaultUnit=null, if user type 7, then model will be updated to 7MiB\n   *   Given defaultUnit=k, if user type 7, then model will be updated to 7KiB\n   */\n  @Input() defaultUnit: string;\n\n  private el: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef,\n              private control: NgControl,\n              private dimlessBinaryPipe: DimlessBinaryPipe,\n              private formatter: FormatterService) {\n    this.el = this.elementRef.nativeElement;\n  }\n\n  ngOnInit() {\n    this.setValue(this.el.value);\n  }\n\n  setValue(value) {\n    if (/^[\\d.]+$/.test(value)) {\n      value += this.defaultUnit || 'm';\n    }\n    const size = this.formatter.toBytes(value);\n    const roundedSize = this.round(size);\n    this.el.value = this.dimlessBinaryPipe.transform(roundedSize);\n    if (size !== null) {\n      this.ngModelChange.emit(this.el.value);\n      this.control.control.setValue(this.el.value);\n    } else {\n      this.ngModelChange.emit(null);\n      this.control.control.setValue(null);\n    }\n  }\n\n  round(size) {\n    if (size !== null && size !== 0) {\n      if (!_.isUndefined(this.minBytes) && size < this.minBytes) {\n        return this.minBytes;\n      }\n      if (!_.isUndefined(this.maxBytes) && size > this.maxBytes) {\n        return this.maxBytes;\n      }\n      if (!_.isUndefined(this.roundPower)) {\n        const power = Math.round(Math.log(size) / Math.log(this.roundPower));\n        return Math.pow(this.roundPower, power);\n      }\n    }\n    return size;\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onBlur(value) {\n    this.setValue(value);\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[cdPasswordButton]'\n})\nexport class PasswordButtonDirective implements OnInit {\n  private iElement: HTMLElement;\n\n  @Input('cdPasswordButton') private cdPasswordButton: string;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.iElement = this.renderer.createElement('i');\n    this.renderer.addClass(this.iElement, 'icon-prepend');\n    this.renderer.addClass(this.iElement, 'fa');\n    this.renderer.appendChild(this.elementRef.nativeElement, this.iElement);\n    this.update();\n  }\n\n  private getInputElement() {\n    return document.getElementById(this.cdPasswordButton) as HTMLInputElement;\n  }\n\n  private update() {\n    const inputElement = this.getInputElement();\n    if (inputElement && (inputElement.type === 'text')) {\n      this.renderer.removeClass(this.iElement, 'fa-eye');\n      this.renderer.addClass(this.iElement, 'fa-eye-slash');\n    } else {\n      this.renderer.removeClass(this.iElement, 'fa-eye-slash');\n      this.renderer.addClass(this.iElement, 'fa-eye');\n    }\n  }\n\n  @HostListener('click')\n  onClick() {\n    const inputElement = this.getInputElement();\n    // Modify the type of the input field.\n    inputElement.type = (inputElement.type === 'password') ? 'text' : 'password';\n    // Update the button icon/tooltip.\n    this.update();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'empty'\n})\nexport class EmptyPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return _.isUndefined(value) || _.isNull(value) ? '-' : value;\n  }\n\n}\n","export enum CellTemplate {\n  bold = 'bold',\n  sparkline = 'sparkline',\n  perSecond = 'perSecond',\n  checkIcon = 'checkIcon',\n  routerLink = 'routerLink',\n  executing = 'executing'\n}\n","export enum Components {\n  auth = 'Login',\n  cephfs = 'CephFS',\n  rbd = 'RBD',\n  pool = 'Pool',\n  osd = 'OSD'\n}\n","export enum NotificationType {\n  error,\n  info,\n  success\n}\n","export enum ViewCacheStatus {\n  ValueOk = 0,\n  ValueStale = 1,\n  ValueNone = 2,\n  ValueException = 3\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { ServicesModule } from '../services/services.module';\nimport { CdFormGroup } from './cd-form-group';\n\n/**\n * CdFormBuilder extends FormBuilder to create an CdFormGroup based form.\n */\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class CdFormBuilder extends FormBuilder {\n  group(\n    controlsConfig: { [key: string]: any },\n    extra: { [key: string]: any } | null = null\n  ): CdFormGroup {\n    const form = super.group(controlsConfig, extra);\n    return new CdFormGroup(form.controls, form.validator, form.asyncValidator);\n  }\n}\n","import {\n  AbstractControl,\n  AbstractControlOptions,\n  AsyncValidatorFn,\n  FormGroup,\n  NgForm,\n  ValidatorFn\n} from '@angular/forms';\n\n/**\n * CdFormGroup extends FormGroup with a few new methods that will help form development.\n */\nexport class CdFormGroup extends FormGroup {\n  constructor(\n    public controls: { [key: string]: AbstractControl },\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null\n  ) {\n    super(controls, validatorOrOpts, asyncValidator);\n  }\n\n  /**\n   * Get a control out of any control even if its nested in other CdFormGroups or a FormGroup\n   *\n   * @param {string} controlName\n   * @returns {AbstractControl}\n   */\n  get(controlName: string): AbstractControl {\n    const control = this._get(controlName);\n    if (!control) {\n      throw new Error(`Control '${controlName}' could not be found!`);\n    }\n    return control;\n  }\n\n  _get(controlName): AbstractControl {\n    return (\n      super.get(controlName) ||\n      Object.values(this.controls)\n        .filter((c) => c.get)\n        .map((form) => {\n          if (form instanceof CdFormGroup) {\n            return form._get(controlName);\n          }\n          return form.get(controlName);\n        })\n        .find((c) => Boolean(c))\n    );\n  }\n\n  /**\n   * Get the value of a control if it has none it will return false\n   *\n   * @param {string} controlName\n   * @returns {any} false or the value of the control\n   */\n  getValue(controlName: string): any {\n    const value = this.get(controlName).value;\n    return this._filterValue(value) && value;\n  }\n\n  // Overwrite this if needed.\n  _filterValue(value) {\n    return value !== '';\n  }\n\n  /**\n   * Sets a control without triggering a value changes event\n   *\n   * Very useful if a function is called through a value changes event but the value\n   * should be changed within the call.\n   *\n   * @param {string} controlName\n   * @param value\n   */\n  silentSet(controlName: string, value: any) {\n    this.get(controlName).setValue(value, { emitEvent: false });\n  }\n\n  /**\n   * Indicates errors of the control in templates\n   *\n   * @param {string} controlName\n   * @param {NgForm} form\n   * @param {string} errorName\n   * @returns {boolean}\n   */\n  showError(controlName: string, form: NgForm, errorName?: string) {\n    const control = this.get(controlName);\n    return (\n      (form.submitted || control.dirty) &&\n      (errorName ? control.hasError(errorName) : control.invalid)\n    );\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\nimport * as _ from 'lodash';\n\nexport function isEmptyInputValue(value: any): boolean {\n  return value == null || value.length === 0;\n}\n\nexport class CdValidators {\n  /**\n   * Validator that performs email validation. In contrast to the Angular\n   * email validator an empty email will not be handled as invalid.\n   */\n  static email(control: AbstractControl): ValidationErrors | null {\n    // Exit immediately if value is empty.\n    if (isEmptyInputValue(control.value)) {\n      return null;\n    }\n    return Validators.email(control);\n  }\n\n  /**\n   * Validator that requires controls to fulfill the specified condition if\n   * the specified prerequisites matches. If the prerequisites are fulfilled,\n   * then the given function is executed and if it succeeds, the 'required'\n   * validation error will be returned, otherwise null.\n   * @param {Object} prerequisites An object containing the prerequisites.\n   *   ### Example\n   *   ```typescript\n   *   {\n   *     'generate_key': true,\n   *     'username': 'Max Mustermann'\n   *   }\n   *   ```\n   *   Only if all prerequisites are fulfilled, then the validation of the\n   *   control will be triggered.\n   * @param {Function | undefined} condition The function to be executed when all\n   *   prerequisites are fulfilled. If not set, then the {@link isEmptyInputValue}\n   *   function will be used by default. The control's value is used as function\n   *   argument. The function must return true to set the validation error.\n   * @return {ValidatorFn} Returns the validator function.\n   */\n  static requiredIf(prerequisites: Object, condition?: Function | undefined): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      // Check if all prerequisites matches.\n      if (\n        !Object.keys(prerequisites).every((key) => {\n          return control.parent && control.parent.get(key).value === prerequisites[key];\n        })\n      ) {\n        return null;\n      }\n      const success = _.isFunction(condition)\n        ? condition.call(condition, control.value)\n        : isEmptyInputValue(control.value);\n      return success ? { required: true } : null;\n    };\n  }\n\n  /**\n   * Custom validation by passing a name for the error and a function as error condition.\n   *\n   * @param {string} error\n   * @param {Function} condition - a truthy return value will trigger the error\n   * @returns {ValidatorFn}\n   */\n  static custom(error: string, condition: Function): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const value = condition.call(this, control.value);\n      if (value) {\n        return { [error]: value };\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Validate form control if condition is true with validators.\n   *\n   * @param {AbstractControl} formControl\n   * @param {Function} condition\n   * @param {ValidatorFn[]} validators\n   */\n  static validateIf(\n    formControl: AbstractControl,\n    condition: Function,\n    validators: ValidatorFn[]\n  ) {\n    formControl.setValidators((control: AbstractControl): {\n      [key: string]: any;\n    } => {\n      const value = condition.call(this);\n      if (value) {\n        return Validators.compose(validators)(control);\n      }\n      return null;\n    });\n  }\n}\n","import { NotificationType } from '../enum/notification-type.enum';\n\nexport class CdNotification {\n  message: string;\n  timestamp: string;\n  title: string;\n  type: NotificationType;\n\n  constructor(type: NotificationType = NotificationType.info, message?: string, title?: string) {\n    this.type = type;\n    this.message = message;\n    this.title = title;\n\n    /* string representation of the Date object so it can be directly compared\n    with the timestamps parsed from localStorage */\n    this.timestamp = new Date().toJSON();\n  }\n\n  textClass() {\n    switch (this.type) {\n      case NotificationType.error:\n        return 'text-danger';\n      case NotificationType.info:\n        return 'text-info';\n      case NotificationType.success:\n        return 'text-success';\n    }\n  }\n\n  iconClass() {\n    switch (this.type) {\n      case NotificationType.error:\n        return 'fa-exclamation-triangle';\n      case NotificationType.info:\n        return 'fa-info';\n      case NotificationType.success:\n        return 'fa-check';\n    }\n  }\n}\n","export class CdTableSelection {\n  selected: any[] = [];\n  hasMultiSelection: boolean;\n  hasSingleSelection: boolean;\n  hasSelection: boolean;\n\n  constructor() {\n    this.update();\n  }\n\n  /**\n   * Recalculate the variables based on the current number\n   * of selected rows.\n   */\n  update() {\n    this.hasSelection = this.selected.length > 0;\n    this.hasSingleSelection = this.selected.length === 1;\n    this.hasMultiSelection = this.selected.length > 1;\n  }\n\n  /**\n   * Get the first selected row.\n   * @return {any | null}\n   */\n  first() {\n    return this.hasSelection ? this.selected[0] : null;\n  }\n}\n","import { ElementRef } from '@angular/core';\n\nexport class ChartTooltip {\n  tooltipEl: any;\n  chartEl: any;\n  getStyleLeft: Function;\n  getStyleTop: Function;\n  customColors = {\n    backgroundColor: undefined,\n    borderColor: undefined\n  };\n  checkOffset = false;\n\n  /**\n   * Creates an instance of ChartTooltip.\n   * @param {ElementRef} chartCanvas Canvas Element\n   * @param {ElementRef} chartTooltip Tooltip Element\n   * @param {Function} getStyleLeft Function that calculates the value of Left\n   * @param {Function} getStyleTop Function that calculates the value of Top\n   * @memberof ChartTooltip\n   */\n  constructor(\n    chartCanvas: ElementRef,\n    chartTooltip: ElementRef,\n    getStyleLeft: Function,\n    getStyleTop: Function\n  ) {\n    this.chartEl = chartCanvas.nativeElement;\n    this.getStyleLeft = getStyleLeft;\n    this.getStyleTop = getStyleTop;\n    this.tooltipEl = chartTooltip.nativeElement;\n  }\n\n  /**\n   * Implementation of a ChartJS custom tooltip function.\n   *\n   * @param {any} tooltip\n   * @memberof ChartTooltip\n   */\n  customTooltips(tooltip) {\n    // Hide if no tooltip\n    if (tooltip.opacity === 0) {\n      this.tooltipEl.style.opacity = 0;\n      return;\n    }\n\n    // Set caret Position\n    this.tooltipEl.classList.remove('above', 'below', 'no-transform');\n    if (tooltip.yAlign) {\n      this.tooltipEl.classList.add(tooltip.yAlign);\n    } else {\n      this.tooltipEl.classList.add('no-transform');\n    }\n\n    // Set Text\n    if (tooltip.body) {\n      const titleLines = tooltip.title || [];\n      const bodyLines = tooltip.body.map((bodyItem) => {\n        return bodyItem.lines;\n      });\n\n      let innerHtml = '<thead>';\n\n      titleLines.forEach((title) => {\n        innerHtml += '<tr><th>' + this.getTitle(title) + '</th></tr>';\n      });\n      innerHtml += '</thead><tbody>';\n\n      bodyLines.forEach((body, i) => {\n        const colors = tooltip.labelColors[i];\n        let style = 'background:' + (this.customColors.backgroundColor || colors.backgroundColor);\n        style += '; border-color:' + (this.customColors.borderColor || colors.borderColor);\n        style += '; border-width: 2px';\n        const span = '<span class=\"chartjs-tooltip-key\" style=\"' + style + '\"></span>';\n        innerHtml += '<tr><td nowrap>' + span + this.getBody(body) + '</td></tr>';\n      });\n      innerHtml += '</tbody>';\n\n      const tableRoot = this.tooltipEl.querySelector('table');\n      tableRoot.innerHTML = innerHtml;\n    }\n\n    const positionY = this.chartEl.offsetTop;\n    const positionX = this.chartEl.offsetLeft;\n\n    // Display, position, and set styles for font\n    if (this.checkOffset) {\n      const halfWidth = tooltip.width / 2;\n      this.tooltipEl.classList.remove('transform-left');\n      this.tooltipEl.classList.remove('transform-right');\n      if (tooltip.caretX - halfWidth < 0) {\n        this.tooltipEl.classList.add('transform-left');\n      } else if (tooltip.caretX + halfWidth > this.chartEl.width) {\n        this.tooltipEl.classList.add('transform-right');\n      }\n    }\n\n    this.tooltipEl.style.left = this.getStyleLeft(tooltip, positionX);\n    this.tooltipEl.style.top = this.getStyleTop(tooltip, positionY);\n\n    this.tooltipEl.style.opacity = 1;\n    this.tooltipEl.style.fontFamily = tooltip._fontFamily;\n    this.tooltipEl.style.fontSize = tooltip.fontSize;\n    this.tooltipEl.style.fontStyle = tooltip._fontStyle;\n    this.tooltipEl.style.padding = tooltip.yPadding + 'px ' + tooltip.xPadding + 'px';\n  }\n\n  getBody(body) {\n    return body;\n  }\n\n  getTitle(title) {\n    return title;\n  }\n}\n","export class Credentials {\n  username: string;\n  password: string;\n  permissions: any;\n  stay_signed_in = false;\n}\n","import { Task } from './task';\n\nexport class ExecutingTask extends Task {\n  begin_time: number;\n  progress: number;\n}\n","import { Task } from './task';\nimport { TaskException } from './task-exception';\n\nexport class FinishedTask extends Task {\n  begin_time: number;\n  end_time: number;\n  exception: TaskException;\n  latency: number;\n  progress: number;\n  ret_value: any;\n  success: boolean;\n\n  errorMessage: string;\n}\n","export class Permission {\n  read: boolean;\n  create: boolean;\n  update: boolean;\n  delete: boolean;\n\n  constructor(serverPermission: Array<string> = []) {\n    this.read = serverPermission.indexOf('read') !== -1;\n    this.create = serverPermission.indexOf('create') !== -1;\n    this.update = serverPermission.indexOf('update') !== -1;\n    this.delete = serverPermission.indexOf('delete') !== -1;\n  }\n}\n\nexport class Permissions {\n  hosts: Permission;\n  configOpt: Permission;\n  pool: Permission;\n  osd: Permission;\n  monitor: Permission;\n  rbdImage: Permission;\n  iscsi: Permission;\n  rbdMirroring: Permission;\n  rgw: Permission;\n  cephfs: Permission;\n  manager: Permission;\n  log: Permission;\n\n  constructor(serverPermissions: any) {\n    this.hosts = new Permission(serverPermissions['hosts']);\n    this.configOpt = new Permission(serverPermissions['config-opt']);\n    this.pool = new Permission(serverPermissions['pool']);\n    this.osd = new Permission(serverPermissions['osd']);\n    this.monitor = new Permission(serverPermissions['monitor']);\n    this.rbdImage = new Permission(serverPermissions['rbd-image']);\n    this.iscsi = new Permission(serverPermissions['iscsi']);\n    this.rbdMirroring = new Permission(serverPermissions['rbd-mirroring']);\n    this.rgw = new Permission(serverPermissions['rgw']);\n    this.cephfs = new Permission(serverPermissions['cephfs']);\n    this.manager = new Permission(serverPermissions['manager']);\n    this.log = new Permission(serverPermissions['log']);\n  }\n}\n","export class Task {\n  constructor(name?, metadata?) {\n    this.name = name;\n    this.metadata = metadata;\n  }\n  name: string;\n  metadata: object;\n\n  description: string;\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cdDate'\n})\nexport class CdDatePipe implements PipeTransform {\n\n  constructor(private datePipe: DatePipe) {\n  }\n\n  transform(value: any, args?: any): any {\n    if (value === null || value === '') {\n      return '';\n    }\n    return this.datePipe.transform(value, 'shortDate') + ' ' +\n      this.datePipe.transform(value, 'mediumTime');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cephReleaseName'\n})\nexport class CephReleaseNamePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    // Expect \"ceph version 13.1.0-419-g251e2515b5\n    //         (251e2515b563856349498c6caf34e7a282f62937) nautilus (dev)\"\n    const result = /ceph version\\s+[^ ]+\\s+\\(.+\\)\\s+(.+)\\s+/.exec(value);\n    if (result) {\n      // Return the \"nautilus\" part\n      return result[1];\n    } else {\n      // Unexpected format, pass it through\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cephShortVersion'\n})\nexport class CephShortVersionPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    // Expect \"ceph version 1.2.3-g9asdasd (as98d7a0s8d7)\"\n    const result = /ceph version\\s+([^ ]+)\\s+\\(.+\\)/.exec(value);\n    if (result) {\n      // Return the \"1.2.3-g9asdasd\" part\n      return result[1];\n    } else {\n      // Unexpected format, pass it through\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FormatterService } from '../services/formatter.service';\n\n@Pipe({\n  name: 'dimlessBinary'\n})\nexport class DimlessBinaryPipe implements PipeTransform {\n  constructor(private formatter: FormatterService) {}\n\n  transform(value: any, args?: any): any {\n    return this.formatter.format_number(value, 1024, [\n      'B',\n      'KiB',\n      'MiB',\n      'GiB',\n      'TiB',\n      'PiB',\n      'EiB',\n      'ZiB',\n      'YiB'\n    ]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FormatterService } from '../services/formatter.service';\n\n@Pipe({\n  name: 'dimless'\n})\nexport class DimlessPipe implements PipeTransform {\n  constructor(private formatter: FormatterService) {}\n\n  transform(value: any, args?: any): any {\n    return this.formatter.format_number(value, 1000, [\n      '',\n      'k',\n      'M',\n      'G',\n      'T',\n      'P',\n      'E',\n      'Z',\n      'Y'\n    ]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'encodeUri'\n})\nexport class EncodeUriPipe implements PipeTransform {\n  transform(value: any): any {\n    return encodeURIComponent(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return value.filter(row => {\n      let result = true;\n\n      args.forEach(filter => {\n        if (!filter.value) {\n          return;\n        }\n\n        result = result && filter.applyFilter(row, filter.value);\n        if (!result) {\n          return result;\n        }\n      });\n\n      return result;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'healthColor'\n})\nexport class HealthColorPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value === 'HEALTH_OK') {\n      return { color: '#00bb00' };\n    } else if (value === 'HEALTH_WARN') {\n      return { color: '#ffa500' };\n    } else if (value === 'HEALTH_ERR') {\n      return { color: '#ff0000' };\n    } else {\n      return null;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'list'\n})\nexport class ListPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return value.join(', ');\n  }\n}\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EmptyPipe } from '../empty.pipe';\nimport { CdDatePipe } from './cd-date.pipe';\nimport { CephReleaseNamePipe } from './ceph-release-name.pipe';\nimport { CephShortVersionPipe } from './ceph-short-version.pipe';\nimport { DimlessBinaryPipe } from './dimless-binary.pipe';\nimport { DimlessPipe } from './dimless.pipe';\nimport { EncodeUriPipe } from './encode-uri.pipe';\nimport { FilterPipe } from './filter.pipe';\nimport { HealthColorPipe } from './health-color.pipe';\nimport { ListPipe } from './list.pipe';\nimport { RelativeDatePipe } from './relative-date.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    DimlessBinaryPipe,\n    HealthColorPipe,\n    DimlessPipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    RelativeDatePipe,\n    ListPipe,\n    FilterPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe\n  ],\n  exports: [\n    DimlessBinaryPipe,\n    HealthColorPipe,\n    DimlessPipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    RelativeDatePipe,\n    ListPipe,\n    FilterPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe\n  ],\n  providers: [\n    DatePipe,\n    CephShortVersionPipe,\n    CephReleaseNamePipe,\n    DimlessBinaryPipe,\n    DimlessPipe,\n    RelativeDatePipe,\n    ListPipe,\n    CdDatePipe,\n    EmptyPipe,\n    EncodeUriPipe\n  ]\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'relativeDate'\n})\nexport class RelativeDatePipe implements PipeTransform {\n  constructor() {}\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return 'unknown';\n    }\n    return moment(value * 1000).fromNow();\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { Observable, throwError as observableThrowError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { FinishedTask } from '../models/finished-task';\nimport { AuthStorageService } from './auth-storage.service';\nimport { NotificationService } from './notification.service';\nimport { ServicesModule } from './services.module';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class ApiInterceptorService implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private authStorageService: AuthStorageService,\n    public notificationService: NotificationService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((resp) => {\n        if (resp instanceof HttpErrorResponse) {\n          let showNotification = true;\n          switch (resp.status) {\n            case 400:\n              const finishedTask = new FinishedTask();\n\n              const task = resp.error.task;\n              if (_.isPlainObject(task)) {\n                task.metadata.component = task.metadata.component || resp.error.component;\n\n                finishedTask.name = task.name;\n                finishedTask.metadata = task.metadata;\n              } else {\n                finishedTask.metadata = resp.error;\n              }\n\n              finishedTask.success = false;\n              finishedTask.exception = resp.error;\n              this.notificationService.notifyTask(finishedTask);\n              showNotification = false;\n              break;\n            case 401:\n              this.authStorageService.remove();\n              this.router.navigate(['/login']);\n              break;\n            case 403:\n              this.router.navigate(['/403']);\n              break;\n            case 404:\n              this.router.navigate(['/404']);\n              break;\n          }\n\n          let timeoutId;\n          if (showNotification) {\n            timeoutId = this.notificationService.show(\n              NotificationType.error,\n              resp.error.detail || '',\n              `${resp.status} - ${resp.statusText}`\n            );\n          }\n\n          /**\n           * Decorated preventDefault method (in case error previously had\n           * preventDefault method defined). If called, it will prevent a\n           * notification to be shown.\n           */\n          resp['preventDefault'] = () => {\n            this.notificationService.cancel(timeoutId);\n          };\n\n          /**\n           * If called, it will prevent a notification for the specific status code.\n           * @param {number} status The status code to be ignored.\n           */\n          resp['ignoreStatusCode'] = function(status: number) {\n            if (this.status === status) {\n              this.preventDefault();\n            }\n          };\n        }\n        // Return the error to the method that called it.\n        return observableThrowError(resp);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthStorageService } from './auth-storage.service';\nimport { ServicesModule } from './services.module';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router, private authStorageService: AuthStorageService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authStorageService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Permissions } from '../models/permissions';\nimport { ServicesModule } from './services.module';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class AuthStorageService {\n  constructor() {}\n\n  set(username: string, permissions: any = {}) {\n    localStorage.setItem('dashboard_username', username);\n    localStorage.setItem('dashboard_permissions', JSON.stringify(new Permissions(permissions)));\n  }\n\n  remove() {\n    localStorage.removeItem('dashboard_username');\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('dashboard_username') !== null;\n  }\n\n  getPermissions(): Permissions {\n    return JSON.parse(\n      localStorage.getItem('dashboard_permissions') || JSON.stringify(new Permissions({}))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { ServicesModule } from './services.module';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class FormatterService {\n  constructor() {}\n\n  format_number(n: any, divisor: number, units: string[], decimals: number = 1): string {\n    if (_.isString(n)) {\n      n = Number(n);\n    }\n    if (!_.isNumber(n)) {\n      return '-';\n    }\n    let unit = n < 1 ? 0 : Math.floor(Math.log(n) / Math.log(divisor));\n    unit = (unit >= units.length) ? units.length - 1 : unit;\n    let result = _.round(n / Math.pow(divisor, unit), decimals).toString();\n    if (result === '') {\n      return '-';\n    }\n    if (units[unit] !== '') {\n      result = `${result} ${units[unit]}`;\n    }\n    return result;\n  }\n\n  /**\n   * Convert the given value into bytes.\n   * @param {string} value The value to be converted, e.g. 1024B, 10M, 300KiB or 1ZB.\n   * @returns Returns the given value in bytes without any appended unit or null in case\n   *   of an error.\n   */\n  toBytes(value: string): number | null {\n    const base = 1024;\n    const units = ['b', 'k', 'm', 'g', 't', 'p', 'e', 'z', 'y'];\n    const m = RegExp('^(\\\\d+(.\\\\d+)?) ?([' + units.join('') + '](b|ib)?)?$', 'i').exec(value);\n    if (m === null) {\n      return null;\n    }\n    let bytes = parseFloat(m[1]);\n    if (_.isString(m[3])) {\n      bytes = bytes * Math.pow(base, units.indexOf(m[3].toLowerCase()[0]));\n    }\n    return Math.round(bytes);\n  }\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { LoggingService } from '../api/logging.service';\n\n@Injectable()\nexport class JsErrorHandler implements ErrorHandler {\n\n  constructor(private injector: Injector) { }\n\n  handleError(error) {\n    const loggingService = this.injector.get(LoggingService);\n    const url = window.location.href;\n    const message = error && error.message;\n    const stack = error && error.stack;\n    loggingService.jsError(url, message, stack).subscribe();\n    throw error;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { of as observableOf } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ServicesModule } from './services.module';\n\n/**\n * This service checks if a route can be activated by executing a\n * REST API call to '/api/<apiPath>/status'. If the returned response\n * states that the module is not available, then the user is redirected\n * to the specified <redirectTo> URL path.\n *\n * A controller implementing this endpoint should return an object of\n * the following form:\n * {'available': true|false, 'message': null|string}.\n *\n * The configuration of this guard should look like this:\n * const routes: Routes = [\n * {\n *   path: 'rgw/bucket',\n *   component: RgwBucketListComponent,\n *   canActivate: [AuthGuardService, ModuleStatusGuardService],\n *   data: {\n *     moduleStatusGuardConfig: {\n *       apiPath: 'rgw',\n *       redirectTo: 'rgw/501'\n *     }\n *   }\n * },\n * ...\n */\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class ModuleStatusGuardService implements CanActivate, CanActivateChild {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.doCheck(route);\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.doCheck(childRoute);\n  }\n\n  private doCheck(route: ActivatedRouteSnapshot) {\n    const config = route.data['moduleStatusGuardConfig'];\n    return this.http.get(`/api/${config.apiPath}/status`).pipe(\n      map((resp: any) => {\n        if (!resp.available) {\n          this.router.navigate([config.redirectTo, resp.message || '']);\n        }\n        return resp.available;\n      }),\n      catchError(() => {\n        this.router.navigate([config.redirectTo]);\n        return observableOf(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { ToastsManager } from 'ng2-toastr';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { CdNotification } from '../models/cd-notification';\nimport { FinishedTask } from '../models/finished-task';\nimport { ServicesModule } from './services.module';\nimport { TaskManagerMessageService } from './task-manager-message.service';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class NotificationService {\n  // Observable sources\n  private dataSource = new BehaviorSubject<CdNotification[]>([]);\n\n  // Observable streams\n  data$ = this.dataSource.asObservable();\n\n  KEY = 'cdNotifications';\n\n  constructor(\n    public toastr: ToastsManager,\n    private taskManagerMessageService: TaskManagerMessageService\n  ) {\n    const stringNotifications = localStorage.getItem(this.KEY);\n    let notifications: CdNotification[] = [];\n\n    if (_.isString(stringNotifications)) {\n      notifications = JSON.parse(stringNotifications, (key, value) => {\n        if (_.isPlainObject(value)) {\n          return _.assign(new CdNotification(), value);\n        }\n        return value;\n      });\n    }\n\n    this.dataSource.next(notifications);\n  }\n\n  /**\n   * Removes all current saved notifications\n   */\n  removeAll() {\n    localStorage.removeItem(this.KEY);\n    this.dataSource.next([]);\n  }\n\n  /**\n   * Method used for saving a shown notification (check show() method).\n   * @param {Notification} notification\n   */\n  save(type: NotificationType, message: string, title?: string) {\n    const notification = new CdNotification(type, message, title);\n\n    const recent = this.dataSource.getValue();\n    recent.push(notification);\n    while (recent.length > 10) {\n      recent.shift();\n    }\n\n    this.dataSource.next(recent);\n    localStorage.setItem(this.KEY, JSON.stringify(recent));\n  }\n\n  /**\n   * Method for showing a notification.\n   * @param {NotificationType} type toastr type\n   * @param {string} message\n   * @param {string} [title]\n   * @param {*} [options] toastr compatible options, used when creating a toastr\n   * @memberof NotificationService\n   * @returns The timeout ID that is set to be able to cancel the notification.\n   */\n  show(type: NotificationType, message: string, title?: string, options?: any) {\n    return setTimeout(() => {\n      this.save(type, message, title);\n      switch (type) {\n        case NotificationType.error:\n          this.toastr.error(message, title, options);\n          break;\n        case NotificationType.info:\n          this.toastr.info(message, title, options);\n          break;\n        case NotificationType.success:\n          this.toastr.success(message, title, options);\n          break;\n      }\n    }, 10);\n  }\n\n  notifyTask(finishedTask: FinishedTask, success: boolean = true) {\n    if (finishedTask.success && success) {\n      this.show(\n        NotificationType.success,\n        this.taskManagerMessageService.getSuccessMessage(finishedTask)\n      );\n    } else {\n      this.show(\n        NotificationType.error,\n        this.taskManagerMessageService.getErrorMessage(finishedTask),\n        this.taskManagerMessageService.getDescription(finishedTask)\n      );\n    }\n  }\n\n  /**\n   * Prevent the notification from being shown.\n   * @param {number} timeoutId A number representing the ID of the timeout to be canceled.\n   */\n  cancel(timeoutId) {\n    clearTimeout(timeoutId);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class ServicesModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AuthStorageService } from './auth-storage.service';\nimport { ServicesModule } from './services.module';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class SummaryService {\n  // Observable sources\n  private summaryDataSource = new BehaviorSubject(null);\n\n  // Observable streams\n  summaryData$ = this.summaryDataSource.asObservable();\n  constructor(\n    private http: HttpClient,\n    private authStorageService: AuthStorageService,\n    private ngZone: NgZone\n  ) {\n    this.refresh();\n  }\n\n  refresh() {\n    if (this.authStorageService.isLoggedIn()) {\n      this.http.get('api/summary').subscribe(data => {\n        this.summaryDataSource.next(data);\n        console.log(this.summaryData$);\n      });\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.ngZone.run(() => {\n          this.refresh();\n        });\n      }, 5000);\n    });\n  }\n\n  get() {\n    return this.http.get('api/summary');\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Components } from '../enum/components.enum';\nimport { FinishedTask } from '../models/finished-task';\nimport { Task } from '../models/task';\nimport { ServicesModule } from './services.module';\n\nclass TaskManagerMessage {\n  descr: (metadata) => string;\n  running: (metadata) => string;\n  success: (metadata) => string;\n  error: (metadata) => object;\n\n  constructor(\n    descr: (metadata) => string,\n    running: (metadata) => string,\n    success: (metadata) => string,\n    error: (metadata) => object\n  ) {\n    this.descr = descr;\n    this.running = running;\n    this.success = success;\n    this.error = error;\n  }\n}\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class TaskManagerMessageService {\n  messages = {\n    'rbd/create': new TaskManagerMessage(\n      (metadata) => `Create RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) => `Creating RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.pool_name}/${metadata.image_name}' has been created successfully`,\n      (metadata) => {\n        return {\n          '17': `Name '${metadata.pool_name}/${metadata.image_name}' is already in use.`\n        };\n      }\n    ),\n    'rbd/edit': new TaskManagerMessage(\n      (metadata) => `Update RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) => `Updating RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.pool_name}/${metadata.image_name}' has been updated successfully`,\n      (metadata) => {\n        return {\n          '17': `Name '${metadata.pool_name}/${metadata.name}' is already in use.`\n        };\n      }\n    ),\n    'rbd/delete': new TaskManagerMessage(\n      (metadata) => `Delete RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) => `Deleting RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.pool_name}/${metadata.image_name}' has been deleted successfully`,\n      (metadata) => {\n        return {\n          '39': `RBD image contains snapshots.`\n        };\n      }\n    ),\n    'rbd/clone': new TaskManagerMessage(\n      (metadata) => `Clone RBD '${metadata.child_pool_name}/${metadata.child_image_name}'`,\n      (metadata) => `Cloning RBD '${metadata.child_pool_name}/${metadata.child_image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.child_pool_name}/${\n          metadata.child_image_name\n        }' has been cloned successfully`,\n      (metadata) => {\n        return {\n          '17': `Name '${metadata.child_pool_name}/${\n            metadata.child_image_name\n          }' is already in use.`,\n          '22': `Snapshot must be protected.`\n        };\n      }\n    ),\n    'rbd/copy': new TaskManagerMessage(\n      (metadata) => `Copy RBD '${metadata.dest_pool_name}/${metadata.dest_image_name}'`,\n      (metadata) => `Copying RBD '${metadata.dest_pool_name}/${metadata.dest_image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.dest_pool_name}/${metadata.dest_image_name}' has been copied successfully`,\n      (metadata) => {\n        return {\n          '17': `Name '${metadata.dest_pool_name}/${metadata.dest_image_name}' is already in use.`\n        };\n      }\n    ),\n    'rbd/flatten': new TaskManagerMessage(\n      (metadata) => `Flatten RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) => `Flattening RBD '${metadata.pool_name}/${metadata.image_name}'`,\n      (metadata) =>\n        `RBD '${metadata.pool_name}/${metadata.image_name}' has been flattened successfully`,\n      () => {\n        return {};\n      }\n    ),\n    'rbd/snap/create': new TaskManagerMessage(\n      (metadata) =>\n        `Create snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Creating snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}' ` +\n        `has been created successfully`,\n      (metadata) => {\n        return {\n          '17': `Name '${metadata.snapshot_name}' is already in use.`\n        };\n      }\n    ),\n    'rbd/snap/edit': new TaskManagerMessage(\n      (metadata) =>\n        `Update snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Updating snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}' ` +\n        `has been updated successfully`,\n      () => {\n        return {\n          '16': `Cannot unprotect snapshot because it contains child images.`\n        };\n      }\n    ),\n    'rbd/snap/delete': new TaskManagerMessage(\n      (metadata) =>\n        `Delete snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Deleting snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}' ` +\n        `has been deleted successfully`,\n      () => {\n        return {\n          '16': `Snapshot is protected.`\n        };\n      }\n    ),\n    'rbd/snap/rollback': new TaskManagerMessage(\n      (metadata) =>\n        `Rollback snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Rolling back snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}'`,\n      (metadata) =>\n        `Snapshot ` +\n        `'${metadata.pool_name}/${metadata.image_name}@${metadata.snapshot_name}' ` +\n        `has been rolled back successfully`,\n      () => {\n        return {};\n      }\n    )\n  };\n\n  defaultMessage = new TaskManagerMessage(\n    (metadata) => {\n      return Components[metadata.component] || metadata.component || 'Unknown Task';\n    },\n    (metadata) => {\n      return (\n        'Executing ' + (Components[metadata.component] || metadata.component || 'unknown task')\n      );\n    },\n    (metadata) => 'Task executed successfully',\n    () => {\n      return {};\n    }\n  );\n\n  constructor() {}\n\n  getSuccessMessage(finishedTask: FinishedTask) {\n    const taskManagerMessage = this.messages[finishedTask.name] || this.defaultMessage;\n    return taskManagerMessage.success(finishedTask.metadata);\n  }\n\n  getErrorMessage(finishedTask: FinishedTask) {\n    const taskManagerMessage = this.messages[finishedTask.name] || this.defaultMessage;\n    return (\n      taskManagerMessage.error(finishedTask.metadata)[finishedTask.exception.code] ||\n      finishedTask.exception.detail\n    );\n  }\n\n  getDescription(task: Task) {\n    const taskManagerMessage = this.messages[task.name] || this.defaultMessage;\n    return taskManagerMessage.descr(task.metadata);\n  }\n\n  getRunningMessage(task: Task) {\n    const taskManagerMessage = this.messages[task.name] || this.defaultMessage;\n    return taskManagerMessage.running(task.metadata);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { ExecutingTask } from '../models/executing-task';\nimport { FinishedTask } from '../models/finished-task';\nimport { Task } from '../models/task';\nimport { ServicesModule } from './services.module';\nimport { SummaryService } from './summary.service';\n\nclass TaskSubscription {\n  name: string;\n  metadata: object;\n  onTaskFinished: (finishedTask: FinishedTask) => any;\n\n  constructor(name, metadata, onTaskFinished) {\n    this.name = name;\n    this.metadata = metadata;\n    this.onTaskFinished = onTaskFinished;\n  }\n}\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class TaskManagerService {\n  subscriptions: Array<TaskSubscription> = [];\n\n  constructor(summaryService: SummaryService) {\n    summaryService.summaryData$.subscribe((data: any) => {\n      if (!data) {\n        return;\n      }\n      const executingTasks = data.executing_tasks;\n      const finishedTasks = data.finished_tasks;\n      const newSubscriptions: Array<TaskSubscription> = [];\n      for (const subscription of this.subscriptions) {\n        const finishedTask = <FinishedTask>this._getTask(subscription, finishedTasks);\n        const executingTask = <ExecutingTask>this._getTask(subscription, executingTasks);\n        if (finishedTask !== null && executingTask === null) {\n          subscription.onTaskFinished(finishedTask);\n        }\n        if (executingTask !== null) {\n          newSubscriptions.push(subscription);\n        }\n        this.subscriptions = newSubscriptions;\n      }\n    });\n  }\n\n  subscribe(name, metadata, onTaskFinished: (finishedTask: FinishedTask) => any) {\n    this.subscriptions.push(new TaskSubscription(name, metadata, onTaskFinished));\n  }\n\n  _getTask(subscription: TaskSubscription, tasks: Array<Task>): Task {\n    for (const task of tasks) {\n      if (task.name === subscription.name && _.isEqual(task.metadata, subscription.metadata)) {\n        return task;\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { ExecutingTask } from '../models/executing-task';\nimport { FinishedTask } from '../models/finished-task';\nimport { NotificationService } from './notification.service';\nimport { ServicesModule } from './services.module';\nimport { TaskManagerMessageService } from './task-manager-message.service';\nimport { TaskManagerService } from './task-manager.service';\n\n@Injectable({\n  providedIn: ServicesModule\n})\nexport class TaskWrapperService {\n  constructor(\n    private notificationService: NotificationService,\n    private taskManagerMessageService: TaskManagerMessageService,\n    private taskManagerService: TaskManagerService\n  ) {}\n\n  wrapTaskAroundCall({\n    task,\n    call,\n    tasks\n  }: {\n    task: FinishedTask;\n    call: Observable<any>;\n    tasks?: ExecutingTask[];\n  }) {\n    return new Observable((observer: Subscriber<any>) => {\n      call.subscribe(\n        (resp) => {\n          if (resp.status === 202) {\n            this._handleExecutingTasks(task, tasks);\n          } else {\n            task.success = true;\n            this.notificationService.notifyTask(task);\n          }\n        },\n        (resp) => {\n          task.success = false;\n          task.exception = resp.error;\n          this.notificationService.notifyTask(task);\n          observer.error();\n        },\n        () => {\n          observer.complete();\n        }\n      );\n    });\n  }\n\n  _handleExecutingTasks(task: FinishedTask, tasks?: ExecutingTask[]) {\n    this.notificationService.show(\n      NotificationType.info,\n      this.taskManagerMessageService.getRunningMessage(task),\n      this.taskManagerMessageService.getDescription(task)\n    );\n    const executingTask = new ExecutingTask(task.name, task.metadata);\n    if (tasks) {\n      tasks.push(executingTask);\n    }\n    this.taskManagerService.subscribe(\n      executingTask.name,\n      executingTask.metadata,\n      (asyncTask: FinishedTask) => {\n        this.notificationService.notifyTask(asyncTask);\n      }\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from './api/api.module';\nimport { ComponentsModule } from './components/components.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { Copy2ClipboardButtonDirective } from './directives/copy2clipboard-button.directive';\nimport { DimlessBinaryDirective } from './directives/dimless-binary.directive';\nimport { PasswordButtonDirective } from './directives/password-button.directive';\nimport { PipesModule } from './pipes/pipes.module';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthStorageService } from './services/auth-storage.service';\nimport { FormatterService } from './services/formatter.service';\nimport { ServicesModule } from './services/services.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PipesModule,\n    ComponentsModule,\n    ServicesModule,\n    DataTableModule,\n    ApiModule\n  ],\n  declarations: [\n    PasswordButtonDirective,\n    DimlessBinaryDirective,\n    Copy2ClipboardButtonDirective,\n    AutofocusDirective\n  ],\n  exports: [\n    ComponentsModule,\n    PipesModule,\n    ServicesModule,\n    PasswordButtonDirective,\n    Copy2ClipboardButtonDirective,\n    DimlessBinaryDirective,\n    DataTableModule,\n    ApiModule,\n    AutofocusDirective\n  ],\n  providers: [\n    AuthStorageService,\n    AuthGuardService,\n    FormatterService\n  ]\n})\nexport class SharedModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}